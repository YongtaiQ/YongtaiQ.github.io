<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>杂谈</title>
    <url>/2022/04/18/2022-4-18/</url>
    <content><![CDATA[<blockquote>
<p>没必要把事情想得太糟糕；</p>
<p>没必要担心还没发生的事情。</p>
</blockquote>
<span id="more"></span>

<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=298 height=52 src="//music.163.com/outchain/player?type=2&id=673422&auto=0&height=32"></iframe>

<ol>
<li>上周项目论文费老劲赶出来了，可惜不能加自己的名字(苦笑)，组会后躺了两天。毕业条件还得写一篇，还是没什么方向。作自己不感兴趣的事，真的太被动了，如果不是有ddl逼着，真的一点都不想做。</li>
<li>本周四前完成项目论文的修改和字句梳理，翻译一下，1.6w字，费劲，今天得规划规划时间。结了后再东拼西凑写一篇，先写出来再说，边写边做实验。</li>
<li>copilot感觉蛮有意思，申请了到现在没给我发邮件，急；发现叫Logseq，Obsidian，思源笔记的工具，写的markdown插件很多，功能如果用HTML实现的话很麻烦。博客捣鼓到现在，前端了解了一些，不过已经懒得弄了，因为我发现，相比于形式，产出是一件更困难的事，我想表达的是，真正在写的时候会有江郎才尽之类的感觉。对于这些工具也一样，能用够用就够了，在掌握细节上面花太多功夫实在是没必要，毕竟我是个连画图都懒得画喜欢手画拍照上传的人。</li>
<li>我觉得这样的任务栏很好看<img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202204181511523.png" alt="f7207564982d1201a8b78dc5b4c9401"></li>
<li>阿里云不限速很棒，在线功能很友好。</li>
<li>很久之前想说一直忘记，键盘最后一排全部倒着安装真的很舒服，完全不咯手，很符合我的手型和打字习惯，掌托完全是妥协的产物嘛，这么简单的布局，厂商为什么不这么做呢？到底是因为跟风和行业标准太重要了，还是能轻易妥协的用户体验不重要呢？<img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202204181509986.jpg" alt="1e84d6b880cbd9e9edd1e32e5ab3c83"></li>
<li>羽毛球：昨天突然想试试羽毛球，太久没运动，生疏+社恐，过了会儿就适应了，融入别人的圈子是一件很容易的事情，只要我内心真的想要融入。</li>
<li>以前穿线都是几把拍子一起穿，昨天发现弓11很真的看重穿线师的手法，一个半月前家乡穿的现在掉磅到根本没法打，更渔网一样打不远，另外差不多时间两把北京穿的900i都挺合适的，没来没想用900i的，负担重，怕旧伤未愈。太久没动了，以前对拉都是我体能拉爆别人，昨天5分钟自己站都站不稳，今天浑身疼。校队恢复训练了，我想每天先简单跑5公里恢复一下，另外伤没好，都半年了，唉。</li>
<li>从小身边的家人朋友都告诉我要提前规划，要为自己负责。我说了我去年的情况，导师开导我说人总有适合自己的活法，不见得开发或者在北京、在美国有多适合我，我的条件已经很好的。另外有两句对我说的话，难得让我觉得很受感动，写下来，不然就忘掉了。</li>
</ol>
<blockquote>
<p>没必要把事情想得太糟糕；</p>
<p>没必要担心还没发生的事情。</p>
</blockquote>
<hr>
<p>西走菜菜</p>
<p>2022&#x2F;4&#x2F;18</p>
]]></content>
      <categories>
        <category>生活和诗歌</category>
      </categories>
  </entry>
  <entry>
    <title>杂谈&amp;恼人的HEVC,FFmpeg,过时的960M</title>
    <url>/2022/04/30/2022-4-30/</url>
    <content><![CDATA[<p>疫情五一不放假也出不了校门，还三天两头<code>不许动</code>、核酸检测。</p>
<p>今天太无聊了。</p>
<span id="more"></span>

<ol>
<li><p>昨晚做了个很长很精彩的4连梦中梦，今早醒来打电话告诉女友却发现不记得了很烦；</p>
</li>
<li><p>看了个电影《实习生》还挺好看的：<a href="https://www.bilibili.com/bangumi/play/ss32988?t=7051&spm_id_from=333.337.top_right_bar_window_history.content.click">实习生-电影-高清正版在线观看-bilibili-哔哩哔哩</a>；</p>
</li>
<li><p>重读了一下<a href="https://baike.baidu.com/item/%E8%AF%B8%E8%91%9B%E4%BA%AE/21048?fr=kg_hanyu#6">诸葛亮（三国时期蜀汉丞相）_百度百科 (baidu.com)</a>隆中对，前后出师表，好奇三国的宏观演化，看了一下这个挺直观的。</p>
<iframe src="//player.bilibili.com/player.html?aid=888235424&bvid=BV18K4y1G7Ax&cid=343115148&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>

<p>果然是一个农业大国，和大航海时代后的中国重心完全不一样了，孔明真是一个站在时代之外的人，说话一针见血。想看是因为，想到<code>臣本布衣，躬耕于南阳，苟全性命于乱世，不求闻达于诸侯</code>，想问问他，在如今国际形势、经济形势差的时代下，作为一个不普通的普通人会怎么选择；</p>
</li>
<li><p>論壇有人提出一种工具，说会节省更多储存空间拯救硬盘，并且画质会略有提升。我了解了一下发现是对视频格式H265编码的转码，现在主流是H264；如此的话，格式工厂效率更高，蛮有意思的，尝试了一下，确实大小缩小了一半，算力换空间；不过win10自带播放器播直接放不了，需要去装个HEVC插件，VLC等其他播放器兼容性很好；</p>
</li>
<li><p>顺便发现格式工厂视频合并，简单的剪辑还挺方便的。本来想玩玩吃鸡，查查SDMP，今天懒得玩，懒得查；</p>
</li>
<li><p>昨晚在思考为什么国内IT只有互联网发展这么好，日本等其他国家IT确实全面发展。用房地产的发展模式想了一下。个人命运真是难以捉摸。</p>
</li>
</ol>
<table>
<thead>
<tr>
<th>房地产</th>
<th>互联网社交媒体</th>
<th>实体工商业及服务业</th>
<th>服务企业数字建设</th>
</tr>
</thead>
<tbody><tr>
<td>城市化</td>
<td>美国头部公司模式</td>
<td>边缘化</td>
<td>实业附属品</td>
</tr>
<tr>
<td>涌入城市，农村闲置</td>
<td>照抄，符合大众胃口，已经被市场验证</td>
<td>民资先天发育畸形，后天营养不良</td>
<td>中小场、外包</td>
</tr>
<tr>
<td>市场无外资争夺</td>
<td>市场有墙无外资争夺</td>
<td>市场有争夺、有贸易保护、力度太小、钱太少</td>
<td>G</td>
</tr>
<tr>
<td>瓜分国内市场，压榨需求得利</td>
<td>瓜分国内市场，压榨需求得利</td>
<td>内需小、中高端外需小、市场小</td>
<td>没钱、用户体验性价比太低</td>
</tr>
<tr>
<td>去城市化</td>
<td>国际化</td>
<td>民资崛起</td>
<td>遥遥无期</td>
</tr>
</tbody></table>
<hr>
<p>2022-4-30 </p>
<p>西走菜菜</p>
<hr>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202204301937617.png" alt="image-20220430193726038"></p>
<p>尝试了包括格式工厂、HD Video Converter Factory Pro、MediaCoder在内的其它工具，960M显卡HEVC265始终不支持，恼人，只能用集显加速。</p>
<p>很遗憾，靠自己批量转码视频到HEVC的想法破灭了。</p>
<p>附：我在训练DRL环境时候配过了CUDA加速独显是成功的；也设置了N控制面板的独显使用。</p>
<p>看来视频修复优化、AI模型训练、win是真的不行，还得Linux或者基于L的mic，环境问题简直莫名其妙，另外不太了解Linux的转码生态是怎么回事。</p>
<p>不玩了，除非大规模推出HEVC视频，否则老老实实用吧。主流是什么用什么就完事了，自己用小笔记本训练太费劲了，还独显加速不起来。</p>
<p>要不用Linux去转码，要不等一波win一系列专业视频软件升级到能顺畅支持我的显卡，应该也就是下下个版本的事了，再自己捣鼓玩，毕竟HEVC相对新，但是高码率视频必然淘汰avc h264。</p>
<hr>
<p>CPU集显独自奋战一夜，效果良好，我对迟暮的英雄表示心疼，翻阅格式工厂发现其内核是FFmpeg，决定直接上FFmpeg，实现GPU加速。</p>
<p>下载，配置环境变量，FFmpeg跑通。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ffmpeg -i 输入的影音文件路径 -vcodec libx265 -x265-params lossless=1 -preset placebo 输出的影音文件路径</span><br><span class="line"></span><br><span class="line">ffmpeg -i input.mp4 -c:v libx265 output.mp4 </span><br><span class="line"></span><br><span class="line">ffmpeg -i 输入 -c:v libx265 输出</span><br><span class="line"></span><br><span class="line">ffmpeg -hwaccel cuda -hwaccel_output_format cuda -i 输入 -c:v h264_nvenc -preset slow </span><br></pre></td></tr></table></figure>


<p>ffmpeg -i 命令这篇有解释，他的系列文章写得挺好的<a href="https://www.bilibili.com/read/cv4425794/">https://www.bilibili.com/read/cv4425794/</a></p>
<p>这里有篇博客写的很全没详细读，先mark一下<a href="https://magiclen.org/ffmpeg-h265/">如何用FFmpeg将影像转成H.265&#x2F;HEVC格式？ | MagicLen</a></p>
<p>貌似对症下药<a href="https://www.csdn.net/tags/MtTaEg4sNDQyMDgxLWJsb2cO0O0O.html">https://www.csdn.net/tags/MtTaEg4sNDQyMDgxLWJsb2cO0O0O.html</a></p>
<p>官方文档最详细<a href="https://developer.nvidia.com/blog/nvidia-ffmpeg-transcoding-guide/">https://developer.nvidia.com/blog/nvidia-ffmpeg-transcoding-guide/</a></p>
<hr>
<p>没搞明白，libx的cpu没问题，nvenc独显跑不起来。</p>
<p>尝试更新显卡驱动，更新CUDA，摧毁了我的旧DRL环境5555，有点毁心态了。</p>
<p><code>nvidia-smi</code></p>
<p>Sun May  1 14:19:43 2022<br>+—————————————————————————–+<br>| NVIDIA-SMI 512.59       Driver Version: 512.59       CUDA Version: 11.6     |</p>
<p>配置完成，测试h264_nvenc还是不行。</p>
<p>看Video Encode and Decode GPU Support Matrix文档</p>
<p><a href="https://developer.nvidia.com/video-encode-and-decode-gpu-support-matrix-new">https://developer.nvidia.com/video-encode-and-decode-gpu-support-matrix-new</a></p>
<table>
<thead>
<tr>
<th align="left">BOARD</th>
<th align="left">FAMILY</th>
<th align="left">CHIP</th>
<th align="left">NVENC Generation</th>
<th align="left">Desktop&#x2F; Mobile</th>
<th align="left"># OF CHIPS</th>
<th align="left"># OF NVENC &#x2F;CHIP</th>
<th align="left">Total # of NVENC</th>
<th align="left">Max # of concurrent sessions</th>
<th align="left">H.264 (AVCHD) YUV 4:2:0</th>
<th align="left">H.264 (AVCHD) YUV 4:4:4</th>
<th align="left">H.264 (AVCHD) Lossless</th>
<th align="left">H.265 (HEVC) 4K YUV 4:2:0</th>
<th align="left">H.265 (HEVC) 4K YUV 4:4:4</th>
<th align="left">H.265 (HEVC) 4K Lossless</th>
<th align="left">H.265 (HEVC) 8k</th>
<th align="left">HEVC 10-bit support</th>
<th align="left">HEVC B Frame support</th>
</tr>
</thead>
<tbody><tr>
<td align="left">GeForce GTX 745 &gt; 750 Ti</td>
<td align="left">Maxwell (1st Gen)</td>
<td align="left">GM107</td>
<td align="left">4th Gen</td>
<td align="left">D</td>
<td align="left">1</td>
<td align="left">1</td>
<td align="left">1</td>
<td align="left">3</td>
<td align="left">YES</td>
<td align="left">YES</td>
<td align="left">YES</td>
<td align="left">NO</td>
<td align="left">NO</td>
<td align="left">NO</td>
<td align="left">NO</td>
<td align="left">NO</td>
<td align="left">NO</td>
</tr>
<tr>
<td align="left">GeForce 845M &#x2F; 940M &#x2F; 940MX &#x2F; 945M</td>
<td align="left">Maxwell (1st Gen)</td>
<td align="left">GM107</td>
<td align="left">4th Gen</td>
<td align="left">M</td>
<td align="left">1</td>
<td align="left">1</td>
<td align="left">1</td>
<td align="left">3</td>
<td align="left">YES</td>
<td align="left">YES</td>
<td align="left">YES</td>
<td align="left">NO</td>
<td align="left">NO</td>
<td align="left">NO</td>
<td align="left">NO</td>
<td align="left">NO</td>
<td align="left">NO</td>
</tr>
<tr>
<td align="left">GeForce GTX 850A &gt; 960A</td>
<td align="left">Maxwell (1st Gen)</td>
<td align="left">GM107</td>
<td align="left">4th Gen</td>
<td align="left">M</td>
<td align="left">1</td>
<td align="left">1</td>
<td align="left">1</td>
<td align="left">3</td>
<td align="left">YES</td>
<td align="left">YES</td>
<td align="left">YES</td>
<td align="left">NO</td>
<td align="left">NO</td>
<td align="left">NO</td>
<td align="left">NO</td>
<td align="left">NO</td>
<td align="left">NO</td>
</tr>
<tr>
<td align="left">GeForce GTX 850M &gt; 960M</td>
<td align="left">Maxwell (1st Gen)</td>
<td align="left">GM107</td>
<td align="left">4th Gen</td>
<td align="left">M</td>
<td align="left">1</td>
<td align="left">1</td>
<td align="left">1</td>
<td align="left">3</td>
<td align="left">YES</td>
<td align="left">YES</td>
<td align="left">YES</td>
<td align="left">NO</td>
<td align="left">NO</td>
<td align="left">NO</td>
<td align="left">NO</td>
<td align="left">NO</td>
<td align="left">NO</td>
</tr>
</tbody></table>
<p>被戏耍了，很烦，瞬间苍老，原因找到了，就是硬件不支持，960M据然太老不支持HEVC编码、解码；心态崩了。</p>
<hr>
<p>2022&#x2F;5&#x2F;1</p>
]]></content>
      <categories>
        <category>生活和诗歌</category>
      </categories>
  </entry>
  <entry>
    <title>关于字母圈的想法</title>
    <url>/2022/04/21/About-SM/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试，格式0101哦~." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">
  <script id="hbeData" type="hbeData" data-hmacdigest="fe633fc5be5a854d1477139af45c4184e5279d59fd3b34edd3fadfae3d19e72b">c46171a1196e10366485ab7224dde11f207b3858711195c01f85d5fbca4ef26801303c94175fbd4646fc6aa787a1b4c416c3f434e6a52861652f3385afdc06fd6a2f536cbc2e85e4dc8006940b4d33e51386cb5407d39bbc17b2221983f76d6a1b18aada291306c26178d1288bd067a5c670a770b5c016701df3f6c1ff6b778cdf219b49ad6b662cdd185ce4650baeb29470e4f3c0b67e56a88c51b954e15d4ffdef603cea64538c89a29a193e5ffc84eff3568ef7ef8c154c7d5dc230c46af544bc6cb2b6e0c9d3c196503316f6c1e6c29c671a389cbffd1ec30ce9e1ea71902637ad62853a5e0eee3a24fa7ea3d5fc3536b44a263f7463f7456e1189598b9846414ebf520262e4b10c2264df9f143857c0424aabc3d6ae2d3fd8cb8602a119ce5c60c84a0cca2a671d27718f41d59fc8c132697ee9ebf7ce2b1841d42e1ea1623ef6e0ffd85488313f3664acff1beb3565709908b3d381548ac85bc9e46bcea3ffee80d26fbc3de6da0d94240a42a3746801518a4466f70f64561fa637bdfc5f16d876b318642da1cb0ace144a914ef8384cc2eeab30250465aff51bcfc034618741364034a46f8651847c75b503d24b497778505d17260038606b6fc6d2605f717114459fca59abd0797b320fe19fdfdca02558e9c3f8818386b572f78e32db6c844da33086033d2280adce81e7630af0b22be9cd987a0b070afbd0a4167ae5e04c3912332a7cbeeddece45a17311605e6055088a2a9880e5be4db68243c55c87ff4da4709124a3ca0db5db94291c70da2a3ba8fed863aa3f5fef2a409da9ba56723ef72e61703f90b824cc12208ee1692f70bda1f8d8e291f12a4888db53079ab5d69422a3787d0d9504a6c8ad608f690b9496675c4276db9387d5aaf229eb48dbe7b97e6c3bc456775ebc94d0a25ddf4577e6ae3f64b6e9d361c24077e3116e028a8d7b3ea3227ac976003e6cdf78354e750fbabcb0104a8fdb71db69a25269f8614af5e7c173d2294d3f8db62ae501a9dabc537b304759a69499de54eaf90ac91b16c1a3bbb1d06a2ed0b72665eec38d88367f22a021d6d06e70ba0aefb321af34b109d68558f6e989e9136be6f333daface11e4a0d02f5c8cb1526e22cf62cf00e0088b0f8aef48aba811f52fb260cac4b53e873be4ec66e5458c00c28aaa95cf5365dfb8dedbd8792db1d0521114e45e495aa1d02f26fc442a41f3b713e2c2732f788823ff1dc0de8afd32d4f329be283e51226df3f51f214674972e1329b60db2211442708362dd1f58e10af0fb59b3f4d04e6a4d5070ed024d634f1aeb541e9f6dd21f135497a1bb241b12ba8698fb521ff57fecd410550ae3b164e0444f3b4ca0eee5f19baf79e935739ab510b550f1e2d1a43c95f1c83848f390f0a117d71fc9204c8b34c17a93e0f95beca632cb68b820ef7d0003c313d7e781f77f77352707464f19f6873765e50efec2eef1264c4315500d3c7b36c3b8841646436d3550b3d71865f420b3746b3dc4de36158e975d012f8c571a99c2c79732ef920391ed4dc083d2cdf667628c40eafaaf12d12c9efb0323184eaf8da88d51cb10df8bd90168060652bc3c2f0bb22e957627be6f18f8f666a225be699898cda6ad06f55874a204d7e5a80766394e67f78ecc41f97f77d8a2876aaea1e892ecd3fb09e06ad846182f67bf089d68b854d49bd02c7c23dcf31986b79ec8e4272dca8369e6e00ff9e70c86fd2c4be8bd2af11ad9d0aa7e30d76d1ffaef6b0d2e3d73f16f40ad6eadd3923ce11e4cb9d3d7bda6f71df10b201f9e18d7869c6a80488954620902b64ef3036ede2735a1937b2d1ee214efd3f80a65e2aef871858aaf34316ac01d0d4cf0b4ae1bcc7db45b368c9e81e394c8b128383ffbb149a9f641d2cd492d9e1b24d4cd4c3dea44d74985c4933e1f617e8adf8c9bf3ed1dd50d5a1dc25cd6701187815f09ed16e784583458be500cd5579f736a01c7b2f109b89b5831d864435057dda5d71fa151ad7f83cfc57b5e04160bb98325deef0bd40dfecc0c5de05092fce8716a2d94c54b3311064a68a435ab6cee4536b8bb0de646ca60246554b8e64d680825ac5087b24231643216b49afff2256f134f324b45014c6cd59ccfb442cdc33e36780f6ba1b166c89d68f3f35638840dd603d2847d707a3f78e816cf5044ab9e2f17b117c0f6f8b6a19cbe47b6cda3138eb64783175a1245ce8ec6f011963e4be4dd6c479be5a74236858fff1688ffba2b34d9b3d1a157107a1fcf4f10ce7a3b78e4d2a748626ef542c64666b9ac044b63ffdb47ec81da429e70adf1a1108080db5246634d4d3c35f0509b28f680f074650bbe3ddb3142845d5f6cce18e59290a2947e049cfb79b08012071c8d825e7448596468fe2aa2ecad718c9bab7af44673dca7db0032995f1f59f42425cb7cec68ac168afef9596053816a3ae1f859b558db028436158b51b3fb17e3e621ae51d6fb9860fb2a2f5b2f2dad7c5bfeeca19bb79928b77bc4a501a0bb0216d599c927d29ca7b60b48715f33253504e0163648f7cdf2906ce9013e6a3a549190536ffda99d6acca76374c59dc51ba2835f37bc6d82abfb54448a8caee475e85073167358d1622ff98de771ac5636d39bb8726387ae4eef492db0e220a5aa63db33ae571bdc0221e084af588c75f42671c43c3e25cb14e758be4679ce9e34ddabc3bc86a7205154c00f07ac5b12290daf4c383a3accb7f44341da35addf37a3999ca19875b9f5dfdbb574e33e278cb28e96296ec27c1ac17c7a0c1d7f9b80111ddb69c2bd8d1be7171ac2fb57561b6af4d23d6178bff0060be33601e960198fbea48cef976d2292863cd336995e231748cac8ec4e8400bf3cb82467dea5cab43dca81de61c3b64b9d8ff155f90126600c90742ba818466265a77e13aa78e34def778a91ae753898dfe242c058d74c515723bb96b0274283ad19ad1f1f8545afb2c8c797b15912bc1c973151222c0df852cc1c7762f1fa93d7da659334e23b5a29b7ed950872052f6c7a2e12dadaf0e745d154185a166b5555d199d443cdc28b9dadf4bc8114766ec3109e8357c162c999ec3ad8a08cfe87956a95dce6098c7be4e44b9b5aec3cc614e98242343c8d061abdb7c182e304a147e883975f2199faa7c5b04be678444ce279d8f5c5d0b59d9ae25e665c1dfb4d9b4abbb77e739bc31ee5361a53219dbc4fcff4948c3edb2f1a4cbc523d57e4798d6ccaf003216ed729afcd395a7a36b37dadb629403a4ff52e6b39955f85b7855ed8740f66388d974ba9da6629807db3b379a46b217385b7773abc8f1501127748f0631d158b2125d25c1e86be9f2ec6c290ec7e9907faa2b0a392de861bd618fc37c8c717a033392c00ada024deefbfd6f57ddddc9607275bb920089d27ed99b54380a86c184e640f7ff7ecc209fb38869dc802361ef1aba1963a8db648e9f5953d151098d9bedfd341dd8e1a8bc2acee8effb5e39474937086c212891eae83197225b5603818facae4b3527f5761ecd6a0b9398d4bba253f24066d8bec9b4162313f3849036eb4ddc82e969a68f1b173c67143f7a0a3a61a2ae7320e3c61334b97be50e7ff75d5857de80ce0b7081494beb06002f6b39b58a920ff6acb6d594d5a87ecbd9714fa16c6ff332c7421660843fa834dc0dda22b2e4811f2527114b6d4ac105ae450e7d6fba5615b20f69d016669c744e10a1914baf1c958c5d6bdb978d227ead51cd85472e3b134b84732cd5eac0432b1e2c48564b87dfb8cc6c21a7470dd7dffa1db0b7c529d95973615758ef1f15b591094a70d46df29dcb1d4d35b1fdf8afccf7905d18ea0e45a7a92bfebec7dfc48f6f90b398cf59f0adf623e037e68c86e072cb79d8f08f5e46de059a67ef9d84b063f91bc7438fc8bcf5ef88ac771f825490b6e34fa61eb8c7f7cc1cc07118c3524fdf6ff6f7d74cdc72dbe6f4fc1c3154a082ca993a5e1d51e17ee1d626e36a955345fd6b9dc36a38a6e11e5a39abb2872a29fd514efb600c6998fc84c18890483b8e730838c7477b95806ee49a6ecc46ca70bae38590b8d71914ddd3fbbc4cbb7cae8cf7445166bdb2eda17dd1779b6fce4788679f5c9b7f45befbf48e293ee851296500ede2615922898983dd5dda75b6cd5f5ff7f5f330d164bbb3607f0fe9c67dde603280dbf425e9aff428fb7e967f6e463982fba320941c6eda4cde82f31f1c4b6c95d1744d5972d7642e7b494d3ff6006b6ab318fb532d2e2bde58f6dde8cb336d7a3b62a15f67cffe9479d5a60bce0cf1ed759ef2c5b33001927f53fe68c89d087b266f827a013767b20365b5ec10f72bdf1de5baa2665fbd138d6c0ab7b99b77a0ecbae16d633ad95e6ffe4628bdfab3f0066ba2a6ed3504e2f2f04a9d0bd28841f039502609d345b8eb7ccdb08db800f38b1c5a994866a95d7c9e4605f0cf5111769327857f78a1f5374d0b47d3837694c03946c759bfafdf3972a144ec427b229e6540767476cbdb47eb31f5b979b2f472a090251b337afe0afb569f71837c56b28ec30f9c833b9230853a5b8fa64220c85d1d0baf46a6a1f34d57996e5358e62ee65d76db0202eeb9fec1d6e0c35d4f450c4e6b5411ce6d0b815d1a5507dd39597d4f086c3f0c03c409dfac52f23f0bc3870aac1c989ad2988a311576f646206551fb2736510e7bfe70daa9e8347ab3f865ae6559696e0a422903d35d395053252db89c468ecb055dbb919e38b9b04885bc8e4d54f09df2a5c173b1ddfca931400bfa8b1c214ca65d9a5c3cd43257b42c44e29500e06cf00b554a90c24288ea1030fd5af3dd7843631a39855ddd71dc9a92a5ecd29f7a36044ccda3046751c721802806832411b57cbfd09e2d5aa11d19b6594636b68d4f1690600691d55d572d3647ebe3e237ca50ca056f442184e508fb1f0ae5955ed7967cfe6828ae97a7abf354de055adbb082a90d57a39b161ef5833d9fc05568aa691c9b8790dcec6d2dcb413bf31225e8438161e1ccef2e95ecb549e7875abc140c6e7f95448939e39004af220ca0129ee7d4496ef83e5dff7181f42d4acd5fd975c45381df2d936d7486ee1846f10eaacd80cb02c593084d18abea904d9b84be1512fbe6cfa83418a065c30ca066cfbfdc153edb62df627d15994406b619e29cbb5ce464cd115baaf6e3ac4785323e23cea96ff09cfdc61b61e13ba829b17f50faf1fd30ab78adee058d31628087a665def0f64d9601354d7df509e53a220be47084789843563eb7a5f73d0ce8a95882918036f29b6dcabb8d942b08c9b2e3ce53ef73b09687a9e0adceec84708034eb25018ffef64ef9e090c27b5ed1e88858be7565cc58574ac402c880b080914d3e42851a00480776bce61c06f85032175ca588187a853de8c9d1397f808b61607041bfb334e6f0eb29dd21d6564d878</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-surge">
      <input class="hbe hbe-input-field hbe-input-field-surge" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-surge" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-surge" data-content="还记得sherry的生日吗？如101(对应1月1号)">还记得sherry的生日吗？如101(对应1月1号)</span>
      </label>
      <svg class="hbe hbe-graphic hbe-graphic-surge" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">
        <path d="M1200,9c0,0-305.005,0-401.001,0C733,9,675.327,4.969,598,4.969C514.994,4.969,449.336,9,400.333,9C299.666,9,0,9,0,9v43c0,0,299.666,0,400.333,0c49.002,0,114.66,3.484,197.667,3.484c77.327,0,135-3.484,200.999-3.484C894.995,52,1200,52,1200,52V9z"></path>
      </svg>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>Sherry</category>
      </categories>
  </entry>
  <entry>
    <title>沟通前你要知道的事</title>
    <url>/2022/05/02/Before-communication/</url>
    <content><![CDATA[<p>如何有效沟通？</p>
<span id="more"></span>

<blockquote>
<p>首先，写在前面，所有的沟通和交流，需要，但从来都不是必要的。</p>
<p>无论怎么说，人生，注定是一场独孤的旅程，只能自己走，孤独是人生的常态。</p>
</blockquote>
<p>这篇不是要谈沟通技巧（其实也无非共情，互相尊重），而是要谈在沟通前你要知道的事。</p>
<p>往往面对普通朋友、陌生人，正常沟通很容易；然而当面对自己特别在意的亲人、挚友，往往会因为忘记彼此独立而使沟通变得不愉快，关键在以下。</p>
<p>想要高效的沟通，不妨在开始沟通前，在心里默念，或者直白的告诉对方：</p>
<ol>
<li>沟通是，两个独立的个体，彼此表达自己，然后通过倾听来了解对方的想法；</li>
<li>沟通不应该是互相说服、强迫或者诱导对方认同，这无异于强行改变对方的想法；</li>
<li>不要幻想改变别人的想法，改变一个人，无论自己还是别人都是几乎不可能的。</li>
</ol>
<p>在日常沟通里，太多人都只顾着表达，过嘴瘾，而很难做到倾听对方的想法，有些小技巧：</p>
<ol>
<li>如果内心强大，对方说一些冒犯的话，或者越界强迫你认同，当耳边风就是了，问就是你对；</li>
<li>如果内心不强大，过于在意别人的看法，当出现上面的情况时，不妨直接了当的告诉对方，我知道你的想法了，我尊重，你也改变不了我的想法，如果你不是想单纯的表达或者倾听，这次沟通已经没有继续的价值了。</li>
</ol>
<hr>
<p>2022-5-2</p>
<p>西走菜菜</p>
]]></content>
      <categories>
        <category>生活和诗歌</category>
      </categories>
  </entry>
  <entry>
    <title>生日助记</title>
    <url>/2020/03/15/Birthday/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试，格式0101哦~." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">
  <script id="hbeData" type="hbeData" data-hmacdigest="f4b6ea53891a0cc495188a163b13fb792a8378e8645a51fcb9717645214e0146">2a1fcbdcb7eb03b565a95d6de79a000299bf183e43f90cc0c501fe87835ca5b0e6296255443ab4d9300d9c41a6e387fc29061b1f92354827ef54345fd34e04351764a4ab91bd4775c83840aa9b46c48d61fb0fe0b09d6141bd655828376853621b2a7afc4beef20f752d83f0db97777014f927aa44a1995910dfe2f146cb261b4b77fe083ff710de16963d5cc1ff0fd9b66c7cb0df0bfc17747049ee00d6a95c0b276a2f69625bc234c04e767407620f576ff9c1fe65c28bdabcd7805704d882c0c04c6a8ce63b1a8689fc3e83496097f1f3734b3d810ec55265d7d32a92487b7388022f9bf5c0f2a2aa52fc7c00cca70e3b39c5d603f6af529049149b8c57c1a19874e033b8804c2c1d30a933ba0a570e407858db115703fedd0609ea049b1afc42cbc239c2c345c96b8d8a7d2385392d8e6a1b7b00392a7a4a8b0bc64d433183bf7519ec4d100f95fc27a5f0c294d3d30fa1c18efaa5f25ba6e21112eeba24fb5dc906a2af6c7724a65f99a58bce52b6e07485835803d2da423affb211c0f108859279f63083681437fa204a03ea6e666b1afc4d3023fa33fc07c7463dd41d12994169a8a83ee528f8473ac6df1f8a224d25427a2137f705f18009caa278c7ba72ebffa100c92a5edf7cb286c430fdfff50a4d57241449e2dde20ea0ed8f6b10cda533640c84ad02e57a9cfbc98cac4956a1dcf1f1e7a105926f4afa9640c34022d51e4cb162886816f62e9fa612fc7608392bba45d2c3dbdaf29dd0787a797f3f62990dfe0723787bf84e973334fd99b21af7e387af0171d8cf94a543a6a002cec27cad291ae014436d76b4f8f475d1e03767e12c508ee5f30c58160ed436ef32e61521b9f62731837e37caf42cabe9f8c49f6d3bccef3bc37c3a8c7613afea0fefa15e97c35b8c33f98c13b6e9481fe10f1f289a11f30356b1b47cedc1344e36f0ae1f559621663b175852ba8c31af1d24cf994984e670e00e1c6857605c0e94378d4d196cd0f6c76bb83e91ea3c3dad43eb8aba9404d68bf6f06a23797c3c55fd8d03c0b81d2eb72f15ace8e4dfcab359105cb33da3670cd667ae14ab0a9cf0fbc5a9a2d16e61e2dfb4f71046ee3a9fcdb3892837aa4a0bdd317f9f66cdfe67995fcde49d6d7b90ced95762629a6f4ec11d1542b2b55c7bd3be61c09caaa2f82e73db9277a8c156f13fc5cbfa55a5c6e99707e976f116b951dc017685f848b093c915faa234d315d5d6f5846b7a80521cb5eeb9b6d0d6d9bc5e199540f554a4eb05e91b5618f27202f57c8f708868109f54a2f7ce4d8184ece071cada4c4a5c0bea4a914a825bce87776431ca189877fe2a2a6f58c57925cfc7fb4392502503d5229fe1bf8282ba9b45ea581c9511988542deb2c3189127b3502cb343be377a15e1ae7f0f34c2e87bfc7b224ff1b30b49aa035e8dc02dec0667c9f0bc0cb012ef7d1fa1b1cc603f72cfb25c92cef93a6870614a772eb2246794b6613e9bd946032e36f17e86b227132a5b928d6c6d4f9eba25bee2b2edb741250ec23d4d779022e9651d4d184b107830b33a81be7f5327d666ac5c0f22bdb9d1c4b21f18369b74ef60a27f6b615effcb520708d9ed5756eeb2c38d05adc4bf4316f7aa9f94937e750fe94e8fdffddf729507511bdbafb2b6b89c9bf15a2213d143f176893aa5d67e1c2943a0c20d7e46a15f9ee6c9609fda55ce35358b33eddd2050563a00d7f3835821edf9205c6613e41302be7cc7c255b9921ef9f7e6861002c552930b8784f6995f3f13a6e6d9638f999281a7f3aaf53f542a55725f6d818915d39852a86dd08d9ad1ae608c68d1ae443ccb112ee52e665199710a8843f128cb5131a23a25efa0b49d54b2f0bb05b914ddd5128e7126db2b52cec2bb4efc656fed34b8c26b20f4e9372ec15066139d8f968b8f8801dfecc776eae2606b6140b2b61ed7e12bcd1373214a11f6f44e4e578929cc16a6898fe0faa5ca76398163fff5f6</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-surge">
      <input class="hbe hbe-input-field hbe-input-field-surge" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-surge" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-surge" data-content="还记得我的生日吗？如101(对应1月1号)">还记得我的生日吗？如101(对应1月1号)</span>
      </label>
      <svg class="hbe hbe-graphic hbe-graphic-surge" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">
        <path d="M1200,9c0,0-305.005,0-401.001,0C733,9,675.327,4.969,598,4.969C514.994,4.969,449.336,9,400.333,9C299.666,9,0,9,0,9v43c0,0,299.666,0,400.333,0c49.002,0,114.66,3.484,197.667,3.484c77.327,0,135-3.484,200.999-3.484C894.995,52,1200,52,1200,52V9z"></path>
      </svg>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>日期</category>
      </categories>
  </entry>
  <entry>
    <title>盲柳与睡女</title>
    <url>/2021/03/18/Blind-Willow&amp;Sleeping-Woman/</url>
    <content><![CDATA[<h3 id="盲柳与睡女——村上春树"><a href="#盲柳与睡女——村上春树" class="headerlink" title="盲柳与睡女——村上春树"></a><a href="https://www.baidu.com/link?url=vBU8qWh5VvyLh1o518XvN9s_og0ZHuBp8G5KxdB4S0Vdcjj0aNxGZA0rimbFtA-89x9OWloiM1kzf0SijF4NGa&wd=&eqid=c34874ee000a1ec1000000036052a85c"><em>盲柳与睡女</em>——<em>村上春树</em></a></h3><blockquote>
<p>带有硕果般膨胀感的五月的风。</p>
<p>风里有粗粗拉拉的果皮，有果肉的粘汁，有果核的颗粒。</p>
</blockquote>
<p>潮湿，温热，缺氧，果香味粘稠到让人窒息的风。本来美好的世界，让作者觉得很枯燥无味。</p>
<blockquote>
<p>“不贵，便宜货。”我又看了一眼表盘说道。</p>
<p>“便宜货。”我看着表弟的脸，一字一板地重复，“便宜是便宜，但相当准。”</p>
</blockquote>
<p>自尊心作用，第一遍便宜货声音太小，让表弟听不清，第二遍大声了，又补上了无关紧要的找回面子的话。两个人的生疏是显而易见的。</p>
<span id="more"></span>

<blockquote>
<p>必须回东京做的事一件也没有。但是我不能留在这里，不能。</p>
</blockquote>
<p>回去的理由没有，但是有离开的理由，最大的理由就是，作者觉得亲戚觉得自己不该呆在这里。</p>
<blockquote>
<p>我觉得很久很久以前似乎在哪里见过同样的光景？</p>
</blockquote>
<p>到处可见的就是漠不关心，还要假装关心而陪伴。所有地方都是，不只是餐厅，或是医院。</p>
<blockquote>
<p>白色块体出现了，就像显微镜下的微生物无声地一伸一缩，或改变形状或四下扩散，旋即又聚成一个？</p>
</blockquote>
<p>不太理解，或许这儿就是作者对于自己体内苍蝇的想象吧。</p>
<hr>
<p>看完最明显的感觉就是起鸡皮疙瘩。</p>
<p>主要是因为全文出现的<strong>所有人</strong>都是，<strong>漠不关心，但假装一副关心的模样</strong>，之所以会触动我，是因为作者意识到了这件事，但无力改变自己。</p>
<blockquote>
<p>那位同学其后不久就死了。</p>
</blockquote>
<p>“其实”，”不久”，”就”。他对他的死去的朋友，非常平淡，仿佛和他没有一点关心，仿佛再说一个故事里的，不存在的人一样。</p>
<blockquote>
<p>往前弯腰时，从V 形领的胸口闪出未被太阳晒着的平滑白皙的胸脯。</p>
<p>……我移开眼睛，想象医生们切开她的胸肌，往里面伸进用橡胶手套包裹的手指移动肋骨位置的场面。</p>
<p>“别逗人家笑嘛。”她不无痛苦地说，“一笑胸口还痛的。”</p>
<p><strong>她又笑了。</strong></p>
</blockquote>
<blockquote>
<p>“听起来是够伤心的。”我说。</p>
</blockquote>
<p>陈述句的杀伤力太大了。第二遍读过去就像发生在身边的事一样。</p>
<blockquote>
<p>两人躺在沙滩上天南海北闲聊，那时间里巧克力盒就一直扔在八月火辣辣的阳光下。</p>
<p>对此我们本该有所感觉才是，本该有谁——无论谁——多少说一句有意义的话才是。然而，那个下午我们全然无动于衷，互相开着无聊的玩笑，就那么告别了，任凭盲柳爬满那座山岗。</p>
</blockquote>
<p>他和他死去的朋友一样，不关心哪个做手术的”盲女”，都不关心生了什么病，经历了什么痛苦，两人觉得都是她自己的事，和自己没有任何关系，也完全不顾女孩的痛苦，自己怎么开心怎么来。巧克力说明，看望女生，也只是该走的形式而已。</p>
<p><strong>这就是沾了粉的苍蝇。悄悄爬入你的身体，你自己意识不到，因为睡着了，睡着了指，身处大环境中，你可以意识到，也可以意识不到，这不重要，你影响不了他们，你甚至影响不了自己，你醒不过来。所有人都是只在走形式，做着自己觉得应该做的事而已，做着别人觉得应该做的事而已。</strong></p>
<p><strong>但是你还是会痛苦，因为渴望别人的感情涌入自己，也渴望自己的感情能付出，就像被苍蝇吃尽了五脏六腑一样，自己的感情消失了。</strong></p>
<p>他也不关心自己耳聋的表弟，就是和大家一样，为了表示关心而表示关心，是一种礼貌，客套，套路。对于治疗，他也没有任何期待，但是表弟治疗结束后的呆滞还是说明了他有所期待，他以为治好了，自己就解脱了，不用因而耳疾用客套回应客套了，他以为就能感受到感情了。</p>
<blockquote>
<p>小伙子拨开挡住去路的密密麻麻的盲柳</p>
<p>为了见到沉睡的少女，为了把她从长久的酣睡中唤醒。</p>
</blockquote>
<p>这儿其实作者是有所带入的</p>
<blockquote>
<p>但此时看见他这么歪起脖子把左耳一动不动对着我的样子，我奇异地为之心动了。他那不无稚拙的一举一动就像很久以前听到的雨声一样让我感到分外亲切。</p>
</blockquote>
<p>表弟时时刻刻把左耳对着作者，不想放过一丝一毫的语言，语气，表达，就像听雨一样。这实际上让作者有了愧疚感，对他来说，表弟就像唤醒睡女的小伙子。</p>
<blockquote>
<p>“所有人的眼睛都能看到的事是不那么重要的——大概是这个意思吧……不大明白。”</p>
</blockquote>
<blockquote>
<p>表弟蹙起眉头：“我也稀里糊涂。只是，每当因为耳朵被人同情时，不知为什么我就想起那句话：‘看见印第安人，就是说印第安人不在那里。”</p>
</blockquote>
<blockquote>
<p>表弟歪起头想了想说：“忽然意识到时，简直一点声音都听不到了。不过意识到要花相当一些时间。意识到时已经什么都听不见了，就像堵着耳塞待在深海底。它要持续好大一阵子。那时间里耳朵自然听不见，但不单单是耳朵。耳朵听不见只是它的极小一部分。”</p>
<p>“感觉不快吧？”</p>
<p>表弟短促而坚决地摇了下头：“也不知为什么，倒也没有不快的感觉。只是这个那个不方便，如果听不见声音的话。”</p>
</blockquote>
<p>表弟在说的，其实也是同一件事，看到的根本不重要，因为只是套路而已，大家大同小异，说话前就知道你要说什么，也就没有看的必要了。</p>
<p>“印第安人不在那里”其实是在说，问题不在耳朵，痛苦的原因不在耳朵，没有必要，因为耳朵有问题，就假装一副同情的样子，表弟为了回应假装的同情，还得自己的表演，很累。</p>
<p>听不到了的感觉，同上，知道大家要说什么了，因为什么在说这些话，那听不到其实就无所谓了，听不到反而会是一种快乐，不必为此而费神劳累了，但是会不方便，因为无法回应别人的表演，毕竟还是会让别人不快的。</p>
<blockquote>
<p>现实的车门将打开，我将钻进去赶往别的场所。</p>
<p>我把手放在表弟肩上。“不要紧的。”我说。</p>
</blockquote>
<p>回归现实，去同样的，没有感情投入的地方罢了。要不要紧，根本无所谓。</p>
<hr>
<h2 id="主观唯心者想说的"><a href="#主观唯心者想说的" class="headerlink" title="主观唯心者想说的"></a>主观唯心者想说的</h2><p>你看到的世界的样子，你对待世界的样子，就是你想看到的世界的样子。</p>
<p>人活着很短暂，很难得，珍惜自己的体验，遇到的感情、经历，<strong>最该珍惜的就是自己内心的感受</strong>、变化。保护自己的内心不要被苍蝇吃掉。</p>
<p>不要对外界有什么期待，把期待值降到最低，建设自己的内心，找到自己的快乐。</p>
<p>为自己而活，别人的看法，那些社会的规则，套路客套，想回应就回应，不想回应就不回应，没有那么重要，当个怪人又如何，融入不了社会又如何，自己开心最重要。</p>
<p>莹莹，我喜欢你，你喜欢我，我很开心，这完全是感情的流动，起因是，我愿意，你愿意。而不是我应该，你应该。所以是对这篇文章的否定的证据。</p>
<hr>
<p>2021&#x2F;3&#x2F;18</p>
<p>西走菜菜</p>
<hr>
<h2 id="和莹莹的简单讨论"><a href="#和莹莹的简单讨论" class="headerlink" title="和莹莹的简单讨论"></a>和莹莹的简单讨论</h2><blockquote>
<p>西走菜菜:你可以说说你的看法，先说你对文章的看法，再说对我的东西的看法</p>
<p>Sherry:我之前写得没了</p>
<p>Sherry:但是感觉我们想的差不多</p>
<p>西走菜菜:哪有什么看不懂的吗？</p>
<p>Sherry:写公交车上的老人有什么作用呢</p>
<p>Sherry:感觉很诡异那段</p>
<p>Sherry:我以前觉得</p>
<p>西走菜菜:我觉得详细描写公交，是为了说明他俩的生疏，以及他对于表弟看病的不关心</p>
<p>Sherry:是表达男主的注意力不在表弟身上，而去思考乱七八糟的事情</p>
<p>西走菜菜:是的</p>
<p>Sherry:我觉得我是看了好多遍思考才能理解一点的</p>
<p>西走菜菜:还有看不懂的点吗？</p>
<p>Sherry:为啥女孩觉得拯救自己的不是男友啊</p>
<p>Sherry:是意识到了吗男友不关心</p>
<p>西走菜菜:对</p>
<p>Sherry:那为啥不直接说呢</p>
<p>Sherry:感觉她不在乎的样子</p>
<p>西走菜菜:没有意义</p>
<p>Sherry:没意义为啥还在一起</p>
<p>西走菜菜:因为大家都一样</p>
<p>西走菜菜:这就是这篇文章的世界观</p>
<p>Sherry:嗯</p>
<p>西走菜菜:默认拯救的小伙子不存在</p>
<p>Sherry:感觉看完自己也像聋了</p>
<p>西走菜菜:是呀</p>
<p>Sherry:就是一种被隔膜的感觉</p>
<p>西走菜菜:嗯，感觉人和人的距离感，没有人真的关心自己</p>
<p>Sherry:但其实表弟和女孩是希望得到关心的吧</p>
<p>西走菜菜:我变成这样也就是这些年一直抗争的结果吧，算是找到了出路</p>
<p>西走菜菜:当然了，文章里每个人都不关心别人，都希望别人的关心</p>
<p>Sherry:其实多多少少都会有一点，自我满足式的关心</p>
<p>Sherry:因为人和人之间的隔阂难以逾越</p>
<p>西走菜菜:对的，文章里就是因为大家都在这样，就去关心，说白了就是客套</p>
<p>西走菜菜:在我看来完全没必要</p>
<p>Sherry:怎么打破呢自我满足的关心</p>
<p>Sherry:我觉得不自觉就开始了</p>
<p>西走菜菜:隔阂的话，文章没法逾越，现实里，比想象的还要轻松得多</p>
<p>西走菜菜:自我满足的关心，指的是什么？</p>
<p>西走菜菜:为了关心别人而关心别人？</p>
<p>Sherry:我的关心不是别人需要的</p>
<p>Sherry:人性的疏忽与散漫</p>
<p>Sherry:为什么这么说</p>
<p>西走菜菜:首先呢，关心从来都不嫌多，只是看有没有必要了</p>
<p>西走菜菜:人性的疏忽和散漫也只是针对，对方是否是你真正在乎的人</p>
<p>Sherry:不是呢怎么办</p>
<p>西走菜菜:打破这个很简单，细心感受人与人的感情，别人的喜欢，享受它，回应它，介入彼此的生活</p>
<p>西走菜菜:打破隔阂，就是互相信任，互相介入彼此生活</p>
<p>西走菜菜:文章有个背景，是工作丢了，女朋友没了，母亲死了，熟悉的家也离开了，独自在陌生的东京。个人很绝望很孤独，是和外界联系最浅的时候。</p>
<p>西走菜菜:你有我，我不会离开你的</p>
<p>西走菜菜:你是最贴近的心底的人，我也一样，我们是心贴心的，作者在写这篇文章的时候，无法理解这种感觉，尤其是在日本，更严重。</p>
<p>西走菜菜:能对你彻彻底底，把心敞开，还能被接纳，感觉真的很好。羡慕自己。</p>
<p>Sherry:很全面了</p>
<p>西走菜菜:小可爱，我喜欢你</p>
<p>Sherry:<strong>我也喜欢你</strong></p>
<p>西走菜菜:喜欢你这件事本身，就让我喜欢自己</p>
<p>Sherry:<strong>哈哈哈哈能被你喜欢这件事，让我喜欢自己</strong></p>
<p>西走菜菜:哈哈哈</p>
<p>西走菜菜:俩傻子</p>
<p>Sherry:不行了</p>
<p>Sherry:想给你安利更多的短篇</p>
<p>西走菜菜:行啊</p>
<p>Sherry:感觉我们想法很接近</p>
<p>西走菜菜:因为你开始接纳我的思想了吧</p>
<p>西走菜菜:只是觉得，你能接纳我的想法了，如果说这能给你带来幸福感，那是再好不过的了</p>
<p>Sherry:嗯，我一天贼幸福</p>
<p>Sherry:有时候就不太把心思放别人身上了</p>
<p>西走菜菜:我的意思是说为啥会带入自己</p>
<p>Sherry:村上的短篇能触动我心的不多</p>
<p>Sherry:烧仓房也不错</p>
<p>Sherry:我也是看了好多遍，越看越恐怖</p>
<p>Sherry:再袭面包店也很好玩，里面的隐喻值得玩味</p>
<p>西走菜菜:值得你用心的人，实际上可能不多，但是呢，稍微辨别一下就好了，没必要自己非得分个清清楚楚去，自己想关心，想付出，想喜欢，那就这么做就好了，不想的话，那就没必要做那些了，不要太在意别人的想法和回应。当然了，如果遇上我这样的，还是得好好珍惜。</p>
<p>Sherry:哈哈哈哈会珍惜的，我以后不结婚了</p>
<p>西走菜菜:这和结不结婚有什么关系</p>
<p>Sherry:就有了男票，就和你联系变少了之类的？</p>
<p>西走菜菜:不会的，放心吧</p>
<p>西走菜菜:不要为没有发生的事担心</p>
<p>Sherry:好吧</p>
<p>Sherry:那你以后有了其他喜欢的女孩呢</p>
<p>西走菜菜:那也不会和你疏远啊</p>
<p>Sherry:好吧，到时候再说吧</p>
<p>西走菜菜:当然了，你要是有什么想法随时都一定要说出来</p>
<p>西走菜菜:我哪儿让你不舒服了，一定要告诉我</p>
<p>西走菜菜:无论是什么事</p>
<p>Sherry:好</p>
<p>西走菜菜:即便说是因为父母，或者女朋友，都一定要说出来。不说我都可能不知道你难受。而且也不要觉得，不说问题就没了，说了也解决不了。要相信我，一定会有解决方法的，不管什么问题都一样。</p>
<p>西走菜菜:要对我说出来</p>
<p>Sherry:我说着呢啊</p>
<p>西走菜菜:我们一起承担，一起解决，就不会太害怕未知的未来了</p>
<p>Sherry:我觉得短时间内我们不会出啥问题</p>
<p>西走菜菜:其实说出来这件事，挺难做到的，尤其是在遇上事的时候，我就是在针对你的担忧，告诉你那时候应该怎么做嘛</p>
<p>西走菜菜:能做到的话，一直都会变好的</p>
<p>Sherry:好吧，我们也应该没啥不能说的</p>
</blockquote>
]]></content>
      <categories>
        <category>生活和诗歌</category>
      </categories>
  </entry>
  <entry>
    <title>Blog+Hexo搭建(五)</title>
    <url>/2022/03/21/Blog+Hexo/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试，格式0101哦~." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">
  <script id="hbeData" type="hbeData" data-hmacdigest="78674cdf62a39c323fbf39caf876f29908cc66849118885479e2364de0ab4db8"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-surge">
      <input class="hbe hbe-input-field hbe-input-field-surge" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-surge" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-surge" data-content="还记得我的生日吗？如101(对应1月1号)">还记得我的生日吗？如101(对应1月1号)</span>
      </label>
      <svg class="hbe hbe-graphic hbe-graphic-surge" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">
        <path d="M1200,9c0,0-305.005,0-401.001,0C733,9,675.327,4.969,598,4.969C514.994,4.969,449.336,9,400.333,9C299.666,9,0,9,0,9v43c0,0,299.666,0,400.333,0c49.002,0,114.66,3.484,197.667,3.484c77.327,0,135-3.484,200.999-3.484C894.995,52,1200,52,1200,52V9z"></path>
      </svg>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>Markdown&amp;Blog</category>
      </categories>
  </entry>
  <entry>
    <title>随手画记录（更）</title>
    <url>/2022/03/23/Casual-painting/</url>
    <content><![CDATA[<p>感觉都是一些碎碎念了。</p>
<h2 id="手绘"><a href="#手绘" class="headerlink" title="手绘"></a>手绘</h2><h3 id="素描"><a href="#素描" class="headerlink" title="素描"></a>素描</h3><p>下面列出来的几幅是跟着正式的入门课学着画的，比跟着试听课画的完整一些。</p>
<p>不过最开始因为工具不足，是在32k纸上画的，可能一些笔运用就不够那么细腻，后来在8k纸上画了才能感觉到区别。</p>
<span id="more"></span>

<h4 id="三棱锥"><a href="#三棱锥" class="headerlink" title="三棱锥"></a>三棱锥</h4><p>2021.3.22，第一幅素描，自此，我的手绘学习旅程也拉开了序幕。</p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203232146506.jpeg" alt="三棱锥"></p>
<h4 id="午后甜点"><a href="#午后甜点" class="headerlink" title="午后甜点"></a>午后甜点</h4><p>2021.3.26，第二幅素描，自我感觉还是挺不错的。</p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203261746908.png" alt="午后甜点"></p>
<h4 id="正方体"><a href="#正方体" class="headerlink" title="正方体"></a>正方体</h4><p>这是2022.3.19画的，右边棱歪得有点过了。</p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203261747892.png" alt="正方体"></p>
<h4 id="礼物盒"><a href="#礼物盒" class="headerlink" title="礼物盒"></a>礼物盒</h4><p>2022.3.22画的，第一次在8开纸上画的素描。</p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203261748508.png" alt="礼物盒"></p>
<p>下面是跟着试听课直播瞎画的，两个小时，带讲一些其他乱七八糟的东西，也确实画得不好看（除了鲸鱼自我感觉还算满意）</p>
<h4 id="花木兰"><a href="#花木兰" class="headerlink" title="花木兰"></a>花木兰</h4><p>2021.11.8，可能是某个老师自己设计的形象，我没见过。</p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203261750126.png" alt="花木兰"></p>
<h4 id="鲸鱼"><a href="#鲸鱼" class="headerlink" title="鲸鱼"></a>鲸鱼</h4><p>2021.11.23，其实海面上还有一只跳出来的小鲸鱼的，但因为时间原因，确实画不好看，就去掉了。</p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203261751241.png" alt="鲸鱼"></p>
<h3 id="速写"><a href="#速写" class="headerlink" title="速写"></a>速写</h3><p>是真的很喜欢速写了，可能因为我只喜欢构图，不喜欢画光影？</p>
<p>速写可以单纯构图，描边时又快乐又随意，描出轮廓是真的好看，而且什么笔都可以画，真的很难不让我喜欢了。</p>
<h4 id="古镇一角"><a href="#古镇一角" class="headerlink" title="古镇一角"></a>古镇一角</h4><p>2021.7.10，画的第一张速写，不得不说，因此彻底爱上了速写，可能因为感觉有点恣意吧。</p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203261752157.png" alt="古镇一角"></p>
<h4 id="街边小铺"><a href="#街边小铺" class="headerlink" title="街边小铺"></a>街边小铺</h4><p>2021.7.31，果然因为才开始画，返回来看这幅的时候，真的感觉挺凌乱的，找不到焦点，阴影什么的涂得也有点过。</p>
<p>要慢慢学会，根据自己的画面进行调整，而不是老师画什么，我就再加些什么。</p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203261753822.png" alt="街边小铺"></p>
<h4 id="名作临摹"><a href="#名作临摹" class="headerlink" title="名作临摹"></a>名作临摹</h4><p>2021.8.1，具体是哪位大师的名作，老师没有介绍我也不太清楚，感觉歪得有点严重……不过速写的好处就是不用过于拘泥吧。</p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203261753820.png" alt="名作临摹"></p>
<h4 id="小小盆景"><a href="#小小盆景" class="headerlink" title="小小盆景"></a>小小盆景</h4><p>2021.8.2，真的好喜欢这种描边，看着很舒服，虽然我速写也才只学了几节课，依旧没有跟完课。加油啊わたし！继续画起来呀！</p>
<p>不过这是在32k纸上画的，和老师一样，可能构图小，感觉32k画起来更舒服，就像之前不少素描也都是32k纸上画的一样，当然不止是因为有一个32k的素描本方便保存的原因。</p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203261754464.png" alt="小小盆景"></p>
<h3 id="彩铅"><a href="#彩铅" class="headerlink" title="彩铅"></a>彩铅</h3><p>彩铅还没有正式开始跟课学，纯属瞎画了，都是跟着试听课随便画的，甚至彩铅都只有24色，没什么好选的颜色。</p>
<h4 id="涂山红红"><a href="#涂山红红" class="headerlink" title="涂山红红"></a>涂山红红</h4><p>2021.12.2，奇奇怪怪的画，感觉可能是头有点扁了，满意的可能只有左耳了。<br>2022.</p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203261755321.png" alt="涂山红红"></p>
<h4 id="满船清梦压星河"><a href="#满船清梦压星河" class="headerlink" title="满船清梦压星河"></a>满船清梦压星河</h4><p>2021.12.18，名字挺好听，但画得有点惨不忍睹，渐变的感觉还是因为彩铅颜色不足而有些匮乏了。</p>
<p>不过倒是第一次知道，原来彩铅渐变是叠色画出来的，以后入个全点色号的绘画专用彩铅，慢慢来。</p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203261756262.png" alt="满船清梦压星河"></p>
<h4 id="天官赐福"><a href="#天官赐福" class="headerlink" title="天官赐福"></a>天官赐福</h4><p>2021.12.21，实在是太傻了，构图是个大问题，画面中最满意的居然是那只蝴蝶。</p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203261757438.png" alt="天官赐福"></p>
<h4 id="奥特曼"><a href="#奥特曼" class="headerlink" title="奥特曼"></a>奥特曼</h4><p> 2021.11，好胖的一个奥特曼，笑死。</p>
<p>为侄子画的，吵着要奥特曼卡片，我也就勉为其难赶鸭子上架了。</p>
<p>没有铅笔，没有橡皮，直接彩铅上，连纸也是我哥随手翻出来的一张广告单，对于一个纯业余绘画爱好且才刚开始学习不久的我来说，画成这样也是难能可贵了，毕竟想改的时候没有橡皮让我擦，但整体起码能认出这是个奥特曼吧，放在这就当是个纪念吧哈哈哈。</p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203261758311.png" alt="奥特曼"></p>
<h3 id="简笔画"><a href="#简笔画" class="headerlink" title="简笔画"></a>简笔画</h3><p>真·瞎画了。</p>
<h4 id="长草颜团子"><a href="#长草颜团子" class="headerlink" title="长草颜团子"></a>长草颜团子</h4><p>哎不记得什么时候画的了，应该在2021年吧，记得老师好像是用马克笔涂色的，我没有，就拿彩色中性笔和彩铅勉强代替了。</p>
<p>画得太瘦了，不可爱了，不过老师的表情包还是蛮有意思的，还有小故事，我记得讲的大概是：</p>
<p>遇见——学生遇到了老师，非常开心，都是粉红心心。</p>
<p>感动——学生努力学画，老师觉得很感动。</p>
<p>耍赖——要画画，要交很多作业啊，学生不想学了不想画了，开始耍赖了。</p>
<p>装睡——老师表示不理你的耍赖，画依旧得画，作业依旧得交。</p>
<p>我错了！——学生认识到了自己的错误，和老师道歉，重新开始了绘画的学习之旅。</p>
<p>送花——学生继续学习，给老师送花。</p>
<p>我走了！——学生学成后，满载而归。</p>
<p>啊，我也得继续加油啊！</p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203261759543.png" alt="长草颜团子"></p>
<p>感觉虽然画了也算不少画了（但其实还是画得相当之少了），可更多时候都是跟着老师一步步来的，感觉无论是谁，跟着老师画都可以画出来作品。</p>
<p>到现在自己还是不太会分析画面，有想画的东西时也还是有点无从下手，更经常在大整体还没定好的时候纠结于一些局部的小细节上。还是得继续慢慢来，自己多画一些，多找一些自己想画的随意摸图，不要总是跟着老师一起画，才能积累到经验。老师只是教会我们一些方法，自己还是得学会去运用才行。</p>
<p>要学会分析，从整体入手呀。</p>
<h2 id="板绘"><a href="#板绘" class="headerlink" title="板绘"></a>板绘</h2><p>啊，板绘，我的梦想啊，至今还停留在最最基本的描线上，甚至连描线都描不好……就先不献丑了吧，留个地，以后画了放呀~</p>
<p>感觉跟着课，没有美术基础是真的画得不太行，差得东西太多了，于是跑去了手绘，从素描速写开始学起了。</p>
<p>以后一定要画好看的画呀~</p>
<hr>
<p>慕雪</p>
<p>2022&#x2F;3&#x2F;23</p>
]]></content>
      <categories>
        <category>小伙伴</category>
      </categories>
  </entry>
  <entry>
    <title>山的那边</title>
    <url>/2022/04/16/Chairzhou/</url>
    <content><![CDATA[<blockquote>
<p>周恩来在文艺工作座谈会和故事片创作会议上的讲话</p>
<p>有的人</p>
</blockquote>
<span id="more"></span>

<h2 id="周恩来在文艺工作座谈会和故事片创作会议上的讲话"><a href="#周恩来在文艺工作座谈会和故事片创作会议上的讲话" class="headerlink" title="周恩来在文艺工作座谈会和故事片创作会议上的讲话"></a>周恩来在文艺工作座谈会和故事片创作会议上的讲话</h2><p>人民喜闻乐见，你不喜欢，你算老几？上海人喜爱评弹、淮剧、越剧，要你北京人去批准干什么？领导人可以有喜好，有人爱看戏，有人爱看画，有人爱古董，这有什么关系？我们看了戏说好，不一定就好，我们的话靠不住，各人有各人的爱好，怎能作为标准？艺术是要人民批准的。只要人民爱好，就有价值；不是反党、反社会主义的，就许可存在，没有权力去禁演。艺术家要面对人民，而不是只面对领导。 </p>
<p>艺术是要人民批准的。只要人民爱好，就有价值；不是反党、反社会主义的，就许可存在，没有权力去禁演。艺术家要面对人民，而不是只面对领导。这是不是主张反对领导呢？不是的。领导在政治上有权提意见，要政治挂帅，但政治挂帅主要是看它是香花还是毒草，是否反党反社会主义，政治上的敏锐要放在这个方面。至于艺术方面，我们懂得很少。 </p>
<p>在座的同志都是做领导的人，希望你们干涉少些，当然不是要你们不负责任。第一，要负责任；第二，要干涉少些。负责任主要指政治上，不要放任毒草，放任修正主义。但是一定要区分清楚，不要把什么都说成是修正主义。有人问我：文艺的教育作用和娱乐作用是不是统一的？是辩证的统一。群众看戏、看电影是要从中得到娱乐和休息，你通过典型化的形象表演，教育寓于其中，寓于娱乐之中。当然要多样化，不能老是打仗。朱德同志说，我打了一辈子仗，想看点不打仗的片子。如果天天让人家看打仗的片子，人家就不爱看，就要去看香港片，这只能说明电影局的工作没做好；反之，一个打仗的片子也没有，让青年丧失战斗性，也不好。现代片多少，历史片多少，要大体上有个比例。至于题材，完全可以允许作者自由选择。 </p>
<p>周恩来在文艺工作座谈会和故事片创作会议上的讲话（一九六一年六月十九日） </p>
<hr>
<h2 id="【有的人】"><a href="#【有的人】" class="headerlink" title="【有的人】"></a>【有的人】</h2><p>──纪念鲁迅有感</p>
<p>有的人活着，<br>他已经死了；<br>有的人死了，<br>他还活着。<br>有的人<br>骑在人民头上：“呵，我多么伟大！”<br>有的人<br>俯下身子给人民当牛马。<br>有的人<br>把名字刻入石头，想“不朽”；<br>有的人<br>情愿作野草，<br>等着地下的火燃烧。<br>有的人<br>他活着别人就不能活；<br>有的人<br>他活着为了多数人更好地活。<br>骑在人民头上的<br>人民把他摔倒；<br>给人民作牛马的<br>人民永远记住他！<br>把名字刻在石头上的<br>名字比尸首烂得更早；<br>只要春风吹到的地方<br>到处是青青的野草。<br>他活着别人就不能活的人，<br>他的下场可以看到；<br>他活着为了多数人更好地活着的人，<br>群众把他抬举得很高，很高。</p>
<hr>
]]></content>
      <categories>
        <category>生活和诗歌</category>
      </categories>
  </entry>
  <entry>
    <title>如何优雅的编写Markdown(一)</title>
    <url>/2020/12/03/Code-Markdown-gracefully/</url>
    <content><![CDATA[<p><strong>答案是Typora PicGo GitHub Blog Hexo</strong></p>
<p>经常向朋友推荐，或者被问到该怎么愉快的使用markdown，各位不妨将我的使用习惯做一个参考。</p>
<p>这里即是导言也是本系列的目录，刚开始看的读者直接阅读，不点击跳转链接，不影响阅读。</p>
<p>Markdown是一个支持很广的轻量化标记语言，通过本文<a href="https://yongtaiq.github.io/2020/12/03/Code-Markdown-gracefully/">如何优雅的编写Markdown(Markdown&amp;Blog笔记一)</a>半小时就能学会，写笔记很方便；而且你不必是markdown专家，配合Typora只需要简单的拖拽和<a href="https://yongtaiq.github.io/2022/03/20/Win10-shortcut-key/">win快捷键 </a>就可以完成大部分操作，这里是<a href="https://yongtaiq.github.io/2022/03/21/Typora-Setting/">Typora的设置(Markdown&amp;Blog笔记三) </a>。有了这两个工具你就可以轻松在本地编写你的markdown啦！</p>
<span id="more"></span>

<p>因为是前端语法，除了markdown还支持html&#x2F;css&#x2F;Latex等等语法，<a href="https://yongtaiq.github.io/2022/03/21/Latex/">Latex&amp;流程图(Markdown&amp;Blog笔记二) </a>，可谓是下限极低上限极高。但是本人更倾向于截屏或者手写拍照插入，内容大于形式。</p>
<p>如果想要分享给朋友会发现图片无法分享，这是因为图片保存在本地路径，<a href="https://yongtaiq.github.io/2022/03/21/Typora+PicGo+GitHub/">Typora+PicGo+GitHub搭建云端图床(Markdown&amp;Blog笔记四) </a>，把图存在云端如Github；PicGo是一个方便的图床管理工具，配合Typora通过简单的拖拽图片，自动帮你完成复制-&gt;上传-&gt;拷贝URL-&gt;目标插入位置，现在你可以分享带有图片的markdown以及导出的各种格式啦！</p>
<p>如果你像我一样，觉得每次分享pdf&#x2F;md&#x2F;图片，太麻烦，本文还将讲述如何通过<a href="https://yongtaiq.github.io/2022/03/21/Blog+Hexo/">Blog+Hexo搭建(Markdown&amp;Blog笔记五) </a>，优雅的分享Markdown，搭建过程，需要极大的耐心。</p>
<h1 id="Markdown基本语法"><a href="#Markdown基本语法" class="headerlink" title="Markdown基本语法"></a>Markdown基本语法</h1><p>请先下载Typora，跟练一遍就足够啦</p>
<h2 id="1-标题："><a href="#1-标题：" class="headerlink" title="1.标题："></a>1.标题：</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">#### 四级标题</span><br><span class="line">##### 五级标题</span><br><span class="line">###### 六级标题</span><br></pre></td></tr></table></figure>

<h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><h2 id="2-字体"><a href="#2-字体" class="headerlink" title="2.字体"></a>2.字体</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 加粗</span></span><br><span class="line">**加粗**</span><br><span class="line"><span class="comment">// 高亮</span></span><br><span class="line">==高亮==</span><br><span class="line"><span class="comment">// 删除线</span></span><br><span class="line">~~删除~~</span><br><span class="line"><span class="comment">// 斜体</span></span><br><span class="line">*斜体*</span><br></pre></td></tr></table></figure>

<p>&#x2F;&#x2F; 加粗<br><strong>加粗</strong><br>&#x2F;&#x2F; 高亮</p>
<p>本站很遗憾不支持高亮效果，各位请自行尝试</p>
<p>&#x2F;&#x2F; 删除线<br><del>删除</del><br>&#x2F;&#x2F; 斜体<br><em>斜体</em></p>
<h2 id="3-引用"><a href="#3-引用" class="headerlink" title="3.引用"></a>3.引用</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//引用语法</span></span><br><span class="line">&gt;作者<span class="number">1</span></span><br><span class="line">&gt;&gt;作者<span class="number">2</span></span><br><span class="line">&gt;&gt;&gt;作者<span class="number">3</span></span><br></pre></td></tr></table></figure>

<p>&#x2F;&#x2F;引用语法</p>
<blockquote>
<p>作者1</p>
<blockquote>
<p>作者2</p>
<blockquote>
<p>作者3</p>
</blockquote>
</blockquote>
</blockquote>
<h2 id="4-分割线"><a href="#4-分割线" class="headerlink" title="4.分割线"></a>4.分割线</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//分割线</span></span><br><span class="line">---</span><br><span class="line"><span class="comment">//分割线</span></span><br><span class="line">****</span><br></pre></td></tr></table></figure>


<hr>
<hr>
<h2 id="5-图片插入"><a href="#5-图片插入" class="headerlink" title="5.图片插入"></a>5.图片插入</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//在线图片/本地图片</span></span><br><span class="line">![我的照片](/image/me.png) --路径</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/15563CS5-2.jpg" alt="15563CS5-2"></p>
<h2 id="6-超链接"><a href="#6-超链接" class="headerlink" title="6.超链接"></a>6.超链接</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//超链接语法</span></span><br><span class="line">[百度](https:<span class="comment">//www.baidu.com/)</span></span><br></pre></td></tr></table></figure>

<p><a href="https://www.baidu.com/">百度</a></p>
<h2 id="7-列表"><a href="#7-列表" class="headerlink" title="7.列表"></a>7.列表</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//无序列表</span></span><br><span class="line">- 目录<span class="number">1</span></span><br><span class="line">- 目录<span class="number">2</span></span><br><span class="line">- 目录<span class="number">3</span></span><br></pre></td></tr></table></figure>
<ul>
<li><p>目录1</p>
</li>
<li><p>目录2</p>
</li>
<li><p>目录3</p>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//有序列表 </span></span><br></pre></td></tr></table></figure>

<p><code>1</code>+<code>.</code> +<code> </code> +名称 </p>
<ol>
<li><p>首页</p>
</li>
<li><p>分类</p>
</li>
<li><p>标签</p>
</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//逐级</span></span><br><span class="line">- <span class="number">001</span>	</span><br><span class="line">  - <span class="number">002</span></span><br><span class="line">    - <span class="number">003</span></span><br></pre></td></tr></table></figure>
<ul>
<li>001    <ul>
<li>002<ul>
<li>003</li>
</ul>
</li>
</ul>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//可勾选</span></span><br><span class="line">- [ ] <span class="number">01</span></span><br><span class="line">- [ ] <span class="number">02</span></span><br></pre></td></tr></table></figure>

<ul>
<li><input disabled="" type="checkbox"> 01</li>
<li><input disabled="" type="checkbox"> 02</li>
</ul>
<h2 id="8-代码块："><a href="#8-代码块：" class="headerlink" title="8.代码块："></a>8.代码块：</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//代码块语法</span></span><br><span class="line"><span class="comment">//```java```   </span></span><br><span class="line"><span class="comment">//```shell```</span></span><br></pre></td></tr></table></figure>

<p>  <strong>1.java代码里面内容不用管</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner; <span class="comment">//键盘扫描类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">Scanner input=<span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);<span class="comment">//创建一个键盘扫描类对象</span></span><br><span class="line">System.out.print(<span class="string">&quot;请您输入内容:&quot;</span>);</span><br><span class="line"><span class="type">int</span> contents=input.nextInt(); <span class="comment">//输入整型</span></span><br><span class="line">String contents1=input.next(); <span class="comment">//输入字符串型</span></span><br></pre></td></tr></table></figure>

<p> <strong>2.shell脚本</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Scanner input=new Scanner(System.in);//创建一个键盘扫描类对象</span><br><span class="line">System.out.print(&quot;请您输入内容:&quot;);</span><br></pre></td></tr></table></figure>

<h3 id="3-小小代码块"><a href="#3-小小代码块" class="headerlink" title="3.小小代码块"></a>3.小小代码块</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">`printf`</span><br></pre></td></tr></table></figure>

<p><code>printf</code></p>
<h2 id="9-表格"><a href="#9-表格" class="headerlink" title="9.表格"></a>9.表格</h2><table>
<thead>
<tr>
<th>成绩</th>
<th>语文</th>
<th>数学</th>
</tr>
</thead>
<tbody><tr>
<td></td>
<td>78</td>
<td>88</td>
</tr>
</tbody></table>
<hr>
<p><strong>恭喜你到此你已经是个可以独立用markdown写笔记的专家啦！</strong></p>
<p>接下来的技巧实用性不高，贴出来做一个参考。</p>
<hr>
<h2 id="10-脚注页内跳转和好用的html标签"><a href="#10-脚注页内跳转和好用的html标签" class="headerlink" title="10.脚注页内跳转和好用的html标签"></a>10.脚注页内跳转和好用的html标签</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//脚注</span></span><br><span class="line">阿这 [^a]</span><br><span class="line">[^a]: 我为什么不显示  <span class="comment">//这一行一般放到文章最后</span></span><br></pre></td></tr></table></figure>

<p>阿这 <a href="%E6%88%91%E4%B8%BA%E4%BB%80%E4%B9%88%E4%B8%8D%E6%98%BE%E7%A4%BA">^a</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//页内跳转 把下面这段话复制到typora，记住一定要按住ctrl并点击才能实现效果</span><br><span class="line">[点我去标题1](# 标题1)</span><br><span class="line"># 标题1</span><br></pre></td></tr></table></figure>

<p>页内跳转&#x2F;&#x2F;博客对这个语法的支持不好，读者请自行尝试<br>[点我去Typora+PicGo+GitHub+Blog+Hexo](# 答案是Typora+PicGo+GitHub+Blog+Hexo)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//漂亮的小代码块</span><br><span class="line">&lt;kbd&gt;ctrl&lt;/kbd&gt;+&lt;kbd&gt;alt&lt;/kbd&gt;+&lt;kbd&gt;del&lt;/kbd&gt;任务管理器</span><br></pre></td></tr></table></figure>

<p><kbd>ctrl</kbd>+<kbd>alt</kbd>+<kbd>del</kbd>任务管理器</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//定制字号</span><br><span class="line">&lt;font size=2.5&gt;定制字号&lt;/font&gt; </span><br></pre></td></tr></table></figure>

<p><font size=2.5>定制字号</font> </p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//下划线</span></span><br><span class="line">&lt;u&gt;sdf&lt;/u&gt;</span><br></pre></td></tr></table></figure>

<p><u>sdf</u></p>
<h2 id="11-Latex-amp-流程图-Markdown-amp-Blog笔记二"><a href="#11-Latex-amp-流程图-Markdown-amp-Blog笔记二" class="headerlink" title="11. Latex&amp;流程图(Markdown&amp;Blog笔记二) "></a>11. <a href="https://yongtaiq.github.io/2022/03/21/Latex/">Latex&amp;流程图(Markdown&amp;Blog笔记二) </a></h2><h2 id="12-工欲善其事必先利其器，学习Typora的设置-Markdown-amp-Blog笔记三-吧"><a href="#12-工欲善其事必先利其器，学习Typora的设置-Markdown-amp-Blog笔记三-吧" class="headerlink" title="12. 工欲善其事必先利其器，学习Typora的设置(Markdown&amp;Blog笔记三) 吧~"></a>12. 工欲善其事必先利其器，学习<a href="https://yongtaiq.github.io/2022/03/21/Typora-Setting/">Typora的设置(Markdown&amp;Blog笔记三) </a>吧~</h2><hr>
<h2 id="本系列和所有相关文章目录"><a href="#本系列和所有相关文章目录" class="headerlink" title="本系列和所有相关文章目录"></a>本系列和所有相关文章目录</h2><ol>
<li><a href="https://yongtaiq.github.io/2020/12/03/Code-Markdown-gracefully/">如何优雅的编写Markdown(Markdown&amp;Blog笔记一) </a></li>
<li><a href="https://yongtaiq.github.io/2022/03/21/Latex/">Latex&amp;流程图(Markdown&amp;Blog笔记二) </a></li>
<li><a href="https://yongtaiq.github.io/2022/03/21/Typora-Setting/">Typora的设置(Markdown&amp;Blog笔记三) </a></li>
<li><a href="https://yongtaiq.github.io/2022/03/21/Typora+PicGo+GitHub/">Typora+PicGo+GitHub搭建云端图床(Markdown&amp;Blog笔记四) </a></li>
<li><a href="https://yongtaiq.github.io/2022/03/21/Blog+Hexo/">Blog+Hexo搭建(Markdown&amp;Blog笔记五) </a></li>
<li><a href="https://yongtaiq.github.io/2022/03/20/Win10-shortcut-key/">win快捷键 </a></li>
</ol>
<hr>
<p>2020&#x2F;12&#x2F;3</p>
]]></content>
      <categories>
        <category>Markdown&amp;Blog</category>
      </categories>
  </entry>
  <entry>
    <title>数据结构API</title>
    <url>/2022/03/15/Data-structure-API/</url>
    <content><![CDATA[<p>interface接口(申明后直接调用方法)-implement实现(不关心)</p>
<h2 id="1-集合类-基本接口"><a href="#1-集合类-基本接口" class="headerlink" title="1. 集合类 基本接口"></a>1. 集合类 基本接口</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Collection&#123;</span><br><span class="line">    add(e);</span><br><span class="line">    iterator迭代器();&#125;</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h3 id="1-1-迭代器"><a href="#1-1-迭代器" class="headerlink" title="1.1 迭代器"></a>1.1 迭代器</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">iterator&#123;</span><br><span class="line">    next();</span><br><span class="line">    hasNext();</span><br><span class="line">    remove();&#125;</span><br></pre></td></tr></table></figure>

<p> next最后会抛出异常，需要先hasNext;</p>
<p>查找一个元素唯一个方法是next；</p>
<h3 id="1-2删除-remove前必须先next，remove删除上次next返回的元素"><a href="#1-2删除-remove前必须先next，remove删除上次next返回的元素" class="headerlink" title="1.2删除 remove前必须先next，remove删除上次next返回的元素;"></a>1.2删除 remove前必须先next，remove删除上次next返回的元素;</h3><h2 id="1-3-Collection-泛型实用方法-所有都能用"><a href="#1-3-Collection-泛型实用方法-所有都能用" class="headerlink" title="1.3 Collection 泛型实用方法,所有都能用:"></a>1.3 Collection 泛型实用方法,所有都能用:</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Collection&lt;E&gt;;</span><br><span class="line"></span><br><span class="line">Iterator&lt;E&gt; <span class="title function_">iterator</span><span class="params">()</span>;<span class="comment">//返回一个用于访问集合每个元素的迭代器    </span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">size</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">boolean</span> <span class="title function_">isEmpty</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">boolean</span> <span class="title function_">contains</span><span class="params">(Object obj)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">boolean</span> <span class="title function_">containsAll</span><span class="params">(Collection&lt;?&gt; c)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">boolean</span> <span class="title function_">equals</span><span class="params">(Object other)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">boolean</span> <span class="title function_">add</span><span class="params">(Object obj)</span>;<span class="comment">//有返回值</span></span><br><span class="line"></span><br><span class="line"><span class="type">boolean</span> <span class="title function_">addAll</span><span class="params">(Collection&lt;? extends&gt; from)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">boolean</span> <span class="title function_">remove</span><span class="params">(Object obj)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">boolean</span> <span class="title function_">removeAll</span><span class="params">(Collection&lt;?&gt; c)</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">clear</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">boolean</span> <span class="title function_">retainAll</span><span class="params">(Collection&lt;?&gt; other)</span>;<span class="comment">//保留，既删除所有与other集合不一样的元素</span></span><br><span class="line">    </span><br><span class="line">Object[] toArray();</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Iterator&lt;E&gt;;</span><br><span class="line"></span><br><span class="line"><span class="type">boolean</span> <span class="title function_">hasNext</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">E <span class="title function_">next</span><span class="params">()</span>;<span class="comment">//到达尾部报错</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">remove</span><span class="params">()</span>;<span class="comment">//删除上次访问对象，紧跟next，如果期间集合发生变化报错</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="2-具体集合"><a href="#2-具体集合" class="headerlink" title="2 具体集合"></a>2 具体集合</h2><p>map结尾的类以外都实现了Collection接口，map结尾的类实现map接口</p>
<h3 id="2-1-链表LinkList"><a href="#2-1-链表LinkList" class="headerlink" title="2.1 链表LinkList"></a>2.1 链表LinkList</h3><p>数组列表，链表共有</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java,util.List&lt;E&gt;;</span><br><span class="line"></span><br><span class="line">ListIterator&lt;E&gt; <span class="title function_">listOterator</span><span class="params">()</span>;<span class="comment">//列表迭代器，用来迭代</span></span><br><span class="line"></span><br><span class="line">ListIterator&lt;E&gt; <span class="title function_">listOterator</span><span class="params">(<span class="type">int</span> index)</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> i,E element)</span>;<span class="comment">//在给定位置添加，无返回值，默认成功</span></span><br><span class="line"></span><br><span class="line">Void <span class="title function_">addAll</span><span class="params">(<span class="type">int</span> i,Collection&lt;? extends E&gt; elements)</span>;</span><br><span class="line"></span><br><span class="line">E <span class="title function_">remove</span><span class="params">(<span class="type">int</span> i)</span>;<span class="comment">//删除该位置元素并返回</span></span><br><span class="line"></span><br><span class="line">E <span class="title function_">get</span><span class="params">(<span class="type">int</span> i)</span>;<span class="comment">//get和set随机访问每一个元素只适用于数组列表，链表只能用迭代器提供的</span></span><br><span class="line"></span><br><span class="line">E <span class="title function_">set</span><span class="params">(<span class="type">int</span> i,E element)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">indexOf</span><span class="params">(Object obj)</span>;<span class="comment">//如果没有返回-1</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">lastIndexOf</span><span class="params">(Object obj)</span>;<span class="comment">//返回列表中最后一次出现的元素，没有返回-1</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ListIterator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">add</span><span class="params">(E newElement)</span>;<span class="comment">//当前位置</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">set</span><span class="params">(E newElement)</span>;<span class="comment">//修改next上次访问位置，如果列表在其间被修改了，会报错</span></span><br><span class="line"></span><br><span class="line"><span class="type">boolean</span> <span class="title function_">hasPrevious</span><span class="params">()</span>;<span class="comment">//反向的hasNext</span></span><br><span class="line"></span><br><span class="line">E <span class="title function_">previous</span><span class="params">()</span>;<span class="comment">//头，抛出异常</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">nextIndex</span><span class="params">()</span>;<span class="comment">//下次调用next返回索引</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">prevIndex</span><span class="params">()</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h4 id="链表专属独有"><a href="#链表专属独有" class="headerlink" title="链表专属独有"></a>链表专属独有</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.LinkedList&lt;E&gt;;</span><br><span class="line"></span><br><span class="line">LinkedList();<span class="comment">//构造空链表</span></span><br><span class="line"></span><br><span class="line">LinkedList(Collection&lt;? <span class="keyword">extends</span> <span class="title class_">E</span>&gt; elements);</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">addFirst</span><span class="params">(E element)</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">addLast</span><span class="params">(E element)</span>;<span class="comment">//在头或尾添加</span></span><br><span class="line"></span><br><span class="line">E <span class="title function_">getFirst</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">E <span class="title function_">getLast</span><span class="params">()</span>;<span class="comment">//返回头或尾元素</span></span><br><span class="line"></span><br><span class="line">E <span class="title function_">removeFirst</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">E <span class="title function_">removeLast</span><span class="params">()</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="2-2-数组列表-ArryList-类-实现了List接口"><a href="#2-2-数组列表-ArryList-类-实现了List接口" class="headerlink" title="2.2 数组列表 ArryList 类 实现了List接口"></a>2.2 数组列表 ArryList 类 实现了List接口</h3><p>List接口（包含的迭代器）描述有顺序的集合，位置重要，两种协议：1get和set随机访问每一个元素只适用于数组列表，2链表只能用迭代器提供的。</p>
<p>Victor同步，多线程同时访问安全；ArryList不同步，多个同时访问不安全。</p>
<h3 id="2-3-散列集-HashSet"><a href="#2-3-散列集-HashSet" class="headerlink" title="2.3 散列集 HashSet"></a>2.3 散列集 HashSet</h3><p>无序</p>
<p>HashTable 散列表用链表数组实现，每个列表 桶。</p>
<p>散列表实现的数据类型如HashSet</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.HashSet&lt;E&gt;;</span><br><span class="line"></span><br><span class="line">HashSet();</span><br><span class="line"></span><br><span class="line">HashSet(Collection&lt;? <span class="keyword">extends</span> <span class="title class_">E</span>&gt; elements);</span><br><span class="line"></span><br><span class="line">HashSet(<span class="type">int</span> initialCapacity);<span class="comment">//构造指定桶的空散列集</span></span><br><span class="line"></span><br><span class="line">HashSet(<span class="type">int</span> initialCapacity,<span class="type">float</span> loadFactor);<span class="comment">//填装因子，大于时再散列</span></span><br><span class="line">    </span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.Object;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">hashCode</span><span class="params">()</span>;<span class="comment">//返回哈希码</span></span><br></pre></td></tr></table></figure>



<h3 id="2-4-树集TreeSet，排序集"><a href="#2-4-树集TreeSet，排序集" class="headerlink" title="2.4 树集TreeSet，排序集"></a>2.4 树集TreeSet，排序集</h3><p>有排序的集合（sorted collection）</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.TreeSet&lt;E&gt;;</span><br><span class="line"></span><br><span class="line">TreeSet();</span><br><span class="line"></span><br><span class="line">TreeSet(Collection&lt;? <span class="keyword">extends</span> <span class="title class_">E</span>&gt; elements);</span><br></pre></td></tr></table></figure>

<p>和比较紧密相关，因为是排序集合</p>
<h3 id="2-5-排序集的-对象比较"><a href="#2-5-排序集的-对象比较" class="headerlink" title="2.5 排序集的 对象比较"></a>2.5 排序集的 对象比较</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.Comparable&lt;T&gt;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">comparable</span><span class="params">(T other)</span>;<span class="comment">//将这个对象this与other比较，this在other之前，返回负值，之后返回正值，相同为0</span></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Comparator&lt;T&gt;;</span><br><span class="line">    </span><br><span class="line"><span class="type">int</span> <span class="title function_">comparable</span><span class="params">(T a,T b)</span>;<span class="comment">//a与b比较</span></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.SortSet&lt;E&gt;;</span><br><span class="line"></span><br><span class="line">Comparator&lt;? <span class="built_in">super</span> E&gt; comparator();<span class="comment">//返回对元素排序的比较器？</span></span><br><span class="line"></span><br><span class="line">E <span class="title function_">first</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">E <span class="title function_">last</span><span class="params">()</span>;<span class="comment">//返回排序集合的最小或最大</span></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.NavigableSet&lt;E&gt;;</span><br><span class="line"></span><br><span class="line">E <span class="title function_">higher</span><span class="params">(E value)</span>;<span class="comment">//返回大于value的最小元素或最大，没有返回null</span></span><br><span class="line"></span><br><span class="line">E <span class="title function_">lower</span><span class="params">(E value)</span>;</span><br><span class="line"></span><br><span class="line">E <span class="title function_">ceiling</span><span class="params">(E value)</span>;</span><br><span class="line"></span><br><span class="line">E <span class="title function_">floor</span><span class="params">(E value)</span>;<span class="comment">//返回最大或最小，没有则null</span></span><br><span class="line"></span><br><span class="line">E <span class="title function_">pollFirst</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">E <span class="title function_">pollLast</span><span class="params">()</span>;<span class="comment">//删除并返回这个排序集的最大或最小，空null</span></span><br><span class="line"></span><br><span class="line">Iterator&lt;E&gt; <span class="title function_">descendingIterator</span><span class="params">()</span>;<span class="comment">//返回一个按递减顺序遍历集中元素的迭代器</span></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.TreeSet&lt;E&gt;;</span><br><span class="line"></span><br><span class="line">TreeSet();</span><br><span class="line"></span><br><span class="line">TreeSet(Collection&lt;? <span class="built_in">super</span> E&gt; c);<span class="comment">//构造树，用指定比较器对其中元素排序</span></span><br><span class="line"></span><br><span class="line">TreeSet(Collection&lt;? <span class="keyword">extends</span> <span class="title class_">E</span>&gt; elements);<span class="comment">//构造树，所有元素添加，与给定集相同元素的比较器</span></span><br></pre></td></tr></table></figure>



<h3 id="2-6-队列Queue与双端队列Deque"><a href="#2-6-队列Queue与双端队列Deque" class="headerlink" title="2.6 队列Queue与双端队列Deque"></a>2.6 队列Queue与双端队列Deque</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Queue&lt;E&gt;;</span><br><span class="line"></span><br><span class="line"><span class="type">boolean</span> <span class="title function_">add</span><span class="params">(E element)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">boolean</span> <span class="title function_">offer</span><span class="params">(E element)</span>;<span class="comment">//如果队列没满，添加队尾返回true；满了add抛出异常，offer false</span></span><br><span class="line"></span><br><span class="line">E <span class="title function_">remove</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">E <span class="title function_">poll</span><span class="params">()</span>;<span class="comment">//队列不空，返回第一个并删除；空，remove报错，第二个null</span></span><br><span class="line"></span><br><span class="line">E <span class="title function_">element</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">E <span class="title function_">peek</span><span class="params">()</span>;<span class="comment">//队列不空，返回头；空，element抛出异常，peek null</span></span><br></pre></td></tr></table></figure>



<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Deque;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">addFirst</span><span class="params">(E element)</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">addLast</span><span class="params">(E element)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">boolean</span> <span class="title function_">offerFirst</span><span class="params">(E element)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">boolean</span> <span class="title function_">offerLast</span><span class="params">(E element)</span>;<span class="comment">//如果满，add抛出异常，offer false</span></span><br><span class="line"></span><br><span class="line">E <span class="title function_">removeFist</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">E <span class="title function_">removeLast</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">E <span class="title function_">pollFirst</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">E <span class="title function_">pollLast</span><span class="params">()</span>;<span class="comment">//不空，删除并返回，空remove报错，poll null</span></span><br><span class="line"></span><br><span class="line">E <span class="title function_">getFirst</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">E <span class="title function_">getLast</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">E <span class="title function_">peekFirst</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">E <span class="title function_">peekLast</span><span class="params">()</span>;<span class="comment">//返回头，空，get报错，peek null</span></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayDeque;</span><br><span class="line"></span><br><span class="line">ArrayDeque();</span><br><span class="line"></span><br><span class="line">ArrayDeque(<span class="type">int</span> initialCapacity);<span class="comment">//初始化16或给定容量双端队列</span></span><br></pre></td></tr></table></figure>



<h3 id="2-7-优先级队列PriorityQueue-最小-堆heap"><a href="#2-7-优先级队列PriorityQueue-最小-堆heap" class="headerlink" title="2.7 优先级队列PriorityQueue  (最小)堆heap"></a>2.7 优先级队列PriorityQueue  (最小)堆heap</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.PriorityQueue;</span><br><span class="line"></span><br><span class="line">PriorityQueue();</span><br><span class="line"></span><br><span class="line">PriorityQueue(<span class="type">int</span> initialCapacity);<span class="comment">//构造一个用于存放Comparable对象的优先级队列</span></span><br><span class="line"></span><br><span class="line">PriorityQueue(<span class="type">int</span> initialCapacity,Comparator&lt;? <span class="built_in">super</span> E&gt; c);<span class="comment">//构造一个优先级队列，指定比较器排序</span></span><br></pre></td></tr></table></figure>

<h2 id="2-8映射表Map-lt-K-V-gt-泛型"><a href="#2-8映射表Map-lt-K-V-gt-泛型" class="headerlink" title="2.8映射表Map&lt;K,V&gt; 泛型"></a>2.8映射表Map&lt;K,V&gt; 泛型</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Map&lt;K,V&gt;;</span><br><span class="line"></span><br><span class="line">V <span class="title function_">get</span><span class="params">(Object Key)</span>;<span class="comment">//返回key对应value，没有null</span></span><br><span class="line"></span><br><span class="line">V <span class="title function_">put</span><span class="params">(K key,V value)</span>;插入，如果存在，取代，返回旧值；键可以为<span class="literal">null</span>值不能为<span class="literal">null</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">putAll</span><span class="params">(Map&lt;? extends K, ? extends V&gt; entries)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">boolean</span> <span class="title function_">containsKey</span><span class="params">(Object key)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">boolean</span> <span class="title function_">containsValue</span><span class="params">(Object value)</span>;</span><br><span class="line"></span><br><span class="line">set&lt;Map.Entry&lt;K,V&gt; <span class="title function_">entrySet</span><span class="params">()</span>;<span class="comment">//返回Map.Entry的集视图，也就是映射表的KV对;可以从这儿删除元素，映射表也同步删除，不能添加</span></span><br><span class="line"></span><br><span class="line">Set&lt;K&gt; <span class="title function_">KeySet</span><span class="params">()</span>;<span class="comment">//映射表所有键的集视图，可删除不能添加</span></span><br><span class="line"></span><br><span class="line">Collection&lt;V&gt; <span class="title function_">values</span><span class="params">()</span>;<span class="comment">//映射表所有值的集视图，可删除不能添加</span></span><br></pre></td></tr></table></figure>



<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Map.Entry&lt;K,V&gt;;</span><br><span class="line"></span><br><span class="line">K <span class="title function_">getKey</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">V <span class="title function_">getValue</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">V <span class="title function_">setValue</span><span class="params">(V newValue)</span>;<span class="comment">//设置新值，返回旧值</span></span><br></pre></td></tr></table></figure>



<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.HashMap&lt;K,V&gt;;</span><br><span class="line"></span><br><span class="line">HashMap();</span><br><span class="line"></span><br><span class="line">HashMap(<span class="type">int</span> initialCapacity);</span><br><span class="line"></span><br><span class="line">HashMap(<span class="type">int</span> initialCapacity,<span class="type">float</span> loadFactor)<span class="comment">//填装因子</span></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.TreeMap&lt;K,V&gt;;</span><br><span class="line"></span><br><span class="line">TreeMap(Comparator&lt;? <span class="built_in">super</span> K&gt; c);<span class="comment">//构造树映射表，指定比较器排序</span></span><br><span class="line"></span><br><span class="line">TreeMap(Map&lt;? <span class="keyword">extends</span> <span class="title class_">K</span>, <span class="keyword">extends</span> <span class="title class_">V</span>&gt; entires);<span class="comment">//映射表全部添加到树映射表</span></span><br><span class="line"></span><br><span class="line">TreeMap(SortedMap&lt;? <span class="keyword">extends</span> <span class="title class_">K</span>, <span class="keyword">extends</span> <span class="title class_">V</span>&gt; entires);<span class="comment">//排序映射表添加到树映射表，用相同的比较器</span></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.SortedMap&lt;K,V&gt;;</span><br><span class="line"></span><br><span class="line">Comparator&lt;? <span class="built_in">super</span> K&gt; comparator);<span class="comment">//返回对K排序的比较器，compareto null</span></span><br><span class="line"></span><br><span class="line">K <span class="title function_">firstKey</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">K <span class="title function_">lastKey</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure>

<h3 id="2-9-HashTable-Vector-enum-Stack"><a href="#2-9-HashTable-Vector-enum-Stack" class="headerlink" title="2.9 HashTable Vector enum Stack"></a>2.9 HashTable Vector enum Stack</h3><p>hashTable 与hashMap区别不大，不同是HashTable线程安全，同步访问；</p>
<p>vector与ArrayList同理；</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Enumeration&lt;E&gt;;</span><br><span class="line"></span><br><span class="line"><span class="type">boolean</span> <span class="title function_">hasMoreElement</span><span class="params">()</span>;有更多<span class="literal">true</span></span><br><span class="line"></span><br><span class="line">E <span class="title function_">nextElement</span><span class="params">()</span>;hasmore <span class="literal">false</span> 会报错</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Hashtable&lt;K,V&gt;;</span><br><span class="line"></span><br><span class="line">Enumeration&lt;K&gt; <span class="title function_">Keys</span><span class="params">()</span>;<span class="comment">//遍历 枚举</span></span><br><span class="line"></span><br><span class="line">Enumeration&lt;V&gt; <span class="title function_">elements</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Vector&lt;V&gt;;</span><br><span class="line"></span><br><span class="line">Enumeration&lt;E&gt; <span class="title function_">elements</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Stack&lt;E&gt;;</span><br><span class="line"></span><br><span class="line">E <span class="title function_">push</span><span class="params">(E item)</span>;</span><br><span class="line"></span><br><span class="line">E <span class="title function_">pop</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">E <span class="title function_">peek</span><span class="params">()</span>;<span class="comment">//空会报错</span></span><br></pre></td></tr></table></figure>

<p>位？</p>
<h3 id="集合框架framework-展示Collection-Map两个接口的混用"><a href="#集合框架framework-展示Collection-Map两个接口的混用" class="headerlink" title="集合框架framework 展示Collection||Map两个接口的混用"></a>集合框架framework 展示Collection||Map两个接口的混用</h3><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203151713542.jpg" alt="5d21cab304c41c724c490927f5c531e" style="zoom:50%;" />

<img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203151713602.jpg" alt="cc74125cd2da1434cf19312dcaabde4" style="zoom:50%;" />

<img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203151714149.jpg" alt="b246c578c263f40249028234ad8adca" style="zoom:50%;" />

<hr>
<p>2022&#x2F;3&#x2F;15</p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
  </entry>
  <entry>
    <title>DQN with Keras and Gym</title>
    <url>/2020/12/28/Deep-Q-Learning-with-Keras-and-Gym/</url>
    <content><![CDATA[<h3 id="研究是因为有趣"><a href="#研究是因为有趣" class="headerlink" title="研究是因为有趣"></a>研究是因为<em>有趣</em></h3><p><a href="https://keon.github.io/deep-q-learning/">Deep Q-Learning with Keras and Gym · Keon’s Blog</a></p>
<p>Deep Q Learning,DRL-QoS Cloud Scheduling代码已跑通，AIRL未跑，回过头来重新逐行深入分析理解及复现，以便之后独立使用。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">conda info -e #（查看所有的虚拟环境）</span><br><span class="line">activate -name #(虚拟环境名字)（进入到该虚拟环境中）</span><br><span class="line">deactivate #退出</span><br><span class="line">pip，conda install (list)(show)</span><br><span class="line">https://mirrors.tuna.tsinghua.edu.cn/help/pypi/ #换源网址</span><br><span class="line">pip install -i https://pypi.tuna.tsinghua.edu.cn/simple some-package #临时使用</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><table>
<thead>
<tr>
<th align="left">目录</th>
<th>名称</th>
<th>本机版本号</th>
<th>命令或备注</th>
</tr>
</thead>
<tbody><tr>
<td align="left">python</td>
<td>anaconda</td>
<td>ok</td>
<td></td>
</tr>
<tr>
<td align="left"></td>
<td>python</td>
<td>ok</td>
<td></td>
</tr>
<tr>
<td align="left"></td>
<td>pip，conda换源</td>
<td>ok</td>
<td>尽量用conda和anaconda安装，少用pip</td>
</tr>
<tr>
<td align="left"></td>
<td>虚拟环境</td>
<td>ok</td>
<td>activate xx  ；deactivate</td>
</tr>
<tr>
<td align="left"></td>
<td>pycharm</td>
<td></td>
<td></td>
</tr>
<tr>
<td align="left">GPU驱动</td>
<td>GPU</td>
<td>456.71</td>
<td>nvidia-smi</td>
</tr>
<tr>
<td align="left">GPU加速</td>
<td>cuda</td>
<td>11.1.96</td>
<td>nvcc -V</td>
</tr>
<tr>
<td align="left"></td>
<td>cuDNN</td>
<td></td>
<td>GUDA,CUDNN,PY,</td>
</tr>
<tr>
<td align="left">框架</td>
<td>opencv</td>
<td></td>
<td></td>
</tr>
<tr>
<td align="left"></td>
<td>tensorflow</td>
<td>版本容易与keras冲突</td>
<td></td>
</tr>
<tr>
<td align="left"></td>
<td>pytorch</td>
<td></td>
<td></td>
</tr>
<tr>
<td align="left">步骤</td>
<td><a href="https://blog.csdn.net/qq_26412763/article/details/90272491">https://blog.csdn.net/qq_26412763/article/details/90272491</a></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="left"></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td align="left">冲突关系</td>
<td>tensorflow</td>
<td>keras</td>
<td><a href="https://docs.floydhub.com/guides/environments/">https://docs.floydhub.com/guides/environments/</a></td>
</tr>
<tr>
<td align="left">gpu驱动</td>
<td>CUDA</td>
<td>cuDNN</td>
<td>先更新显卡驱动，然后下载对应的CUDA,国内ip无法下载官网CUDA包，成功后会秒变1kb</td>
</tr>
</tbody></table>
<h3 id="Deep-Q-Learning"><a href="#Deep-Q-Learning" class="headerlink" title="Deep Q Learning"></a><a href="https://keon.github.io/deep-q-learning/">Deep Q Learning</a></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tensorflow == 1.10.0</span><br><span class="line">keras == 2.1.2</span><br><span class="line">python == 3.6</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203202232676.png" alt="image-20201211102446854"></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> gym</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> deque</span><br><span class="line"><span class="keyword">from</span> keras.models <span class="keyword">import</span> Sequential</span><br><span class="line"><span class="keyword">from</span> keras.layers <span class="keyword">import</span> Dense</span><br><span class="line"><span class="keyword">from</span> keras.optimizers <span class="keyword">import</span> Adam</span><br><span class="line"><span class="comment">#from A import B 这种方式意味着从A中引入B。相当于：import A， b=A.b。</span></span><br><span class="line"><span class="comment">#import A as B 这种方式为给引入的包A定义一个别名B</span></span><br><span class="line">EPISODES = <span class="number">1000</span></span><br><span class="line"><span class="comment">#循环训练次数</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DQNAgent</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, state_size, action_size</span>):</span><br><span class="line">        <span class="comment">#self面向对象指DQNAgent，state_size,action_size对应statespace和actionspace的大小</span></span><br><span class="line">        self.state_size = state_size</span><br><span class="line">        self.action_size = action_size<span class="comment">#传参</span></span><br><span class="line">        self.memory = deque(maxlen=<span class="number">2000</span>) <span class="comment">#定义memory为deque()双端队列，定义最大内存</span></span><br><span class="line">        self.gamma = <span class="number">0.95</span>    <span class="comment"># discount rate折扣率，未来和现实的比重</span></span><br><span class="line">        self.epsilon = <span class="number">1.0</span>  <span class="comment"># exploration rate 探索率</span></span><br><span class="line">        self.epsilon_min = <span class="number">0.01</span> <span class="comment">#最小探索率也保证0.01</span></span><br><span class="line">        self.epsilon_decay = <span class="number">0.995</span> <span class="comment">#探索率是衰变的，从随机到不随机</span></span><br><span class="line">        self.learning_rate = <span class="number">0.001</span> <span class="comment">#学习率，每次迭代中学习多少神经网络 </span></span><br><span class="line">        self.model = self._build_model() <span class="comment">#model是下个函数_build_model()中定义的</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_build_model</span>(<span class="params">self</span>):<span class="comment">#调用Keras创建简单的神经网络</span></span><br><span class="line">        <span class="comment"># Neural Net for Deep-Q learning Model</span></span><br><span class="line">        <span class="comment">#输入层4个信息，2个隐藏层，输出层2个节点01</span></span><br><span class="line">        model = Sequential()<span class="comment">#Sequential()创建基础层</span></span><br><span class="line">        model.add(Dense(<span class="number">24</span>, input_dim=self.state_size, activation=<span class="string">&#x27;relu&#x27;</span>))</span><br><span class="line">        <span class="comment">#Dense全连接层，包含输入层和第一个隐藏层，输入层大小为statesize为4，隐藏层具有24个节点</span></span><br><span class="line">        <span class="comment">#activation激活函数relu max(0,x)非线性输出</span></span><br><span class="line">        model.add(Dense(<span class="number">24</span>, activation=<span class="string">&#x27;relu&#x27;</span>))<span class="comment">#第二个隐藏层，24个节点</span></span><br><span class="line">        model.add(Dense(self.action_size, activation=<span class="string">&#x27;linear&#x27;</span>))</span><br><span class="line">        <span class="comment">#最后一层输出层，大小为actionsize为2，activation激活函数linear线性</span></span><br><span class="line">        model.<span class="built_in">compile</span>(loss=<span class="string">&#x27;mse&#x27;</span>,<span class="comment">#由以上信息编译model，</span></span><br><span class="line">                      <span class="comment">#用loss提升model，定义loss用mse平均方差</span></span><br><span class="line">                      optimizer=Adam(lr=self.learning_rate))</span><br><span class="line">        <span class="comment">#优化optimizer方法，Adam自适应状态估计，用规定的学习率</span></span><br><span class="line">        <span class="keyword">return</span> model<span class="comment">#返回创建的model</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">#memorize()将state，action，reward和next_state储存到memory队列</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">memorize</span>(<span class="params">self, state, action, reward, next_state, done</span>):</span><br><span class="line">        self.memory.append((state, action, reward, next_state, done))</span><br><span class="line">    <span class="comment">#append()在deque双向队列memory右侧添加(state, action, reward, next_state, done)</span></span><br><span class="line">    <span class="comment">#memory定义在__init__简单的双端队列，具体顺序按如上排列</span></span><br><span class="line">    <span class="comment">#done对应是否结束</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">act</span>(<span class="params">self, state</span>):</span><br><span class="line">        <span class="keyword">if</span> np.random.rand() &lt;= self.epsilon:<span class="comment">#如果随机数小于探索率</span></span><br><span class="line">            <span class="comment">#np.random.rand()随机返回一个(默认)或一组服从[0,1)均匀分布的随机样本值。</span></span><br><span class="line">            <span class="keyword">return</span> random.randrange(self.action_size)<span class="comment">#action_size为2</span></span><br><span class="line">            <span class="comment">#random.randrange()从指定范围内随机选择的元素，或者数值范围随机输出，</span></span><br><span class="line">            <span class="comment">#返回 输出结果0或1</span></span><br><span class="line">        act_values = self.model.predict(state)<span class="comment">#训练后predict()模型根据当前状态预测回报</span></span><br><span class="line">        <span class="comment">#act_values就是reward</span></span><br><span class="line">        <span class="keyword">return</span> np.argmax(act_values[<span class="number">0</span>])  <span class="comment"># returns action</span></span><br><span class="line">        <span class="comment">#act_values[0]固定格式必须写0，输出类似[0.67，0.2]，代表01两个action的reward</span></span><br><span class="line">        <span class="comment">#argmax(fx)为fx取得最大值时对应的参数,此处为最大reward的action对应的参数</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">replay</span>(<span class="params">self, batch_size</span>):<span class="comment">#reply用memory队列里的经验训练神经网络</span></span><br><span class="line">        minibatch = random.sample(self.memory, batch_size)</span><br><span class="line">        <span class="comment">#minibatch为memory中的抽样，随机抽样random.sample(取样来源memory,取样个数)</span></span><br><span class="line">        <span class="keyword">for</span> state, action, reward, next_state, done <span class="keyword">in</span> minibatch:</span><br><span class="line">            <span class="comment">#对mini_batch里的每一个从memory中抽样得到的元素来说</span></span><br><span class="line">            target = reward<span class="comment">#如果done为完成??? target就是最后一个，即所有的reward和</span></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> done:</span><br><span class="line">                target = (reward + self.gamma *</span><br><span class="line">                          np.amax(self.model.predict(next_state)[<span class="number">0</span>]))</span><br><span class="line">                <span class="comment">#Keras为我们处理了神经网络的所有任务，</span></span><br><span class="line">                <span class="comment">#我们只需要定义target，fit()就自动计算LOSS</span></span><br><span class="line">                <span class="comment">#TD算法中的target，gamma为折扣率(现实与未来)，</span></span><br><span class="line">                <span class="comment">#np.amax(predit(next_s))当前如果采取a后下一状态s对应的未来奖励Q，</span></span><br><span class="line">                <span class="comment">#比较计算不同a对应未来的Q最大值</span></span><br><span class="line">                <span class="comment">#具体讲就是我们先采取了行动a，然后得到了奖励r，并且到达了一个新的状态 next s</span></span><br><span class="line">                <span class="comment">#计算最大的目标值 np.amax()，</span></span><br><span class="line">                <span class="comment">#乘以一个折扣率 gamma，将未来的reward折算到当下，</span></span><br><span class="line">                <span class="comment">#target目标奖励值为reward加未来reward</span></span><br><span class="line">                <span class="comment">#循环直到done，把所有reward都加起来，也就是return</span></span><br><span class="line">             </span><br><span class="line">            target_f = self.model.predict(state)</span><br><span class="line">            <span class="comment">#target_f为当前state对应的预期reward Q(s,a)</span></span><br><span class="line">            target_f[<span class="number">0</span>][action] = target</span><br><span class="line">            <span class="comment">#啥意思？？？target和target_f有什么关系</span></span><br><span class="line">            self.model.fit(state, target_f, epochs=<span class="number">1</span>, verbose=<span class="number">0</span>)</span><br><span class="line">            <span class="comment">#向其提供信息为了使神经网络能够根据环境数据进行理解和预测</span></span><br><span class="line">            <span class="comment">#fit()成对将输入和输出给模型训练，可以根据输入预测输出</span></span><br><span class="line">            <span class="comment">#神经网络就可以从确定的state预测reward了</span></span><br><span class="line">            <span class="comment">#重复fit()，神奇的减少LOSS，提高分数</span></span><br><span class="line">            <span class="comment">#DQN最明显的特征是memorize and replay </span></span><br><span class="line">            <span class="comment">#用state和target_f训练神经网络</span></span><br><span class="line">            </span><br><span class="line">        <span class="keyword">if</span> self.epsilon &gt; self.epsilon_min:<span class="comment">#如果探索率在正常范围内，就给他乘衰减，因此，随着</span></span><br><span class="line">            self.epsilon *= self.epsilon_decay</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">load</span>(<span class="params">self, name</span>):</span><br><span class="line">        self.model.load_weights(name)</span><br><span class="line">        <span class="comment">#用h5文件加载图层权重，调用keras</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">save</span>(<span class="params">self, name</span>):</span><br><span class="line">        self.model.save_weights(name)<span class="comment">#保存</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    env = gym.make(<span class="string">&#x27;CartPole-v1&#x27;</span>)<span class="comment">#加载CartPole游戏</span></span><br><span class="line">    state_size = env.observation_space.shape[<span class="number">0</span>]</span><br><span class="line">    action_size = env.action_space.n<span class="comment">#action_size为action_space的个数 2</span></span><br><span class="line">    <span class="comment">#此时env.action_space == Discrete(2)即离散(2)</span></span><br><span class="line">    <span class="comment">#env.action_space.n == 2  .n为action_space的个数</span></span><br><span class="line">    agent = DQNAgent(state_size, action_size)<span class="comment">#运行DQNAgent</span></span><br><span class="line">    <span class="comment"># agent.load(&quot;./save/cartpole-dqn.h5&quot;)</span></span><br><span class="line">    done = <span class="literal">False</span><span class="comment">#初始化done</span></span><br><span class="line">    batch_size = <span class="number">32</span><span class="comment">#设置mini_batch的大小</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> e <span class="keyword">in</span> <span class="built_in">range</span>(EPISODES):<span class="comment">#迭代游戏</span></span><br><span class="line">        state = env.reset()<span class="comment">#每次游戏初都重置state</span></span><br><span class="line">        state = np.reshape(state, [<span class="number">1</span>, state_size])</span><br><span class="line">        <span class="comment">#np.reshape()把单行的state数组重组为1行4列state_size的无数个数组</span></span><br><span class="line">        <span class="keyword">for</span> time <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">500</span>):<span class="comment">#time代表游戏的每一帧，小棍直立时间，等于分数</span></span><br><span class="line">            env.render()<span class="comment">#渲染图像，可视化展示环境</span></span><br><span class="line">            action = agent.act(state) <span class="comment">#由agent.act()决定动作是0或1</span></span><br><span class="line">            next_state, reward, done, _ = env.step(action) <span class="comment">#获取下一步的环境、得分、检测是否完成</span></span><br><span class="line">            <span class="comment">#env.step(action)，将选择的action输入给env，env 按照这个动作走一步使环境进入下一个状态，所以它的返回值有四个：observation：进入的新状态；reward：采取这个行动得到的奖励；done：当前游戏是否结束；info：其他一些信息，如性能表现，延迟等等，可用于调优</span></span><br><span class="line">            reward = reward <span class="keyword">if</span> <span class="keyword">not</span> done <span class="keyword">else</span> -<span class="number">10</span><span class="comment">#如果没掉reward=reward否则reward-10</span></span><br><span class="line">            next_state = np.reshape(next_state, [<span class="number">1</span>, state_size])<span class="comment">#刷新next_state</span></span><br><span class="line">            <span class="comment">#next_state独立刷新，state不再刷新，通过由next_state复制来推动</span></span><br><span class="line">            agent.memorize(state, action, reward, next_state, done)<span class="comment">#memory队列记录当前信息</span></span><br><span class="line">            state = next_state<span class="comment">#上面提到的赋值</span></span><br><span class="line">            <span class="keyword">if</span> done:<span class="comment">#游戏结束，则输出</span></span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;episode: &#123;&#125;/&#123;&#125;, score: &#123;&#125;, e: &#123;:.2&#125;&quot;</span></span><br><span class="line">                      .<span class="built_in">format</span>(e, EPISODES, time, agent.epsilon))</span><br><span class="line">                <span class="comment">#print(&quot;&#123;&#125;&quot;.format())格式化输出，用()代替&#123;&#125;</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(agent.memory) &gt; batch_size:</span><br><span class="line">                <span class="comment">#如果neemory队列里面内容变多，多于batch_size,才reply()，</span></span><br><span class="line">                <span class="comment">#因此修改batch后，batch改的越大，刚开始进行游戏速度极快，始终分数很低，因为没有训练，只是随机的玩。在一个提醒后，突然就变慢了，怀疑和勘探率，学习率有关，进入了训练。</span></span><br><span class="line">                agent.replay(batch_size)</span><br><span class="line">        <span class="comment"># if e % 10 == 0:</span></span><br><span class="line">        <span class="comment">#     agent.save(&quot;./save/cartpole-dqn.h5&quot;)</span></span><br></pre></td></tr></table></figure>



<p> <a href="https://www.cnblogs.com/wzdLY/p/9710478.html">激活函数sigmoid、tanh、relu、Swish</a></p>
<p> <a href="https://www.cnblogs.com/GeekDanny/p/9655597.html">深度学习常见的优化方法(Optimizer)总结:Adam,SGD,Momentum,AdaGard等</a></p>
<p><img src="https://keon.github.io/images/deep-q-learning/deep-q-learning.png" alt="deep-q-learning"></p>
<p><strong>图</strong>TD中的LOSS</p>
<h2 id="安装Gym后，一般的使用流程是："><a href="#安装Gym后，一般的使用流程是：" class="headerlink" title="安装Gym后，一般的使用流程是："></a>安装Gym后，一般的使用流程是：</h2><ol>
<li><p>加载 gym 库：<code>import gym</code></p>
</li>
<li><p>进入指定的实验环境：<code>env = gym.make(&quot;Taxi-v2&quot;).env</code></p>
</li>
<li><p>渲染环境，即可视化看看环境的样子：<code>env.render()</code></p>
</li>
</ol>
<h3 id="其中-env-是-gym-的核心接口，有几个常用的方法也是实验中通用的："><a href="#其中-env-是-gym-的核心接口，有几个常用的方法也是实验中通用的：" class="headerlink" title="其中 env 是 gym 的核心接口，有几个常用的方法也是实验中通用的："></a>其中 env 是 gym 的核心接口，有几个常用的方法也是实验中通用的：</h3><ol>
<li><p><code>env.reset</code>， 重置环境，返回一个随机的初始状态。</p>
</li>
<li><p><code>env.step(action)</code>，将选择的action输入给env，env 按照这个动作走一步使环境进入下一个状态，所以它的返回值有四个：</p>
</li>
</ol>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">next_state, reward, done, _ = env.step(action)</span><br></pre></td></tr></table></figure>

<p>observation：进入的新状态</p>
<p>reward：采取这个行动得到的奖励</p>
<p>done：当前游戏是否结束</p>
<p>info：其他一些信息，如性能表现，延迟等等，可用于调优</p>
<ol start="3">
<li><code>env.render</code>，这个前面说过可以可视化展示环境</li>
</ol>
<p><strong>注意到，在 state1-action-state2 这个过程中，action 是需要我们决定的，通常会通过 greedy search 和 q learning 等算法选择，而 state1，state2 就可以用 env 自动获取。</strong></p>
<h2 id="gym模块中环境的常用函数"><a href="#gym模块中环境的常用函数" class="headerlink" title="gym模块中环境的常用函数"></a>gym模块中环境的常用函数</h2><h3 id="gym的初始化"><a href="#gym的初始化" class="headerlink" title="gym的初始化"></a>gym的初始化</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">env = gym.make(<span class="string">&#x27;CartPole-v0&#x27;</span>)   </span><br><span class="line"><span class="comment"># 定义使用gym库中的某一个环境，&#x27;CartPole-v0&#x27;可以改为其它环境</span></span><br><span class="line">env = env.unwrapped             </span><br><span class="line"><span class="comment"># 据说不做这个动作会有很多限制，unwrapped是打开限制的意思</span></span><br></pre></td></tr></table></figure>

<h3 id="gym的各个参数的获取"><a href="#gym的各个参数的获取" class="headerlink" title="gym的各个参数的获取"></a>gym的各个参数的获取</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">env.action_space   		</span><br><span class="line"><span class="comment"># 查看这个环境中可用的action有多少个，返回Discrete()格式 (离散)</span></span><br><span class="line">env.observation_space   </span><br><span class="line"><span class="comment"># 查看这个环境中observation的特征，返回Box()格式</span></span><br><span class="line">n_actions=env.action_space.n </span><br><span class="line"><span class="comment"># 查看这个环境中可用的action有多少个，返回int</span></span><br><span class="line">n_features=env.observation_space.shape[<span class="number">0</span>] </span><br><span class="line"><span class="comment"># 查看这个环境中observation的特征有多少个，返回int</span></span><br></pre></td></tr></table></figure>

<h3 id="刷新环境"><a href="#刷新环境" class="headerlink" title="刷新环境"></a>刷新环境</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">env.reset()</span><br><span class="line"><span class="comment"># 用于一个世代（done）后环境的重启，获取回合的第一个observation</span></span><br><span class="line">env.render()	</span><br><span class="line"><span class="comment"># 用于每一步后刷新环境状态,渲染环境，即可视化看看环境的样子</span></span><br></pre></td></tr></table></figure>

<h3 id="读取环境"><a href="#读取环境" class="headerlink" title="读取环境"></a>读取环境</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">observation_, reward, done, info = env.step(action)</span><br><span class="line"><span class="comment"># 获取下一步的环境因此之上写作next_state、得分、检测是否完成。</span></span><br></pre></td></tr></table></figure>

<hr>
<p>2020&#x2F;12&#x2F;28</p>
]]></content>
      <categories>
        <category>DRL</category>
      </categories>
  </entry>
  <entry>
    <title>Win删除文件</title>
    <url>/2022/05/11/Del-nopass/</url>
    <content><![CDATA[<blockquote>
<p>该项目不在XXX中。请确认该项目的位置，然后重试。</p>
</blockquote>
<span id="more"></span>

<ol>
<li>新建<code>.txt</code>文件</li>
<li>输入以下内容后，保存</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">DEL /F /A /Q \\?\%1</span><br><span class="line">RD /S /Q \\?\%1</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>将文件名改为<code>.bat</code></li>
<li>将无法删除的文件或文件夹拖拽到这个文件即可删除</li>
</ol>
<hr>
<p>2022-5-11</p>
<p>西走菜菜</p>
]]></content>
      <categories>
        <category>小技巧&amp;快捷键&amp;命令</category>
      </categories>
  </entry>
  <entry>
    <title>AIRL中遇到的问题</title>
    <url>/2020/12/11/Difficulties-in-AIRL/</url>
    <content><![CDATA[<p> 云调度和DRL论文中 <em>待解决</em> 思考：</p>
<h2 id="1-网格计算-云计算前身"><a href="#1-网格计算-云计算前身" class="headerlink" title="1.网格计算[^云计算前身]"></a>1.网格计算[^<del>云计算前身</del>]</h2><p>这种计算模式是利用互联网把分散在不同地理位置的电脑组织成一个“虚拟的超级计算机”，其中每一台参与计算的计算机就是一个“节点”，而整个计算是由成千上万个“节点”组成的“一张网格”。</p>
<p>网格计算的优势有两个：一个是数据处理能力超强；另一个是能充分利用网上的闲置处理能力。</p>
<p>它研究如何把一个需要非常巨大的<a href="https://baike.baidu.com/item/%E8%AE%A1%E7%AE%97%E8%83%BD%E5%8A%9B/4554810">计算能力</a>才能解决的问题分成许多小的部分，然后把这些部分分配给许多<a href="https://baike.baidu.com/item/%E8%AE%A1%E7%AE%97%E6%9C%BA/140338">计算机</a>进行处理，最后把这些计算结果综合起来得到最终结果。</p>
<p><a href="https://zhidao.baidu.com/question/70675394.html">网格计算和云计算的概念和区别</a></p>
<span id="more"></span>

<h2 id="2-1-P-VS-NP-Nondeterministic-Polynomial-time"><a href="#2-1-P-VS-NP-Nondeterministic-Polynomial-time" class="headerlink" title="2.1 P VS. NP(Nondeterministic Polynomial time)"></a>2.1 P VS. NP(Nondeterministic Polynomial time)</h2><table>
<thead>
<tr>
<th>P</th>
<th>VS.</th>
<th>NP</th>
</tr>
</thead>
<tbody><tr>
<td>能快速求解（易解）</td>
<td></td>
<td>不一定能快速求解（易验证）</td>
</tr>
<tr>
<td>P一定是NP，易算易验证</td>
<td></td>
<td>NP则不一定是P，能验证不一定能计算，如质数分解</td>
</tr>
<tr>
<td>P就是能在多项式时间内解决的问题(算的快)</td>
<td></td>
<td>NP就是能在多项式时间验证答案正确与否的问题(验证快)</td>
</tr>
</tbody></table>
<p><em><strong>P&#x3D;NP?</strong></em>  </p>
<p>N即不存在不能快速求解。P是否等于NP实质上就是在问，如果对于一个问题我能在多项式时间内验证其答案的正确性，那么我是否能在多项式时间内解决它？</p>
<p><em><strong>NP-hardness（困难） 和 NP-completeness（完全）：</strong></em></p>
<p>如果任意一个NP的问题都可以多项式[^归约]到L（L是转化后的问题，高级，困难），称问题L是NP-hard：</p>
<ul>
<li><p>显然NP-hard不一定是NP问题，NP-hard是个新问题。</p>
</li>
<li><p>如果一个NP-hard，即归约后问题L本身就是NP的，则称L是NP-completeness.(NPC最难，[^时间复杂度最高])</p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203210934343.png" alt="这里写图片描述"></p>
</li>
</ul>
<blockquote>
<p>“P vs NP”问题：请问那些需要非确定性图灵机（超能力计算机）在多项式时间才能解决的问题，能够用确定性图灵机（普通计算机）在多项式时间解决吗？ <a href="http://www.yinwang.org/blog-cn/2019/07/21/pnp2">P vs NP不重要</a></p>
</blockquote>
<h3 id="2-2-维度诅咒"><a href="#2-2-维度诅咒" class="headerlink" title="2.2[^维度诅咒]"></a>2.2[^维度诅咒]</h3><p>当维度增加(太大)时,体积(难度)指数增加的难题.</p>
<p><em><strong>分类器中：</strong></em></p>
<p><img src="https://www.visiondummy.com/wp-content/uploads/2014/04/dimensionality_vs_performance.png" alt="img"></p>
<p><strong>图2中</strong>随着维度的增加，分类器的性能会提高，直到达到最佳要素数。进一步增加维度而不增加训练样本的数量导致分类器性能的降低。 过拟合 ，</p>
<p>维度的诅咒使得训练数据的 稀疏性 ，训练样本的密度呈指数下降。</p>
<p>维度诅咒的另一个影响是，这种稀疏性不是均匀分布在搜索空间上。实际上，原点周围的数据（在超立方体的 中心 ）比搜索空间的 角落 中的数据要稀疏得多。</p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203210934531.png" alt="img"></p>
<p>**图3.**随着维度的增加，更大比例的训练数据驻留在要素空间的 角落 中。</p>
<p><em><strong>如何避免：</strong></em></p>
<p>问题是 “太大” 意味着什么: [^特征的数量和样本数量有关]</p>
<p><strong>特征选择方法：</strong>通常采用启发式(如<a href="http://www.obitko.com/tutorials/genetic-algorithms/">GA算法</a>)(贪婪方法，最佳优先方法等）来定位最佳数量和特征组合</p>
<p><strong>特征提取方法（降维）：</strong><a href="http://www.visiondummy.com/2014/05/feature-extraction-using-pca/">主成分分析（PCA）</a>，它产生原始N特征的不相关的线性组合。PCA试图找到较低维度的线性子空间，以便保持原始数据的最大方差（向着极大无关组出发）。但是，请注意，数据的最大差异不一定代表最具辨别力的信息。</p>
<p><strong>交叉验证：</strong></p>
<blockquote>
<p>交叉验证方法将原始训练数据分成一个或多个训练子集。</p>
<p>在分类器训练期间，一个子集用于 测试 所得分类器的准确度和精度，而其他子集用于 参数估计 (真实训练)。</p>
<p>如果用于 训练 的子集的分类结果与用于 测试 的子集的结果大不相同，则过度拟合正在发挥作用。</p>
<p>如果只有<strong>有限</strong>数量的训练数据可用，则可以使用几种类型的交叉验证，例如k折交叉验证和留一交叉验证。</p>
</blockquote>
<p><img src="https://upload.wikimedia.org/wikipedia/commons/1/1c/K-fold_cross_validation_EN.jpg" alt="img"></p>
<p><strong>Diagram of k-fold cross-validation with k&#x3D;4</strong></p>
<h4 id="为什么说RL与深度神经网络结合可以避免维度之咒？"><a href="#为什么说RL与深度神经网络结合可以避免维度之咒？" class="headerlink" title="为什么说RL与深度神经网络结合可以避免维度之咒？"></a>为什么说RL与深度神经网络结合可以避免维度之咒？</h4><blockquote>
<p>因为神经网络能够提取特征。</p>
</blockquote>
<p>Particularly in cloud computing, similar to its predecessors such as grid computing, various job assignment algorithms and approaches have been proposed [7], [8].</p>
<p>事实上，SVM及 神经网络 都可以看做是寻找一个合适的特征维度的过程。</p>
<p>当数据的维度过小的时候，数据分布过于稠密，不能很好的进行区分，这时候可以通过带有核函数的SVM将低纬度的数据映射到高纬度。</p>
<p>当样本的<strong>维度过大</strong>时，受限于样本的多少及计算机的计算能力，需要利用 神经网络 对样本的维度进行压缩，便于分类。</p>
<p>两者目的都在于使得数据的维度达到一个合适的稠密程度，从而更方便找到分类超平面。这也决定了SVM适用于低维小样本数据，而神经网络适合于大规模高维数据。</p>
<p>时间复杂度决定了模型的训练&#x2F;预测时间。如果复杂度过高，则会导致模型训练和预测耗费大量时间，既无法快速的验证想法和改善模型，也无法做到快速的预测。</p>
<p><em><strong>空间复杂度</strong></em> 决定了模型的参数数量。</p>
<p>由于<strong>维度诅咒的限制</strong>，模型的参数越多，训练模型所需的数据量就越大，而现实生活中的数据集通常不会太大，这会导致模型的训练更容易<strong>过拟合</strong>。</p>
<p>空间复杂度（访存量），严格来讲包括两部分：总参数量 + 各层输出特征图。</p>
<ul>
<li><strong>参数量</strong>：模型所有带参数的层的权重参数总量（即<strong>模型体积</strong>，下式第一个求和表达式）</li>
<li><strong>特征图</strong>：模型在实时运行过程中每层所计算出的输出特征图大小（下式第二个求和表达式）</li>
</ul>
<p><strong>公式来源</strong>：<a href="https://zhuanlan.zhihu.com/p/31575074">卷积神经网络复杂度分析</a></p>
<p> <a href="%E6%B5%85%E5%B1%82%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E8%83%BD%E6%88%98%E8%83%9C%E7%BB%B4%E5%BA%A6%E7%9A%84%E8%AF%85%E5%92%92%E5%90%97%EF%BC%9F%E4%B8%80%E4%B8%AA%E5%B9%B3%E5%9D%87%E5%9C%BA%E8%AE%AD%E7%BB%83%E8%A7%86%E8%A7%92.pdf">浅层神经网络能战胜维度的诅咒吗？一个平均场训练视角.pdf</a> </p>
<h2 id="3-梯度下降和神经网络的关系"><a href="#3-梯度下降和神经网络的关系" class="headerlink" title="3.梯度下降和神经网络的关系"></a>3.梯度下降和神经网络的关系</h2><h4 id="深入浅出–梯度下降法及其实现-深入浅出–梯度下降法及其实现-简书-jianshu-com"><a href="#深入浅出–梯度下降法及其实现-深入浅出–梯度下降法及其实现-简书-jianshu-com" class="headerlink" title="[深入浅出–梯度下降法及其实现](深入浅出–梯度下降法及其实现 - 简书 (jianshu.com))"></a>[深入浅出–梯度下降法及其实现](<a href="https://www.jianshu.com/p/c7e642877b0e">深入浅出–梯度下降法及其实现 - 简书 (jianshu.com)</a>)</h4><h4 id="深度学习-梯度下降-用代码一步步理解梯度下降和神经网络-ANN"><a href="#深度学习-梯度下降-用代码一步步理解梯度下降和神经网络-ANN" class="headerlink" title="[深度学习] [梯度下降]用代码一步步理解梯度下降和神经网络(ANN)"></a>[<a href="https://www.jianshu.com/p/7251b03847f4">深度学习] [梯度下降]用代码一步步理解梯度下降和神经网络(ANN)</a></h4><h4 id="matplotlib模块数据可视化-3D图"><a href="#matplotlib模块数据可视化-3D图" class="headerlink" title="matplotlib模块数据可视化-3D图"></a><a href="https://blog.csdn.net/sinat_36772813/article/details/77365296">matplotlib模块数据可视化-3D图</a></h4><hr>
<h2 id="4-核心困难：云计算中多目标资源调度QoS"><a href="#4-核心困难：云计算中多目标资源调度QoS" class="headerlink" title="4.核心困难：云计算中多目标资源调度QoS"></a>4.核心困难：云计算中多目标资源调度QoS</h2><h3 id="方法：某深度强化学习"><a href="#方法：某深度强化学习" class="headerlink" title="方法：某深度强化学习"></a>方法：某深度强化学习</h3><h3 id="传统方法的数学推导："><a href="#传统方法的数学推导：" class="headerlink" title="传统方法的数学推导："></a>传统方法的数学推导：</h3><h2 id="5-理论方法："><a href="#5-理论方法：" class="headerlink" title="5.理论方法："></a>5.理论方法：</h2><ol>
<li>排队论</li>
<li>控制论</li>
<li>博弈论</li>
</ol>
<h2 id="6-启发式方法"><a href="#6-启发式方法" class="headerlink" title="6.启发式方法"></a>6.启发式方法</h2><ul>
<li>Biological Inspiration (BI): Genetic Algorithm (<strong>GA</strong>)[8],[12], [18],[20] ,Memetic Algorithm (MA), Lion Algorithm (LA)[21], Imperialist Competitive Algorithm (ICA), etc.</li>
<li>Swarm Intelligence (SI): Ant Colony Optimization (<strong>ACO</strong>)[9], [19]Particle Swarm Optimization (PSO)[11],[13],[14],[15], [16],[17]  Simulated Annealing (<strong>SA</strong>), Artificial Bee Colony (ABC)[22], Cat Swarm Optimization (CSO)[23], Bat Algorithm (BA), Wind Driven Optimization (WDO), etc.</li>
</ul>
<h3 id="新待看"><a href="#新待看" class="headerlink" title="新待看:"></a>新待看:</h3><p><a href="http://www.obitko.com/tutorials/genetic-algorithms/">GA背后的直觉</a></p>
<h2 id="注脚："><a href="#注脚：" class="headerlink" title="注脚："></a>注脚：</h2><p>[^归约]: polynomial-time Karp’ reduction；A转化成B问题，B至少不比A容易<br>[^时间复杂度最高]: 所以completeness 的直观解释就是，解决了它就可以解决所有同级别此类问题。<br>[^维度诅咒]: Moreover, to avoid the  curse of dimensionality  of traditional RL techniques, RL combined with deep neuralnetwork (i.e. DRL) is adopted in our work.<br>[^特征的数量和样本数量有关]: 如果N个训练样本足以覆盖单位区间大小的1D特征空间，则需要N ^ 2个样本来覆盖具有相同密度的2D特征空间，并且在3D特征空间中需要N ^ 3个样本。换句话说，所需的训练实例数量随着使用的维度数量呈指数增长。<br>[^<del>云计算前身</del>]: Particularly in cloud computing, similar to its predecessors such as grid computing, various job assignment algorithms and approaches have been proposed [7], [8].</p>
<hr>
<p>2020&#x2F;12&#x2F;11</p>
]]></content>
      <categories>
        <category>DRL</category>
      </categories>
  </entry>
  <entry>
    <title>如何优雅的驾驶</title>
    <url>/2021/03/29/Drive-gracefully/</url>
    <content><![CDATA[<p>2021年年初到3月底，每天连续开车在2小时左右，周末常常4-6小时的远路，尝试了各种手动挡的技巧。</p>
<p>熟练后和莹莹在一起了，莹莹经常陪着我去没人的地方练车，拉着我的右手，不肯撒开，不让换档，收获了这个小可爱，熟练掌握了单手方向盘，三档起步。算是个很好的基础吧。完全克服了正常换挡和降档补油的顿挫感，开车真的蛮好玩的，现在回北京了，碰不到了，浑身不舒服，就想简单记录一下。</p>
<span id="more"></span>

<h2 id="路况"><a href="#路况" class="headerlink" title="路况"></a>路况</h2><p>最先适应的就是路况，以及红绿灯。开得最多的就是二级路，山路和城市道路。相对而言，高速最容易，最没有意思。其它都各有各的魅力，我喜欢开快车。</p>
<h3 id="城市道路"><a href="#城市道路" class="headerlink" title="城市道路"></a>城市道路</h3><ol>
<li>二道三道，提前变道，变道前打足转向灯，越早越好。转弯减速降档，速度快的话必要可以用跟指降档。</li>
<li>超车果断坚决，降档补油最常用，但得一辆一辆超，不要一次跨越好几辆，来不及避让对向来车。</li>
<li>遇上堵车，离合到底空挡滑行会比较轻松，频繁一二档或者踩离合松离合太要命了。</li>
<li>手刹还不会高端用法，只会在停车时侯制动驻车或者半坡起步时候用一下，但好像可以辅助漂移过弯，如果有必要以后可以学学。</li>
<li>红绿灯，没有分左右转向的时候，可以直接右转，不用看信号灯。</li>
<li>丁字路口，横线（远离岔路口一侧）可以直接直行。</li>
<li>左侧是超车道，快速超车通过，正常行驶尽量不要占用。</li>
<li>小心，多看，所有镜子都很重要，尤其是超车变道的时候，一定要提前看两个侧视镜和后视镜，然后果断超车。</li>
<li>在大坡度起步，交通信号灯绿灯时间太短，或者路遇堵车，弹射起步很有用。</li>
<li>行人，自行车，留足安全距离，必要可以压实线。</li>
<li>防御性驾驶很有必要，随时准备好应对突发状况，比如突然的加塞，突然的行人非机动车鬼探头，尤其是旁边有大车箱车遮挡视野的情况下。</li>
<li>任何时候不要慌，就算十字路口，堵车了，熄火了，慢慢来，交警骂两句不用管他，不扣分不赔钱都没事。安全第一。</li>
<li>窄距停车，只能一把一把慢慢来，熟练就好了，慢慢调整，多调整几把。</li>
</ol>
<h2 id="二级路"><a href="#二级路" class="headerlink" title="二级路"></a>二级路</h2><ol>
<li>首先，最重要的是，不要慌张害怕，冷静。</li>
<li>城市，二级路，超速百分之五十以内不做处罚，随便开。</li>
<li>保持安全车距，尤其前方，后方大车，惯性太大，能超就超，不要长时间跟车或者被跟车。</li>
<li>转大弯可以尽量提前刹车，尽早加油门出弯，高档位过弯比较平顺，低档位响应更快，为了提高速度大弯也可以跟指降档后提前给油出弯。</li>
<li>转小弯，提前降档减速，必要时鸣笛，安全第一。</li>
<li>小心限速拍照，其它时候随便开，安全第一，不要和别人飙车竞速。</li>
<li>开车两大原则：<strong>超车果断，让速不让道</strong>。对向来车超车占道，可以减速，但最好不要让自己的车道，否则更容易出事，而且自己全责。路遇小狗小猫乱跑也一样，可以减速，不能乱转向，自己的生命最重要。</li>
<li>大直线，无限速拍照，没车变道，随便开，没关系，爽就完事了。</li>
</ol>
<h2 id="山路"><a href="#山路" class="headerlink" title="山路"></a>山路</h2><ol>
<li>上山，注意用屁股和腰感受动力匹配，为了速度，保证动力输出，能高档就高档，降档补油是最常用的，档位在1，2，3间切换。</li>
<li>过发卡弯，无视野，长鸣笛两下，大坡度提前降档。</li>
<li>狭窄路段，不急，让它先过，必要可以退一退，安全第一，轻松快乐。</li>
<li>地滑路段，注意轮胎抓地力，控制油门。</li>
<li>下山，悬崖峭壁格外注意，靠山侧让行。</li>
<li>山路过弯千万不要超车。</li>
<li>为了避免热衰减，刹车能不踩尽量不踩，平时也一样，下山靠发动机制动就好，2档制动在40km&#x2F;h，3档在60km&#x2F;h。</li>
<li>半坡起步用大油门，可以玩弹射起步，如果后面有车的话。</li>
<li>过减速带的时候，提前减速，可以空挡过，但是不能踩刹车过，因为踩刹车的同时车重心前移，悬挂高度会降低，车身吃满振动能量。应该提前减速，过减速带时什么都不踩，甚至可以稍带油门，让振动能量落在避震上。</li>
</ol>
<h2 id="操作细节及技术"><a href="#操作细节及技术" class="headerlink" title="操作细节及技术"></a>操作细节及技术</h2><h3 id="灯光"><a href="#灯光" class="headerlink" title="灯光"></a>灯光</h3><p>多用近光示廓和双闪，早打转向，交替提醒比喇叭更有用。</p>
<h3 id="方向盘"><a href="#方向盘" class="headerlink" title="方向盘"></a>方向盘</h3><p>驾校的教学很完美了，一推一拉，对于几圈心里有数。</p>
<p>主要新的心得是把掌心空出来，推的手用手掌腹部去摩擦方向盘，拉的手用指尖轻捏轻拉，很舒服，发力很轻松，控制很稳定。同时操作转向灯和打远近交替灯光很方便。</p>
<h3 id="转速时速"><a href="#转速时速" class="headerlink" title="转速时速"></a>转速时速</h3><p>汽车说白了，就是发动机提供转速，离合器按比例输出转速，所以转速舒服就很完美了，这也是顿挫感的原因，也是需要降档补油，跟指的原因，跟指实际上就是带刹车的降档补油。</p>
<p>转速（转速表和时速表）匹配最重要，行驶中靠声音和车身震动感觉，基本没时间看数字，适合几档就几档，越级升档降档都没有关系，都是正确的不用有心理负担相信自己，控制好油门离合配合没有顿挫感就好了。</p>
<p>起步想用几档就几档，没关系的，只要油门转速能拉起来，五档起步也可以做到，一档起步，逐级升档，是为了突破百米加速，从一挡开始每个档位逐级用最佳动力最快，但平时开车没有必要。</p>
<p>手动挡就好玩在这儿，转速时速的匹配，就像玩具一样，放松玩就行，跟着感觉走。</p>
<h3 id="手动档杆"><a href="#手动档杆" class="headerlink" title="手动档杆"></a>手动档杆</h3><p>新手要对车子档杆的回弹更熟悉，更信任一些才能做到快速轻松的换挡。</p>
<p>所以需要大量的，分两部（直线发力）换档位的练习，不能养成一步（斜线发力）换挡的坏习惯。</p>
<p>离合踩到底，全程用掌心和掌腹来操作，避免手指用蛮力。</p>
<p>熟练后，一二，五六，都是分布操作，先完全侧手掌振（横）左（右），再用手腹轻推或者手掌轻拉。三四档熟练回弹空挡的档杆力度后，可以一步到底，比如二到三，先轻用力（直线）推档杆自动弹到空挡，再直线发力推到三档，熟练后感觉就是两下直线发力，看起来像一次完成的。</p>
<h3 id="踏板"><a href="#踏板" class="headerlink" title="踏板"></a>踏板</h3><p>油门一次踩到固定的预期高度。</p>
<p>刹车缓踩，紧急状况，刹车离合一脚到底。平时脚直踩刹车斜踩油门。</p>
<p>离合，踩要一脚到底，松的时候，前半程快松，在半联动结合点到半联动结束那段距离，缓抬，抬得速度和油门输出高度有直接关系。</p>
<p>过路口，转向，带上半联动会很自如。</p>
<h3 id="快速起步与弹射起步"><a href="#快速起步与弹射起步" class="headerlink" title="快速起步与弹射起步"></a>快速起步与弹射起步</h3><p>快速起步最常用，简单来说就是油离配合：离合配合指的是，半联动从开始的结合点到结合结束的那段距离，刚开始和最后已经结合完成的空窗期不算，轻踩油门，离合到半联动结合点开始介入油门，离合抬多快，油门踩多深，这样不可能熄火，掌握好轮胎的极限抓地力，比弹射起步，更稳定更快速。</p>
<p>弹射起步，就是简单暴力的快速起步，轻踩油门，离合到半联动结合点的时候直接松开离合，油门瞬间踩到底，轮胎会失去抓地力空转一下，然后车子弹出去。</p>
<h3 id="降档补油"><a href="#降档补油" class="headerlink" title="降档补油"></a>降档补油</h3><p>主要用在超车，或者上山动力不足，甚至要熄火的情况下。</p>
<p>比如60km&#x2F;h的4档，超车，踩油门到地板，车半天加不起速，增大了并车时间，很危险，降档补油退到三档，车子高转，瞬间动力十足，加速响应很快。</p>
<p>维持原来的速度甚至提高车速，降一档，需要克服的主要问题是发动机转速差带来的顿挫感，因为同样的车速，高档位转速低，低档位转速高。只需要补一脚空油拉高转速到，该档位下平顺运行时的匹配转速即可。</p>
<p>具体操作：转向灯，离合到底，退档，空油，松离合同时给油门。</p>
<p>这个过程越快越好，需要大量的练习，主要是空油不熟练，不敢猛踩油门，对于油门高度没有信心，踩油门松油门（空油）再踩油门需要花很多时间。</p>
<h3 id="跟指操作"><a href="#跟指操作" class="headerlink" title="跟指操作"></a>跟指操作</h3><p>主要用在车速较高，需要入小弯的时候。举个例子，60km&#x2F;h，入90°弯道，必须得减速，但档位在4档，必须减速退档到3档以内的话，太慢来不及，而且容易有顿挫感，刹车太狠，乘客会摇很不舒服。</p>
<p>这个我还不熟练，因为以前觉得没必要，现在觉得很帅，熟练了以后，路面可以更平顺更快，乘客体验更好。</p>
<p>基础是降档补油，这个一定得很熟练才能玩跟指。</p>
<p>具体操作：还是60km&#x2F;h以上入小弯，4直接退到3档为例。</p>
<p>转向灯，离合到底，退档（跳档无所谓，但需要补更多的油，拉更高的转速，需要多练习才能没有顿挫感）右脚横过来，脚趾点刹车到合适的车速，脚跟给空油拉转速，同时进行（如果油门刹车距离近的话也可以用脚侧面踩油门，都行，怎么舒服精准怎么来），然后抬离合给油门，单手方向盘入弯。</p>
<h3 id="惯性漂移"><a href="#惯性漂移" class="headerlink" title="惯性漂移"></a>惯性漂移</h3><p>还不会。</p>
<p>好像是先反打方向盘半圈，再正向打足，踩足油门？让轮胎失去抓地力。</p>
<h3 id="手刹漂移"><a href="#手刹漂移" class="headerlink" title="手刹漂移"></a>手刹漂移</h3><p>还不会。</p>
<p>手刹杀后轮，造成转速差。</p>
<p>有人说，转向中段猛踩油门，也有人说中段拉手刹，嗯，得试过才知道。</p>
<h3 id="极限刹车"><a href="#极限刹车" class="headerlink" title="极限刹车"></a>极限刹车</h3><p>点找不到，刹车高度，轮胎刚好不失去抓地力，刹车停车最短距离。</p>
<hr>
<p>西走菜菜</p>
<p>2021&#x2F;3&#x2F;29</p>
<hr>
<h3 id="降档补油-1"><a href="#降档补油-1" class="headerlink" title="降档补油"></a>降档补油</h3><p>之前自己自认为已经很好降档补油的操作，其实是有瑕疵的，我补油，油门踩得太稳柔，是线性踩下去的，有点像快速起步的油离配合，而且松太慢太墨迹了，经常会有很长的空转声，但是转速又不高。应该<strong>弹油门</strong>的，用腿的力量，一脚油门猛踩到底，然后瞬间抬腿松开，越快越好。</p>
<hr>
<p>2021&#x2F;4&#x2F;4</p>
<hr>
<p>仔细思考了一下，关于降档补油和跟指，又看了看所有能在b站找到的操作视频，确定了离合踏板，自己之前的操作有问题。补油太慢，松离合太慢。</p>
<p>因为习惯性的操作方式：加速升档，转速足够离合抬快点没事；减速降档，总是靠慢松离合来克服顿挫感。说白了就是发动机转速低于该目标档位的转速。</p>
<p>补油的目的就是这个，拉高转速，然后就可以快松离合了，只要转速匹配到目标档位的转速，瞬间松开离合也没关系，不妨想想，不换档位的时候，踩下离合，瞬间松开离合，是不是没有任何感觉。</p>
<hr>
<p>2021&#x2F;4&#x2F;5</p>
<h2 id="追加"><a href="#追加" class="headerlink" title="追加"></a>追加</h2><p>道路安全最重要，拉力赛以外的赛道或者日常驾驶中，漂移除了好玩，没有任何意义，无论是对安全还是对车速而言。</p>
<p>补油、跟趾已经成为日常驾驶习惯的一部分，帮助很大。</p>
<p>手刹漂移很容易，惯性漂移后驱车容易做到，破坏车身动态，需要反复反打方向去救车。</p>
<p>靠轮胎调整车速太初级了，发动机匹配去开车才有趣呢。</p>
<p>以后更新除非考了A级驾照或者赛照可能会更新，否则这篇帖子停更了，但是本人又不喜欢赛道那种既极其烧钱又循规蹈矩的玩法。</p>
<hr>
<p>2022&#x2F;3&#x2F;13</p>
<p>20-21年开车越来越快，21-22年开车越来越慢，眼中的速度一直在变慢，路感车感熟悉。</p>
]]></content>
      <categories>
        <category>生活和诗歌</category>
      </categories>
  </entry>
  <entry>
    <title>hadoop+pyspark学习和部署</title>
    <url>/2021/09/18/Hadoop+pyspark/</url>
    <content><![CDATA[<p><a href="https://codingdict.com/article/8880">PySpark简介</a></p>
<p>map reduce工具 将现有算法<strong>并行化</strong>  （执行平台）<strong>hadoop</strong>（java）上执行，其它如spark兼容python</p>
<p>基础架构如hadoop-&gt;分析基础架构hive，hbase-&gt;高级工具</p>
<p>mapreduce做并行化的几个应用方向：文本，图，关系型数据，机器学习（）</p>
<p>并行化挑战：进程计算结果交换；程序共享资源</p>
<span id="more"></span>

<h3 id="函数式编程初探-阮一峰的网络日志"><a href="#函数式编程初探-阮一峰的网络日志" class="headerlink" title="函数式编程初探 - 阮一峰的网络日志"></a><a href="https://www.baidu.com/link?url=B9Nckg0KW9QLQnfwtG0ugkemDjOfjEwNqxYuDnMmPO20rwFL2_uOnV_0_XAH9c23JHMXtpJ-GfKxTDJ0g08lOALp5-klyO8Riqs6K_N9oxy&wd=&eqid=b45c6d5d00040e07000000036098f887"><em>函数式编程</em>初探 - 阮一峰的网络日志</a></h3><p><strong>PySpark完成实验：</strong> Spark+python；支持本地和分布式集群；程序运行平台，spark，hadoop都可以，迁移方便。具体看官方文档。</p>
<hr>
<p>逻辑视图：四个原语</p>
<p>利用MapReduce框架对某个算法并行化</p>
<p> map map <strong>map</strong> ，$f$函数</p>
<p>fold (或<strong>reduce</strong>)汇总，有初始值，自动完成</p>
<p>链式组合t数组.map.map.reduce</p>
<p><code>map(k1,v1)-&gt;list(k2,v2) </code> kv对，k主码，v其它，key，value</p>
<p><code>reduce(k2,list(v2)-&gt;list(k3,v3)</code></p>
<p>数据切片，k作为主码，v是信息，<code>map</code>分派$f$，数据清洗，简单来说就是用关键字划分组，以此为依据，交给<code>reduce</code>，往往是数组，汇总。</p>
<p><strong>MapReduce“Runtime”（运行时）</strong>,framework,底层软件，类似spark或者Hadoop，他来处理：处理任务调度，负载均衡，同步异步，灾害重建</p>
<p>为了减少map与ruduce中间分布式排序时间，MRCP</p>
<p>增加<code>partition(k,p)</code>,上层map的k下层p为reduce用哈希绕开分布式排序</p>
<p>和<code>combine(k2,list(v2))</code> minireduce，本地统一组合一个虚拟机的不同分片</p>
<p>t-&gt;map-&gt;combine-&gt;partition-按关键字分组排序-&gt;reduce</p>
<p>map，reduce 输出<code>emit</code>交给分布式排序</p>
<hr>
<p> 物理视图：数据分片，分布式磁盘-&gt;给了VM,Map-&gt;本地保存到本地磁盘-&gt;分布式排序，有网络通讯，远程异地-&gt;VM做reduce-&gt;输出</p>
<p>两次分配算法都由控制主机master控制：作业提交，分配map节点，reduce节点。</p>
<p><strong>数据移动，作业调度 是几个矩阵？</strong></p>
<ul>
<li>分布式数据库到map虚拟机；</li>
<li>map虚拟机到reduce虚拟机？</li>
<li>master指派job给map，指派job给reduce虚拟机？计算效率？通信效率？这是不是task调度？</li>
</ul>
<p>多个机器，低性能。随机访问代价昂贵</p>
<p>(hadoop)job提交：</p>
<ul>
<li>job分成map reduce等四个task</li>
<li>每个task会有一个任务跟踪器</li>
<li>多个job会形成有一个工作流</li>
</ul>
<p>数据现在很多是以kv对的形式存储计算的，不用中间格式转换，如mangodb</p>
<p>Hadoop可以本地部署，本地调试好在部署到云，不然debug麻烦死。</p>
<hr>
<p>作业：安装pyspark实现个小例子。</p>
<p>PySpark相关资料：</p>
<p>1、Pyspark基础教程：rdd弹性数据集 datafree<br>      <a href="https://github.com/jadianes/spark-py-notebooks">https://github.com/jadianes/spark-py-notebooks</a><br>2、PySpark MLLib教程 ：<br>      <a href="https://github.com/susanli2016/PySpark-and-MLlib">https://github.com/susanli2016/PySpark-and-MLlib</a><br>3、项目实践：<br>      <a href="https://zhuanlan.zhihu.com/p/52753778">https://zhuanlan.zhihu.com/p/52753778</a>  （知乎）</p>
<hr>
<p>可视化工具据deck.gl，kepler.gl</p>
<p>版本信息用<code>py36</code>环境搭建</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">py36   //菜菜</span><br><span class="line">JDK1.8</span><br><span class="line">scala==2.11.8</span><br><span class="line">spark==3.02</span><br><span class="line">hadoopp==3.2</span><br><span class="line">winutils==3.0.0</span><br><span class="line">py4j==0.10.9</span><br><span class="line">python==3.6.12</span><br><span class="line">pyspark==3.0.2</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//李敏</span><br><span class="line">JDK1.8</span><br><span class="line">scala==2.11.8</span><br><span class="line">spark==2.4.7</span><br><span class="line">hadoopp==2.7.7</span><br><span class="line">winutils==2.7.1</span><br><span class="line">py4j==0.10.9</span><br><span class="line">python==3.7.6</span><br><span class="line">pyspark==2.4.0</span><br></pre></td></tr></table></figure>

<hr>
<p>spark下的分布式启动sark方法：spark目录下，sbin目录，集群启动，start-all.sh脚本运行</p>
<p>终端地址<a href="http://192.168.152.131:8080/">http://192.168.152.131:8080/</a></p>
<p>会显示集群URL</p>
<p>提供的是spark主机的URL即可加入</p>
<hr>
<p>打开终端<code>Ctrl+alt+T</code></p>
<p>复制粘贴<code>ctrl + shift + c，ctrl + shift + v</code></p>
<p>显示目录<code>ls  </code></p>
<p>自动补全 <code>tab</code> <code>tab</code></p>
<p>显示当前路径 <code>pwd</code></p>
<p>vim</p>
<p><code>i</code>插入</p>
<p> <code>:</code> <code>q</code>是退出，<code>w</code>保存</p>
<p><code>wq!</code>强制保存退出vim</p>
<p>anaconda可视化界面</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">source ~/anaconda3/bin/activate root  </span><br></pre></td></tr></table></figure>

<p>显示界面<code>anaconda-navigator</code></p>
<p>显示jyputer notebook<code>jyputer book</code></p>
<p>显示虚拟环境<code>conda info --envs</code></p>
<p>conda创建虚拟环境<code>conda create -n your_name python=X.X（如2.7，3.6等）</code></p>
<p>进入虚拟环境<code>source activate your_name</code></p>
<p>退出虚拟环境 <code>source deactivate</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export SPARK_HOME=/home/qyt/Downloads/spark-3.0.2-bin-hadoop3.2</span><br><span class="line">export PATH=$PATH:$SPARK_HOME/bin</span><br><span class="line"></span><br><span class="line">export HADOOP_HOME=/home/qyt/Downloads/hadoop-3.2.2</span><br><span class="line">export PATH=$&#123;HADOOP_HOME&#125;/bin:$PATH</span><br><span class="line"></span><br><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure>

<p><code>vim /etc/profile</code>环境变量配置位置</p>
<p><code>./</code>执行文件</p>
<hr>
<p>MRDP-&gt;spark 为什么？</p>
<p>大数据表达能力不足；spark对MADP扩充到四十个，一类是map一类是reduce</p>
<p>每次map reduce 都需要HDFS文件管理系统，需要大量的IO</p>
<p>spark RDD弹性数据集，内存分布式，spark底层对RDD做高度的冗余</p>
<p>Hadoop不支持中间HDFS换成RDD，spark可以。</p>
<p>mapreduce基本指令集太少，太简单了；迭代过程中间的磁盘IO太大；</p>
<p>spark弱化了map，reduce的成对性</p>
<p>RDD数据类型</p>
<p>transformationscc;action</p>
<p>构建数据流图（谱系图）linage</p>
<p>图论做优化</p>
<hr>
<p>如何对梯度下降进行并行化？</p>
<p>梯度下降法并行化设计：</p>
<p>机器学习：分类问题或者回归预测问题</p>
<p>特征向量，标签找出$f:X\rightarrow Y$</p>
<p>$\to \gets \theta$ 太熟了就不写了</p>
<p>如何并行化？</p>
<p>递归过程不能并行化，能并行化：$\Sigma$找梯度 由map完成。reduce做外层的一次加减。 </p>
<p>logistiic 回归 $\to$分类，w向量求梯度，可以并行化</p>
<hr>
<p>如何并行快速处理大规模，复杂的图？</p>
<p>图的并行算法设计总结：</p>
<p>BFS在map reduce怎么表示？数据结构：K，V对：node n，结点对应临界列表和最短路径d。</p>
<p>pagerank：d不一样。衡量一个网页的重要性，随机冲浪模型：概率（网址跳转+外链）；</p>
<p>草原生态模型：湖有高度差和邻接河道，权重矩阵是概率转移矩阵$P$，迭代直到两个状态矩阵$\pi$相同，$\pi \cdot P&#x3D;\pi$, $\pi$就是PageRank，外链访问，网页重要程度.</p>
<p>如果有蒸发下雨，$\alpha$蒸发, 绝对地址直接访问网页，$\pi&#x3D;\pi\cdot P \times\alpha+(1-\alpha)\cdot N$，N是湖泊（网页）个数</p>
<p>出度 由map；入度求和由reduce；KV对排序</p>
<table>
<thead>
<tr>
<th></th>
<th>PageRank</th>
<th>BFS</th>
</tr>
</thead>
<tbody><tr>
<td>map</td>
<td>PR&#x2F;N</td>
<td>d+1</td>
</tr>
<tr>
<td>reduce</td>
<td>sum</td>
<td>min</td>
</tr>
</tbody></table>
<hr>
<p>作业：</p>
<ol>
<li>之前pyspark的实验搭建过程</li>
<li>大作业 自拟题目</li>
</ol>
<p>题目1、请自拟题目，自选方向（电力方向尤佳），撰写一篇云计算在不同领域的最新应用的综述文章。（3000+）</p>
<p>题目2、请自拟题目，自选一个已运用MapReduce实现过的算法（机器学习算法尤佳），撰写一篇分析运用MapReduce编程模型对传统算法进行并行化的文章。（2000-3000）</p>
<p>题目3、请自拟题目，自选一个未运用MapReduce实现过的算法（电力方向的算法尤佳），运用MapReduce程模型对该算法进行并行化设计，采用Hadoop API实现该算法，并在Hadoop集群上运行测试，根据测试结果撰写一篇文章。（2000-3000）</p>
<hr>
<p>Towards Self-managing cloud storage with rl</p>
<p><code>connectedpapers.com</code> 文献追踪</p>
<hr>
<p>2021&#x2F;9</p>
]]></content>
      <categories>
        <category>Cloud Computing</category>
      </categories>
  </entry>
  <entry>
    <title>水墨画少女（更）</title>
    <url>/2022/04/26/Ink-painting-of-young-girls/</url>
    <content><![CDATA[<p>看B站大佬迟迟画水墨画美少女太心动了，所以看他的书想学学，写个帖子记录一下，有一说一美女真的难画，我应该还没掌握高颜值的关键。</p>
<span id="more"></span>

<h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><p>小狼毫+中羊毫</p>
<p>一得阁墨水</p>
<p>HB铅笔，4B橡皮，画板，胶带，素描纸。</p>
<h2 id="练习作品"><a href="#练习作品" class="headerlink" title="练习作品"></a>练习作品</h2><p><img src="https://cdn.jsdelivr.net/gh/Kasahara-MAY/MarkdownPicture/img/202204261120921.jpg"></p>
<p>大概断断续续画了一周，一开始勾线的难度主要在于五官分部，我发现一个问题，以前学素描学的三庭五眼并不是非常适应，以前画真人眼睛在发顶和下巴的中间二分之一位置，这种偏二次元风格的人像眼睛更大一点更靠下，这幅练习作眼睛到下巴留的太多了，鼻子和嘴巴位置都不对了，美女都是头包脸，应该小巧玲珑一点更好看。对了，我用瘦脸特效，把下面缩短之后稍微顺眼一点哈哈哈。另外嘴是败笔，用羊毫的时候手抖了，下嘴唇画出去了……</p>
<p>毛笔画人像初体验不错，没有想象中难用，问题应该就是画头发经常换墨，不然不丝滑，细碎头发还是要练练笔法。</p>
<p>下次画画我会勾线时间更长一点，完完全全定型了再画，五官再勾细一点，把细节都勾出来。</p>
<p>总得来说第一张不好不坏，主要是有意思，挺开心的。</p>
<hr>
<p>Sherry</p>
<p>2022&#x2F;4&#x2F;26</p>
]]></content>
      <categories>
        <category>Sherry</category>
      </categories>
  </entry>
  <entry>
    <title>Html拓展(更)</title>
    <url>/2022/03/28/Html/</url>
    <content><![CDATA[<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
             <div class="text" style=" text-align:center;">
<font face="楷体" color=grey size=6>露の世は露の世ながらさりながら</font>
</div>
            <i class="fa fa-quote-right"></i>
          </blockquote>

<p>用Html拓展你的markdown</p>
<span id="more"></span>

<h2 id="大引号，字体"><a href="#大引号，字体" class="headerlink" title="大引号，字体"></a>大引号，字体</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&#123;% cq %&#125; &lt;div class=<span class="string">&quot;text&quot;</span> style=<span class="string">&quot; text-align:center;&quot;</span>&gt;</span><br><span class="line">&lt;font face=<span class="string">&quot;楷体&quot;</span> color=grey size=<span class="number">6</span>&gt;露の世は露の世ながらさりながら&lt;/font&gt;</span><br><span class="line">&lt;/div&gt;&#123;% endcq %&#125;</span><br></pre></td></tr></table></figure>

<!-- 居中 -->

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;center&gt;内容&lt;/center&gt;</span><br></pre></td></tr></table></figure>



<center>内容</center>
<!-- 右对齐 -->

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;div style=<span class="string">&quot;text-align:right&quot;</span>&gt;内容&lt;/div&gt;</span><br></pre></td></tr></table></figure>



<div style="text-align:right">内容</div>

<h2 id="文本框"><a href="#文本框" class="headerlink" title="文本框"></a>文本框</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE HTML PUBLIC <span class="string">&quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot;</span>&gt;</span><br><span class="line">&lt;HTML&gt;</span><br><span class="line">&lt;HEAD&gt;</span><br><span class="line">&lt;TITLE&gt; New Document &lt;/TITLE&gt;</span><br><span class="line">&lt;style type=<span class="string">&quot;text/css&quot;</span>&gt;</span><br><span class="line">* &#123;undefined</span><br><span class="line">    font-size:12px;</span><br><span class="line">    margin:<span class="number">0</span>;</span><br><span class="line">    padding:<span class="number">0</span>; </span><br><span class="line">&#125; </span><br><span class="line">fieldset.test &#123;undefined</span><br><span class="line">    padding:10px;</span><br><span class="line">    margin:10px;</span><br><span class="line">    width:270px;</span><br><span class="line">    color:#<span class="number">333</span>; </span><br><span class="line">    border:#06c solid 1px;</span><br><span class="line">&#125; </span><br><span class="line">legend &#123;undefined</span><br><span class="line">    color:#06c;</span><br><span class="line">    padding:5px 10px;</span><br><span class="line">    font-weight:<span class="number">800</span>; </span><br><span class="line">    <span class="comment">/*background:white;*/</span></span><br><span class="line">&#125; </span><br><span class="line">ul &#123;undefined</span><br><span class="line">    list-style-type: none;</span><br><span class="line">    margin:8px <span class="number">0</span> 4px <span class="number">0</span>;</span><br><span class="line">&#125; </span><br><span class="line">li &#123;undefined</span><br><span class="line">    margin-top:4px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/HEAD&gt;</span><br><span class="line">&lt;BODY&gt;</span><br><span class="line">&lt;fieldset style=<span class="string">&quot;width:300px; height:100px;&quot;</span>&gt; </span><br><span class="line">        &lt;legend&gt;生产信息 &lt;/legend&gt; </span><br><span class="line">        &lt;div&gt;试一下 &lt;/div&gt; </span><br><span class="line">    &lt;/fieldset&gt;</span><br><span class="line">&lt;fieldset class=<span class="string">&quot;test&quot;</span>&gt; </span><br><span class="line">&lt;legend&gt;CSS网页布局&lt;/legend&gt; </span><br><span class="line">    &lt;ul&gt; </span><br><span class="line">   &lt;li&gt;哈哈哈哈哈哈哈哈哈哈哈哈&lt;/li&gt; </span><br><span class="line">   &lt;li&gt;哈哈哈哈哈哈哈哈哈哈哈哈&lt;/li&gt; </span><br><span class="line">   &lt;li&gt;哈哈哈哈哈哈哈哈哈哈哈哈&lt;/li&gt; </span><br><span class="line">   &lt;li&gt;哈哈哈哈哈哈哈哈哈哈哈哈&lt;/li&gt; </span><br><span class="line">    &lt;/ul&gt; </span><br><span class="line">&lt;/fieldset&gt;</span><br><span class="line">&lt;/BODY&gt;</span><br><span class="line">&lt;/HTML&gt;</span><br></pre></td></tr></table></figure>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML>
<HEAD>
<TITLE> New Document </TITLE>
<style type="text/css">
* {undefined
    font-size:12px;
    margin:0;
    padding:0; 
} 
fieldset.test {undefined
    padding:10px;
    margin:10px;
    width:270px;
    color:#333; 
    border:#06c solid 1px;
} 
legend {undefined
    color:#06c;
    padding:5px 10px;
    font-weight:800; 
    /*background:white;*/
} 
ul {undefined
    list-style-type: none;
    margin:8px 0 4px 0;
} 
li {undefined
    margin-top:4px;
}
</style>
</HEAD>
<BODY>
<fieldset style="width:300px; height:100px;"> 
        <legend>生产信息 </legend> 
        <div>试一下 </div> 
    </fieldset>
<fieldset class="test"> 
<legend>CSS网页布局</legend> 
    <ul> 
   <li>哈哈哈哈哈哈哈哈哈哈哈哈</li> 
   <li>哈哈哈哈哈哈哈哈哈哈哈哈</li> 
   <li>哈哈哈哈哈哈哈哈哈哈哈哈</li> 
   <li>哈哈哈哈哈哈哈哈哈哈哈哈</li> 
    </ul> 
</fieldset>
</BODY>
</HTML>


<h2 id="添加一言或者今日诗词"><a href="#添加一言或者今日诗词" class="headerlink" title="添加一言或者今日诗词"></a>添加一言或者今日诗词</h2><p>\themes\next\source\css_common\components\post\post.styl添加了样式</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">.poem-wrap &#123;</span><br><span class="line">    position: relative;</span><br><span class="line">    width: 730px;</span><br><span class="line">    max-width: <span class="number">80</span>%;</span><br><span class="line">    border: 2px solid #<span class="number">797979</span>;</span><br><span class="line">    border-top: none;</span><br><span class="line">    text-align: center;</span><br><span class="line">    margin: 80px auto;</span><br><span class="line">&#125;</span><br><span class="line">.poem-wrap h1 &#123;</span><br><span class="line">    font-size: 30px;</span><br><span class="line">    position: relative;</span><br><span class="line">    margin-top: -20px;</span><br><span class="line">    display: inline-block;</span><br><span class="line">    letter-spacing: 4px;</span><br><span class="line">    color: #<span class="number">797979</span></span><br><span class="line">&#125;</span><br><span class="line">.poem-wrap p &#123;</span><br><span class="line">    width: <span class="number">70</span>%;</span><br><span class="line">    margin: auto;</span><br><span class="line">    line-height: 30px;</span><br><span class="line">    color: #<span class="number">797979</span>;</span><br><span class="line">&#125;</span><br><span class="line">.poem-wrap p#poem &#123;</span><br><span class="line">    font-size: 25px;</span><br><span class="line">&#125;</span><br><span class="line">.poem-wrap p#info &#123;</span><br><span class="line">    font-size: 15px;</span><br><span class="line">    margin: 15px auto;</span><br><span class="line">&#125;</span><br><span class="line">.poem-border &#123;</span><br><span class="line">    position: absolute;</span><br><span class="line">    height: 2px;</span><br><span class="line">    width: <span class="number">27</span>%;</span><br><span class="line">    background-color: #<span class="number">797979</span>;</span><br><span class="line">&#125;</span><br><span class="line">.poem-right &#123;</span><br><span class="line">    right: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">.poem-left &#123;</span><br><span class="line">    left: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@media</span> (max-width: 685px) &#123;</span><br><span class="line">    .poem-border &#123;</span><br><span class="line">        width: <span class="number">18</span>%;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@media</span> (max-width: 500px) &#123;</span><br><span class="line">    .poem-wrap &#123;</span><br><span class="line">        margin-top: 60px;</span><br><span class="line">        margin-bottom: 20px;</span><br><span class="line">        border-top: 2px solid #<span class="number">797979</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    .poem-wrap h1 &#123;</span><br><span class="line">        margin: 20px 6px;</span><br><span class="line">    &#125;</span><br><span class="line">    .poem-border &#123;</span><br><span class="line">        display: none;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="引入一言，或者今日诗词"><a href="#引入一言，或者今日诗词" class="headerlink" title="引入一言，或者今日诗词"></a>引入一言，或者今日诗词</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;div class=<span class="string">&quot;poem-wrap&quot;</span>&gt;</span><br><span class="line">  &lt;div class=<span class="string">&quot;poem-border poem-left&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line">  &lt;div class=<span class="string">&quot;poem-border poem-right&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line">    &lt;h1&gt;念两句诗&lt;/h1&gt;</span><br><span class="line">    &lt;p id=<span class="string">&quot;poem&quot;</span>&gt;挑选中...&lt;/p&gt;</span><br><span class="line">    &lt;p id=<span class="string">&quot;info&quot;</span>&gt;</span><br><span class="line">  &lt;script src=<span class="string">&quot;https://sdk.jinrishici.com/v2/browser/jinrishici.js&quot;</span> charset=<span class="string">&quot;utf-8&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">  &lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">    jinrishici.load(function(result) &#123;</span><br><span class="line">      poem.innerHTML = result.data.content</span><br><span class="line">      info.innerHTML = <span class="string">&#x27;【&#x27;</span> + result.data.origin.dynasty + <span class="string">&#x27;】&#x27;</span> + result.data.origin.author + <span class="string">&#x27;《&#x27;</span> + result.data.origin.title + <span class="string">&#x27;》&#x27;</span></span><br><span class="line">      document.getElementById(<span class="string">&quot;poem&quot;</span>).value(poem);</span><br><span class="line">      document.getElementById(<span class="string">&quot;info&quot;</span>).value(info);  </span><br><span class="line">  &#125;);</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>



<div class="poem-wrap">
  <div class="poem-border poem-left"></div>
  <div class="poem-border poem-right"></div>
    <h1>留言墙</h1>
    <p id="poem">挑选中...</p>
    <p id="info">
  <script src="https://sdk.jinrishici.com/v2/browser/jinrishici.js" charset="utf-8"></script>
  <script type="text/javascript">
    jinrishici.load(function(result) {
      poem.innerHTML = result.data.content
      info.innerHTML = '【' + result.data.origin.dynasty + '】' + result.data.origin.author + '《' + result.data.origin.title + '》'
      document.getElementById("poem").value(poem);
      document.getElementById("info").value(info);  
  });
  </script>
</div>

<h3 id="一言"><a href="#一言" class="headerlink" title="一言"></a>一言</h3><p>和上面做一个替换即可，种类更多，不过个人不太喜欢，质量不高，总有种<em>为赋新词强说愁</em>的感觉。</p>
<p>下面这句中二的话是随机生成的哦~</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;p id=<span class="string">&quot;hitokoto&quot;</span>&gt;获取中...&lt;/p&gt;</span><br><span class="line">&lt;script src=<span class="string">&quot;https://v1.hitokoto.cn/?encode=js&amp;select=%23hitokoto&quot;</span> defer&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p id="hitokoto">获取中...</p>
<script src="https://v1.hitokoto.cn/?encode=js&select=%23hitokoto" defer></script>

<hr>
<p>西走菜菜</p>
<p>2022&#x2F;3&#x2F;28</p>
<h2 id="网易云外链"><a href="#网易云外链" class="headerlink" title="网易云外链"></a>网易云外链</h2><p>找到网易云音乐网页版官网, 获取外链</p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203292042730.png" alt="image-20220329204257586">注意先获取</p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203292040235.png" alt="image-20220329204042035"></p>
<p>我觉得这个小点的还不错</p>
<h3 id="iframe插件"><a href="#iframe插件" class="headerlink" title="iframe插件"></a>iframe插件</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;iframe frameborder=<span class="string">&quot;no&quot;</span> border=<span class="string">&quot;0&quot;</span> marginwidth=<span class="string">&quot;0&quot;</span> marginheight=<span class="string">&quot;0&quot;</span> width=<span class="number">298</span> height=<span class="number">52</span> src=<span class="string">&quot;//music.163.com/outchain/player?type=2&amp;id=36199955&amp;auto=0&amp;height=32&quot;</span>&gt;&lt;/iframe&gt;</span><br></pre></td></tr></table></figure>

<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=298 height=52 src="//music.163.com/outchain/player?type=2&id=36199955&auto=0&height=32"></iframe>

<table>
<thead>
<tr>
<th>iframe插件可行</th>
</tr>
</thead>
<tbody><tr>
<td><em>优点：</em>可以自己调整插件的高度、宽度</td>
</tr>
<tr>
<td><em>缺点：</em>兼容性堪忧，不过显然闲话茶楼支持~</td>
</tr>
</tbody></table>
<h3 id="flash插件"><a href="#flash插件" class="headerlink" title="flash插件"></a>flash插件</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;embed src=<span class="string">&quot;//music.163.com/style/swf/widget.swf?sid=36199955&amp;type=2&amp;auto=0&amp;width=278&amp;height=32&quot;</span> width=<span class="string">&quot;298&quot;</span> height=<span class="string">&quot;52&quot;</span>  allowNetworking=<span class="string">&quot;all&quot;</span>&gt;&lt;/embed&gt;</span><br></pre></td></tr></table></figure>

<p><embed src="//music.163.com/style/swf/widget.swf?sid=36199955&type=2&auto=0&width=278&height=32" width="298" height="52"  allowNetworking="all"></embed></p>
<table>
<thead>
<tr>
<th>flash插件不可行</th>
</tr>
</thead>
<tbody><tr>
<td><em>优点：</em>可以适用大部分的博客，如网易、新浪博客等，但是这儿不行</td>
</tr>
<tr>
<td><em>缺点：</em>无法自己调整插件的高度、宽度</td>
</tr>
</tbody></table>
<h4 id="将iframe改为embed"><a href="#将iframe改为embed" class="headerlink" title="将iframe改为embed"></a>将<code>iframe</code>改为<code>embed</code></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;embed frameborder=<span class="string">&quot;no&quot;</span> border=<span class="string">&quot;0&quot;</span> marginwidth=<span class="string">&quot;0&quot;</span> marginheight=<span class="string">&quot;0&quot;</span> width=<span class="number">298</span> height=<span class="number">52</span> src=<span class="string">&quot;//music.163.com/outchain/player?type=2&amp;id=36199955&amp;auto=0&amp;height=32&quot;</span>&gt;&lt;/embed&gt;</span><br></pre></td></tr></table></figure>

<p><embed frameborder="no" border="0" marginwidth="0" marginheight="0" width=298 height=52 src="//music.163.com/outchain/player?type=2&id=36199955&auto=0&height=32"></embed></p>
<table>
<thead>
<tr>
<th>将<code>iframe</code>改为<code>embed</code>可行</th>
</tr>
</thead>
<tbody><tr>
<td><em>优点：</em>可以适用大部分的博客，如网易、新浪博客等，但是这儿不行</td>
</tr>
<tr>
<td><em>缺点：</em>无法自己调整插件的高度、宽度，格式不好看。</td>
</tr>
</tbody></table>
<p>歌曲来源</p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203292112302.png" alt="image-20220329211203761"></p>
<p>以后给文章里随手加首音乐吧~</p>
<p>直接<a href="http://www.baidu.com/link?url=W0AXr1RZeOnMvn5MAsryv4xhaUQcpvy0od8MteKM2s3"><em>网易云</em>音乐</a>粘贴<code>iframe</code>到你的markdown就行，推荐第一种，第三种备选。</p>
<p>另外测试下来似乎评论区不支持。</p>
<hr>
<p>3&#x2F;29</p>
<h2 id="添加bilibili视频"><a href="#添加bilibili视频" class="headerlink" title="添加bilibili视频"></a>添加bilibili视频</h2><p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203301257823.png" alt="image-20220330125753646"></p>
<p>复制嵌入代码到markdown即可</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;iframe src=<span class="string">&quot;//player.bilibili.com/player.html?aid=891977594&amp;bvid=BV17P4y1V7BX&amp;cid=450189304&amp;page=1&quot;</span> scrolling=<span class="string">&quot;no&quot;</span> border=<span class="string">&quot;0&quot;</span> frameborder=<span class="string">&quot;no&quot;</span> framespacing=<span class="string">&quot;0&quot;</span> allowfullscreen=<span class="string">&quot;true&quot;</span>&gt; &lt;/iframe&gt;</span><br></pre></td></tr></table></figure>

<iframe src="//player.bilibili.com/player.html?aid=891977594&bvid=BV17P4y1V7BX&cid=450189304&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>

<hr>
<p>2022&#x2F;3&#x2F;30</p>
]]></content>
      <categories>
        <category>Markdown&amp;Blog</category>
      </categories>
  </entry>
  <entry>
    <title>云计算通读</title>
    <url>/2020/12/11/Introduction-of-Cloud-Computing/</url>
    <content><![CDATA[<p>详情请见：<a href="http://c.biancheng.net/cloud_computing/">云计算技术与应用学习教程（精华版）</a></p>
<h2 id="1-软件是什么"><a href="#1-软件是什么" class="headerlink" title="1.软件是什么"></a>1.软件是什么</h2><p>键盘和鼠标是最常见的输入设备，显示器和音箱是最常见的输出设备，CPU、内存、存储和网络统称为<strong>计算资源</strong>。</p>
<p>两个概念：<strong>实时</strong>输入&#x2F;输出和<strong>批量</strong>输入&#x2F;输出。</p>
<ul>
<li>实时输入&#x2F;输出是指 CPU 执行输入&#x2F;输出步骤时，立即完成输入&#x2F;输出动作。</li>
<li>批量输入&#x2F;输出是一次性输入全部的信息，一次性输出全部的计算结果。</li>
</ul>
<p>对于实时的<strong>强交互性</strong>软件，有两种解决方法：</p>
<p>就近部署云计算分支中心。改造软件以便能通过网页浏览器访问，用户只与本地的网页浏览器进行实时输入&#x2F;输出交互，而网页浏览器与“云”中软件进行批量输入&#x2F;输出传输</p>
<span id="more"></span>

<h2 id="2-计算机由哪些软件和硬件组成？"><a href="#2-计算机由哪些软件和硬件组成？" class="headerlink" title="2.计算机由哪些软件和硬件组成？"></a>2.计算机由哪些软件和硬件组成？</h2><p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203211556534.gif" alt="计算机系统逻辑层次结构"><br>图 1 计算机系统逻辑层次结构</p>
<p>手段与目的分离是云计算的另一个<strong>特征</strong>，即云计算服务提供商拥有<strong>计算资源</strong>这个“手段”，而云计算用户拥有<strong>数据资料</strong>这个“目的”。</p>
<h2 id="3-计算机网络（因特网）是什么？"><a href="#3-计算机网络（因特网）是什么？" class="headerlink" title="3.计算机网络（因特网）是什么？"></a>3.计算机网络（因特网）是什么？</h2><p>消息的打包和传递都是由计算机网络自动完成的，而且以电或光的速度传播，所以速度非常快。传递路径上<strong>转发机构（通常是路由器）的多少</strong>决定了一条消息到达对方计算机所消耗的时间（术语称<strong>延时</strong>），因此位于深圳的用户给美国的朋友发送消息有可能比给武汉的朋友发送消息还快。</p>
<p>一个云计算中心的<strong>延时半径</strong>通常为 100 毫秒，即一个数据包从云中心出发，50 毫秒所能到达的范围（返回也要 50 毫秒），这个数字与地理位置没有直接关系，而与网络路径上的转发机构和数目有关。</p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203211556125.jpeg" alt="延时半径100毫秒"><br>图 2 延时半径100毫秒</p>
<h2 id="4-IT系统组成"><a href="#4-IT系统组成" class="headerlink" title="4.IT系统组成"></a>4.IT系统组成</h2><p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203211556341.jpeg" alt="IT系统的逻辑层次结构"><br>图 1 IT系统的逻辑层次结构</p>
<p><strong>IT</strong> 就是信息（Information）与技术（Technology），其中 I 是<strong>目的</strong>，T 是<strong>手段</strong>，T 是用来加工处理 I 的。T 广义上还包括企业中的计算机技术人员。</p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203211556852.jpeg" alt="应用软件与平台软件的关系"><br>图 2 应用软件与平台软件的关系</p>
<p>运行库有点像电工人员的<strong>工具袋</strong>，里面有螺丝刀、电笔、老虎钳、剥线钳等，应用软件在运行时需要使用各种小工具（术语叫系统库函数调用），操作系统提供了绝大多数常用的小工具，并分门别类地保存在硬盘的文件中。Windows 操作系统中以 .dll为扩展名的文件。</p>
<h2 id="5-云计算是什么？它有哪些形式？"><a href="#5-云计算是什么？它有哪些形式？" class="headerlink" title="5.云计算是什么？它有哪些形式？"></a>5.云计算是什么？它有哪些形式？</h2><p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203211556236.jpeg" alt="云计算的可视化模型"><br>图 1 云计算的可视化模型</p>
<h2 id="6-IaaS、PaaS和SaaS：云计算的三种服务模式"><a href="#6-IaaS、PaaS和SaaS：云计算的三种服务模式" class="headerlink" title="6.IaaS、PaaS和SaaS：云计算的三种服务模式"></a>6.IaaS、PaaS和SaaS：云计算的三种服务模式</h2><p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203211557224.jpeg" alt="云计算的3种服务模式"><br>图 1 云计算的 3 种服务模式</p>
<h3 id="IaaS"><a href="#IaaS" class="headerlink" title="IaaS"></a>IaaS</h3><p>I<strong>aaS 是“Infrastructure as a Service”的首字母缩写，意思是基础设施即服务，即把 IT 系统的基础设施层作为服务出租出去</strong>。由云服务提供商把 IT 系统的基础设施建设好，并对计算设备进行池化，然后<strong>直接对外出租硬件服务器、虚拟主机、存储或网络设施（负载均衡器、防火墙、公网IP地址及诸如 DNS 等基础服务）</strong>等。</p>
<p>云服务提供商负责管理机房基础设施、计算机网络、磁盘柜、服务器和虚拟机，租户自己安装和管理操作系统、数据库、中间件、应用软件和数据信息，</p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203211557078.jpeg" alt="Iaas云"><br>图 1 IaaS 云</p>
<p>IaaS 云服务提供商<strong>计算租赁费用</strong>的因素包括 CPU、内存和存储的数量，一定时间内消耗的网络带宽，公网 IP 地址数量及一些其他需要的增值服务（如监控、自动伸缩等）等。</p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203211557002.jpeg" alt="IaaS云端基本架构模型"><br>图 2 IaaS 云端基本架构模型</p>
<p><strong>第一层云管理器</strong>是云端对外的总入口，在这里验证用户身份，管理用户权限，向合法用户发放票据（然后用户持此票据使用计算资源）、分配资源并管理用户租赁的资源。</p>
<p><strong>第二层</strong>每一个集群负责管理本集群内部的高速互联在一起的计算机，一个集群内的计算机可能有成百上千台。</p>
<p>集群管理器接受上层的资源查询请求，然后向下层的计算机管理器发送查询请求.</p>
<p>另外，本层 PLS 中存储了本集群内的全<strong>部虚拟机镜像文件</strong>，这样一台虚拟机就能在集群内任意一台计算机上运行，并轻松实现虚拟机热迁移。</p>
<p><strong>第三层</strong>每台计算机上都有一个计算机管理器，它一方面与上层的集群管理器打交道，另一方面与本机上的虚拟机软件打交道。</p>
<p>一些搞研发的计算机技术人员倾向于<strong>租赁</strong> IaaS 主机。但是对于租户来说，IaaS 云主机除管理难度大外，还有一个明显的缺陷：计算资源浪费严重。因为操作系统、数据库和中间件本身要消耗大量的计算资源（CPU、内存和磁盘空间）。</p>
<p>下面是一些 IaaS 云服务的实际应用。</p>
<ol>
<li>备份和恢复服务。</li>
<li>计算服务：提供弹性资源。</li>
<li><strong>内容分发网络（CDN）</strong>：把内容分发到靠近用户的地方，对于一些基于网页的应用系统，为了提高用户体验，往往在各个地方（人口稠密的地方）设立分支服务器，当用户浏览网页时，被重定向到本地 Web 服务器，所以数据必须实时分发并保持一致。</li>
<li>服务管理：管理云端基础设施平台的各种服务。</li>
<li>存储服务：提供用于备份、归档和文件存储的大规模可伸缩存储。</li>
</ol>
<h3 id="PaaS"><a href="#PaaS" class="headerlink" title="PaaS"></a>PaaS</h3><p>PaaS 是“Platform as a Service”的首字母缩写，意为平台即服务，即把 IT 系统的平台软件层作为服务出租出去，如图 1 所示。</p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203211557360.jpeg" alt="PaaS云"><br>图 1 PaaS 云</p>
<p>相比于 IaaS 云服务提供商，PaaS 云服务提供商要做的事情增加了，他们需要准备机房、布好网络、购买设备、安装操作系统、数据库和中间件，即把基础设施层和平台软件层都搭建好，然后在平台软件层上划分“小块”（习惯称之为<strong>容器</strong>）并对外出租。</p>
<p>PaaS 云服务提供商也可以从其他 IaaS 云服务提供商那里租赁计算资源，然后自己部署平台软件层。另外，为了让消费者能直接在云端开发调试程序，PaaS 云服务提供商还得安装各种开发调试工具。相反，租户要做的事情相比 IaaS 要少很多，租户只要开发和调试软件或者安装、配置和使用应用软件即可。PaaS 云服务的<strong>消费者</strong>主要包括以下人员。程序开发人员，程序测试人员，软件部署人员，应用软件管理员，应用程序最终用户。</p>
<p><strong>半平台 PaaS</strong>平台软件层中只安装了操作系统，其他的留给租户自己解决。<strong>全平台 PaaS</strong> 安装了应用软件依赖的全部平台软件（操作系统、数据库、中间件、运行库）。</p>
<p>下面是一些 PaaS 云服务的实际应用。</p>
<ol>
<li>商业智能（BI）：用于创建仪表盘、报表系统、数据分析等应用程序的平台。</li>
<li>数据库：提供关系型数据库或者非关系型数据库服务。</li>
<li>开发和测试平台。</li>
<li>软件集成平台。</li>
<li>应用软件部署：提供应用软件部署的依赖环境。</li>
</ol>
<h3 id="SaaS"><a href="#SaaS" class="headerlink" title="SaaS"></a>SaaS</h3><p><strong>SaaS 是“Software as a Service”</strong>的首字母缩写，意为<strong>软件即服务</strong>。简言之，直接使用软件。</p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203211557766.jpeg" alt="SaaS云"><br>图 1 SaaS 云</p>
<p>SaaS 云服务提供商这时有 3 种选择：</p>
<ol>
<li>租用别人的 IaaS 云服务，自己再搭建和管理平台软件层和应用软件层。</li>
<li>租用别人的 PaaS 云服务，自己再部署和管理应用软件层。</li>
<li>自己搭建和管理基础设施层、平台软件层和应用软件层。</li>
</ol>
<p> 适合做 SaaS 的<strong>应用软件</strong>有的几个<strong>特点</strong>：<strong>1）复杂</strong> <strong>2）主要面向企业用户</strong> <strong>3）模块化结构</strong> <strong>4）多租户</strong> <strong>5）多币种、多语言、多时区支持</strong> <strong>6）非强交互性软件</strong></p>
<p> <strong>适合</strong>云化并以 SaaS 模式交付给用户的<strong>软件</strong> <strong>1）企事业单位的业务处理类软件</strong> <strong>2）协同工作类软件</strong> <strong>3）办公类软件</strong> <strong>4）软件工具类</strong></p>
<p> <strong>不适合</strong>作为公共 SaaS 云服务出租的软件 <strong>1）实时处理软件</strong> <strong>2）时时产生并处理大量消费者数据的软件</strong> <strong>3）关键软件</strong></p>
<p><strong>与传统的软件运行模式相比，SaaS 模式具有的优点：</strong> <strong>1）云终端少量安装或不用安装软件</strong> <strong>2）有效使用软件许可证</strong> <strong>3）数据安全性得到提高</strong> <strong>4）有利于消费者摆脱 IT 运维的技术泥潭而专注于自己的核心业务</strong> <strong>5）消费者能节约大量前期投资</strong></p>
<p> 服务的实际应用 1）电子邮件和在线办公软件 2）计费开票软件 3）客户关系管理系统（CRM） 4）协作工具 5）内容管理系统（CMS） 6）财务软件 7）人力资源管理系统 8）销售工具 9）社交网络：如微信、WhatsApp、LINE 等 10）企业资源计划（ERP）11）谷歌在线翻译。</p>
<h3 id="私有云、社区云、公共云和混合云：云计算的4种部署模型"><a href="#私有云、社区云、公共云和混合云：云计算的4种部署模型" class="headerlink" title="私有云、社区云、公共云和混合云：云计算的4种部署模型"></a>私有云、社区云、公共云和混合云：云计算的4种部署模型</h3><p><a href="http://c.biancheng.net/cloud_computing/">云计算</a>有 4 种部署模型，分别是私有云、社区云、公共云和混合云，这是根据云计算服务的消费者来源划分的，即：</p>
<ul>
<li>如果一个云端的所有消费者只来自一个特定的单位组织（如微算科技公司），那么就是私有云。</li>
<li>如果一个云端的所有消费者来自两个或两个以上特定的单位组织，那么就是社区云。</li>
<li>如果一个云端的所有消费者来自社会公众，那么就是公共云。</li>
<li>如果一个云端的资源来自两个或两个以上的云，那么就是混合云。</li>
</ul>
<p>目前绝大多数混合云由企事业单位主导，以私有云为主体，并融合部分公共云资源，也就是说，混合云的消费者主要来自一个或几个特定的单位组织。</p>
<hr>
<p>2020&#x2F;12&#x2F;11</p>
]]></content>
      <categories>
        <category>Cloud Computing</category>
      </categories>
  </entry>
  <entry>
    <title>java LeetCode(更)</title>
    <url>/2022/03/21/Java-LeetCode/</url>
    <content><![CDATA[<p><strong>大小写敏感</strong> </p>
<p><strong>类名class</strong>首字母应该大写 </p>
<p><strong>方法名void</strong>小写字母开头,后面的每个单词首字母大写f</p>
<p><strong>源文件名和public类名相同</strong>.java</p>
<p>所有的 Java 程序由 <strong>public static void main(String[] args)</strong> 方法开始执行</p>
<span id="more"></span>

<table>
<thead>
<tr>
<th>ADT</th>
<th>存</th>
<th>取</th>
</tr>
</thead>
<tbody><tr>
<td>队列</td>
<td>offer(Obj)</td>
<td>poll()</td>
</tr>
<tr>
<td>栈</td>
<td>push(Obj)</td>
<td>pop()</td>
</tr>
<tr>
<td>集合</td>
<td>add(ele)</td>
<td>get(index)</td>
</tr>
</tbody></table>
<p>ava自带的类</p>
<p>String <code>integer.toBinaryString(int十进制)</code></p>
<blockquote>
<p>返回二进制字符串; </p>
<p>翻译 intenger 转换器，tobinary二进制</p>
</blockquote>
<p>int <code>Integer.parseInt(string字符串,int指定字符串的进制)</code></p>
<blockquote>
<p>返回十进制</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">integer</span><br></pre></td></tr></table></figure>



<p>正则表达式，java具体的实现没看</p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203202220476.png" alt="image-20220228154654072"></p>
<p>过完一遍java基础</p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203202214699.png" alt="image-20220303100236374"></p>
<h2 id="1-Binary-Search"><a href="#1-Binary-Search" class="headerlink" title="1. Binary Search"></a>1. Binary Search</h2><p>   <img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203202214289.png" alt="image-20220303101332728"></p>
   <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//伪代码，这个不好</span></span><br><span class="line">start=<span class="number">0</span>;end=len-<span class="number">1</span>;<span class="comment">//第一个这个好记一些，但不好用</span></span><br><span class="line"><span class="keyword">while</span>(start+<span class="number">1</span>&lt;end)&#123;<span class="comment">//！！！！如果数组队列只有1个，+1就会越界！！！！</span></span><br><span class="line">    <span class="comment">//不加一最终没法结束循环,只能判断2个及以上</span></span><br><span class="line">    mid=start+(end-start)/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span>(num[mid]&lt;target)</span><br><span class="line">        start=mid;<span class="comment">//在右边</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        end=mid;</span><br><span class="line">&#125;<span class="comment">//(start,end)</span></span><br></pre></td></tr></table></figure>

<p><strong>用这个</strong>&#x2F;&#x2F;折半查找，如果数组不包含，不需要判断两头情况</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//第三种伪代码，这个好用</span></span><br><span class="line">start=<span class="number">0</span>;end=length-<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(start&lt;=end)&#123;<span class="comment">//没移过头</span></span><br><span class="line">    mid=start+(end-start)/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span>(num[mid]&lt;target)</span><br><span class="line">        start=mid+<span class="number">1</span>;<span class="comment">//多移动一些</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        end=mid-<span class="number">1</span>;</span><br><span class="line">&#125;<span class="comment">//(end,star)移动多了</span></span><br></pre></td></tr></table></figure>

<h4 id="704-二分查找"><a href="#704-二分查找" class="headerlink" title="704. 二分查找"></a><a href="https://leetcode-cn.com/problems/binary-search/">704. 二分查找</a></h4>   <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//数组</span></span><br><span class="line"><span class="keyword">static</span> <span class="type">int</span> <span class="title function_">binarysearch</span><span class="params">(<span class="type">int</span>[] nums, <span class="type">int</span> target)</span>&#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> <span class="number">0</span>, right = nums.length - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(left &lt;= right)&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">mid</span> <span class="operator">=</span> left+(right-left)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(nums[mid] == target) <span class="keyword">return</span> mid;<span class="comment">//找到了</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(nums[mid]&lt;target) left=mid+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> right=mid-<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> -<span class="number">1</span>;<span class="comment">//返回没找到</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="278-第一个错误的版本First-Bad-Version"><a href="#278-第一个错误的版本First-Bad-Version" class="headerlink" title="278. 第一个错误的版本First Bad Version"></a><a href="https://leetcode-cn.com/problems/first-bad-version/">278. 第一个错误的版本</a>First Bad Version</h4>   <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* The isBadVersion API is defined in the parent class VersionControl.</span></span><br><span class="line"><span class="comment">      boolean isBadVersion(int version); */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Solution</span> <span class="keyword">extends</span> <span class="title class_">VersionControl</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">firstBadVersion</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">        <span class="type">int</span> left=<span class="number">1</span>,right=n;</span><br><span class="line">        <span class="keyword">while</span>(left&lt;=right)&#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">mid</span> <span class="operator">=</span> left+(right-left)/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span>(!isBadVersion(mid)) left=mid+<span class="number">1</span>;<span class="comment">//mid是最后一个好，右面的是坏</span></span><br><span class="line">            <span class="keyword">else</span> right=mid-<span class="number">1</span>;         </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> left;<span class="comment">//(right,left)     </span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="410-分割数组的最大值Split-Array-Largest-Sum二分猜答案"><a href="#410-分割数组的最大值Split-Array-Largest-Sum二分猜答案" class="headerlink" title="410. 分割数组的最大值Split Array Largest Sum二分猜答案"></a><a href="https://leetcode-cn.com/problems/split-array-largest-sum/">410. 分割数组的最大值</a>Split Array Largest Sum二分猜答案</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">splitArray</span><span class="params">(<span class="type">int</span>[] nums, <span class="type">int</span> m)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> Arrays.stream(nums).sum();</span><br><span class="line">        <span class="type">int</span> <span class="variable">max</span> <span class="operator">=</span> Arrays.stream(nums).max().getAsInt();</span><br><span class="line">        <span class="keyword">return</span> binary(nums,m,sum,max);<span class="comment">//调用二分</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//sum从大到小逼近，max从很小到达逼近，直到两个大小相似满足题意</span></span><br><span class="line">    <span class="comment">//high，low，mid是自己想出来的从max到sum连续数字</span></span><br><span class="line">    <span class="comment">//寻找合适的mid对应最小sum，最大max</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">binary</span><span class="params">(<span class="type">int</span>[] nums,<span class="type">int</span> m,<span class="type">int</span> high,<span class="type">int</span> low)</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">mid</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (low&lt;=high)&#123;</span><br><span class="line">        mid=low+(high-low)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(valid(nums,m,mid))high=mid-<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> low=mid+<span class="number">1</span>;</span><br><span class="line">        <span class="comment">//满足条件？用mid来分割数组，累加大于mid则开始下一个分组，看最终分组数量是否大于m</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">return</span> low;<span class="comment">//(high,low)对应实际(max,最小sum)</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">valid</span><span class="params">(<span class="type">int</span> [] nums, <span class="type">int</span> m,<span class="type">int</span> subArraySum)</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">curSum</span> <span class="operator">=</span> <span class="number">0</span>,count=<span class="number">1</span>;<span class="comment">//从数组开头开始累加，第一个分组</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> num:nums)&#123;</span><br><span class="line">            curSum +=num;<span class="comment">//从第一个开始加</span></span><br><span class="line">            <span class="keyword">if</span>(curSum&gt;subArraySum)&#123;</span><br><span class="line">                <span class="comment">//大于sum新分组</span></span><br><span class="line">                curSum=num;<span class="comment">//先curSum=0,再curSum=当前num</span></span><br><span class="line">                count++;<span class="comment">//分组计数+1</span></span><br><span class="line">                <span class="keyword">if</span>(count&gt;m) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="300-Longest-increasing-Subsequence最长递增子序列"><a href="#300-Longest-increasing-Subsequence最长递增子序列" class="headerlink" title="300.Longest increasing Subsequence最长递增子序列"></a>300.Longest increasing Subsequence<a href="https://leetcode-cn.com/problems/longest-increasing-subsequence/">最长递增子序列</a></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">lengthOfLIS</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">	    List&lt;Integer&gt; sub = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">	    sub.add(nums[<span class="number">0</span>]);</span><br><span class="line">	    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;nums.length;i++)&#123;</span><br><span class="line">	        <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> nums[i];</span><br><span class="line">	        <span class="keyword">if</span>(num&gt;sub.get(sub.size()-<span class="number">1</span>))<span class="comment">//当前num&gt;动态队列最后一个就入队</span></span><br><span class="line">	        sub.add(num);</span><br><span class="line">	        <span class="keyword">else</span>&#123;<span class="comment">//在缓存队列sub中找到比num大或一样的的就替换掉</span></span><br><span class="line">	            <span class="type">int</span> j=binarySearch(sub,num);<span class="comment">//返回第j需要替换</span></span><br><span class="line">	            sub.set(j,num);                                </span><br><span class="line">	        &#125;</span><br><span class="line">	    &#125;<span class="keyword">return</span> sub.size();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">private</span> <span class="type">int</span> <span class="title function_">binarySearch</span><span class="params">(List&lt;Integer&gt; list, <span class="type">int</span> target)</span>&#123;</span><br><span class="line">	    <span class="type">int</span> left=<span class="number">0</span>,right=list.size()-<span class="number">1</span>;</span><br><span class="line">	    <span class="keyword">while</span>(left &lt;= right)&#123;</span><br><span class="line">	        <span class="type">int</span> mid=left+(right-left)/<span class="number">2</span>;</span><br><span class="line">	        <span class="keyword">if</span>(list.get(mid)==target)<span class="keyword">return</span> mid;</span><br><span class="line">	        <span class="keyword">else</span> <span class="keyword">if</span>(list.get(mid)&lt;target)left=mid+<span class="number">1</span>;</span><br><span class="line">	        <span class="keyword">else</span> right=mid-<span class="number">1</span>;</span><br><span class="line">	    &#125;<span class="keyword">return</span> left;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>

<h4 id="剑指-Offer-11-旋转数组的最小数字"><a href="#剑指-Offer-11-旋转数组的最小数字" class="headerlink" title="剑指 Offer 11. 旋转数组的最小数字"></a><a href="https://leetcode-cn.com/problems/xuan-zhuan-shu-zu-de-zui-xiao-shu-zi-lcof/">剑指 Offer 11. 旋转数组的最小数字</a></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">minArray</span><span class="params">(<span class="type">int</span>[] numbers)</span> &#123;</span><br><span class="line">        <span class="type">int</span> left=<span class="number">0</span>,right=numbers.length-<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(left&lt;=right)&#123;</span><br><span class="line">            <span class="type">int</span> mid=left+(right-left)/<span class="number">2</span>;<span class="comment">//用右端点作为观测点，最小值往右都小于等于右端点，最小值往左都大于等于右端点，因为有重复。</span></span><br><span class="line">            <span class="keyword">if</span>(numbers[right]&lt;numbers[mid])left=mid+<span class="number">1</span>;<span class="comment">//mid在最小值往左</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(numbers[right]&lt;numbers[mid])right=mid-<span class="number">1</span>;<span class="comment">//</span></span><br><span class="line">            <span class="keyword">else</span> right--;<span class="comment">//重复</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> numbers[left];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="33-搜索旋转排序数组"><a href="#33-搜索旋转排序数组" class="headerlink" title="33. 搜索旋转排序数组"></a><a href="https://leetcode-cn.com/problems/search-in-rotated-sorted-array/">33. 搜索旋转排序数组</a></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">search</span><span class="params">(<span class="type">int</span>[] nums, <span class="type">int</span> target)</span> &#123;</span><br><span class="line">        <span class="type">int</span> left=<span class="number">0</span>,right=nums.length-<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(left&lt;=right)&#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">mid</span> <span class="operator">=</span> left+(right-left)/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span>(nums[mid]==target)<span class="keyword">return</span> mid;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (nums[left]&lt;=nums[mid])&#123;<span class="comment">//左有序,=为什么是小于等于。其实就是为了最后只剩两个数的时候，匹配。否则（3，1）报错</span></span><br><span class="line">                <span class="keyword">if</span>(nums[mid]&gt;target&amp;&amp;nums[left]&lt;=target)right=mid-<span class="number">1</span>;<span class="comment">//target在前半部分</span></span><br><span class="line">                <span class="keyword">else</span> left=mid+<span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(nums[mid]&lt;target&amp;&amp;nums[right]&gt;=target)left=mid+<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">else</span> right=mid-<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="69-x-的平方根"><a href="#69-x-的平方根" class="headerlink" title="69. x 的平方根 "></a><a href="https://leetcode-cn.com/problems/sqrtx/">69. x 的平方根 </a></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">mySqrt</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> <span class="number">1</span>, right = (x&gt;&gt;<span class="number">1</span>)+<span class="number">1</span>;</span><br><span class="line">        <span class="comment">//int left = 1, right = x;</span></span><br><span class="line">        <span class="keyword">while</span>(left&lt;=right)&#123;</span><br><span class="line">            <span class="type">int</span> mid=left+(right-left)/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span> (mid==x/mid) <span class="keyword">return</span> mid;</span><br><span class="line">            <span class="keyword">if</span>(mid&lt;x/mid) left=mid+<span class="number">1</span>;</span><br><span class="line">            <span class="type">else</span> <span class="variable">right</span> <span class="operator">=</span> mid -<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> right;<span class="comment">//(right,left)</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="剑指-Offer-53-I-在排序数组中查找数字-I"><a href="#剑指-Offer-53-I-在排序数组中查找数字-I" class="headerlink" title="剑指 Offer 53 - I. 在排序数组中查找数字 I"></a><a href="https://leetcode-cn.com/problems/zai-pai-xu-shu-zu-zhong-cha-zhao-shu-zi-lcof/">剑指 Offer 53 - I. 在排序数组中查找数字 I</a></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">search</span><span class="params">(<span class="type">int</span>[] nums, <span class="type">int</span> target)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> help(nums,target)-help(nums,target-<span class="number">1</span>);<span class="comment">//找8，用8的尾巴（下标）-7的尾巴（下标）</span></span><br><span class="line">        <span class="comment">//return help(nums,target);</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">help</span><span class="params">(<span class="type">int</span>[] nums,<span class="type">int</span> x)</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> <span class="number">0</span>,right=nums.length-<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(left&lt;=right)&#123;</span><br><span class="line">            <span class="type">int</span> mid=left+(right-left)/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span>(nums[mid]&lt;=x)left=mid+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> right=mid-<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> left;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="35-搜索插入位置"><a href="#35-搜索插入位置" class="headerlink" title="35. 搜索插入位置"></a><a href="https://leetcode-cn.com/problems/search-insert-position/">35. 搜索插入位置</a></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">searchInsert</span><span class="params">(<span class="type">int</span>[] nums, <span class="type">int</span> target)</span> &#123;</span><br><span class="line">        <span class="type">int</span> left=<span class="number">0</span>,right=nums.length-<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(left&lt;=right)&#123;</span><br><span class="line">            <span class="type">int</span> mid=left+(right-left)/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span>(nums[mid]==target)<span class="keyword">return</span> mid;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(nums[mid]&lt;target)left=mid+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> right=mid-<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> left;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="comment">//所以，折半查找，如果数组不包含，不需要判断两头情况</span></span><br></pre></td></tr></table></figure>

<h4 id="367-有效的完全平方数"><a href="#367-有效的完全平方数" class="headerlink" title="367. 有效的完全平方数"></a><a href="https://leetcode-cn.com/problems/valid-perfect-square/">367. 有效的完全平方数</a></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isPerfectSquare</span><span class="params">(<span class="type">int</span> num)</span> &#123;</span><br><span class="line">        <span class="type">int</span> left=<span class="number">1</span>,right=(num&gt;&gt;<span class="number">1</span>)+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(left&lt;=right)&#123;</span><br><span class="line">            <span class="type">int</span> mid=left+(right-left)/<span class="number">2</span>;</span><br><span class="line">            <span class="type">long</span> sqr=(<span class="type">long</span>)mid*mid;</span><br><span class="line">            <span class="keyword">if</span>(sqr==num)<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(sqr&gt;num)right=mid-<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> left=mid+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="162-寻找峰值"><a href="#162-寻找峰值" class="headerlink" title="162. 寻找峰值"></a><a href="https://leetcode-cn.com/problems/find-peak-element/">162. 寻找峰值</a></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//为什么用while一直报错？没看明白，可能和区间端点有关系</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">findPeakElement</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> <span class="number">0</span>, right = nums.length - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (; left &lt; right; ) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">mid</span> <span class="operator">=</span> left + (right - left) / <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span> (nums[mid] &gt; nums[mid + <span class="number">1</span>]) &#123;</span><br><span class="line">                right = mid;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                left = mid + <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> left;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="74-搜索二维矩阵"><a href="#74-搜索二维矩阵" class="headerlink" title="74. 搜索二维矩阵"></a><a href="https://leetcode-cn.com/problems/search-a-2d-matrix/">74. 搜索二维矩阵</a></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">searchMatrix</span><span class="params">(<span class="type">int</span>[][] matrix, <span class="type">int</span> target)</span> &#123;</span><br><span class="line">        <span class="type">int</span> m=matrix.length,n=matrix[<span class="number">0</span>].length;</span><br><span class="line">        <span class="type">int</span> left=<span class="number">0</span>,right=m*n-<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(left&lt;=right)&#123;</span><br><span class="line">            <span class="type">int</span> mid=left+(right-left)/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span>(matrix[mid/n][mid%n]==target)<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">if</span>(matrix[mid/n][mid%n]&lt;=target)&#123;</span><br><span class="line">                left=mid+<span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                right=mid-<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="2-双指针"><a href="#2-双指针" class="headerlink" title="2.双指针"></a>2.双指针</h2><p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203202220088.png" alt="image-20220304104414594"></p>
<h4 id="283-移动零"><a href="#283-移动零" class="headerlink" title="283. 移动零"></a><a href="https://leetcode-cn.com/problems/move-zeroes/">283. 移动零</a></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="comment">//左指针左边均为非零数，左指针是一堵墙，不需要找0；</span></span><br><span class="line"><span class="comment">//右指针左边直到左指针处均为零，右指针找非0，搬去墙左边。</span></span><br><span class="line"><span class="comment">//如果起始位非0，相当于自己和自己交换，left++，right++</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">moveZeroes</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> <span class="number">0</span>,right=<span class="number">0</span>,n=nums.length;</span><br><span class="line">        <span class="keyword">while</span>(right&lt;n)&#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[right]!=<span class="number">0</span>)&#123;<span class="comment">//每次完成交换后左指针动</span></span><br><span class="line">                swap(nums,left,right);</span><br><span class="line">                left++;</span><br><span class="line">            &#125;right++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">swap</span><span class="params">(<span class="type">int</span>[] nums,<span class="type">int</span> left,<span class="type">int</span> right)</span>&#123;</span><br><span class="line">        <span class="type">int</span> temp=nums[left];</span><br><span class="line">        nums[left]=nums[right];</span><br><span class="line">        nums[right]=temp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h4 id="11-盛最多水的容器"><a href="#11-盛最多水的容器" class="headerlink" title="11. 盛最多水的容器"></a><a href="https://leetcode-cn.com/problems/container-with-most-water/">11. 盛最多水的容器</a></h4><p>两堵墙，向里移动小的一个，有可能面积变大</p>
<p>如果两边相等，要不是最终答案，要不两个都不包括，不可能只包括一边</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//两堵墙，向里移动小的一个，有可能面积变大</span></span><br><span class="line"><span class="comment">//如果两边相等，要不是最终答案，要不两个都不包括，不可能只包括一边</span></span><br><span class="line"><span class="comment">//暴力双指针逼近</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">maxArea</span><span class="params">(<span class="type">int</span>[] height)</span> &#123;</span><br><span class="line">        <span class="type">int</span> res=<span class="number">0</span>,left=<span class="number">0</span>,right=height.length-<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(left&lt;right)&#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">minHeight</span> <span class="operator">=</span> Math.min(height[left],height[right]);</span><br><span class="line">            <span class="type">int</span> width=right-left;</span><br><span class="line">            res=Math.max(res,width*minHeight);</span><br><span class="line">            <span class="keyword">if</span>(height[left]&lt;height[right])left++;</span><br><span class="line">            <span class="keyword">else</span> right--;</span><br><span class="line">        &#125;<span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="1-两数之和"><a href="#1-两数之和" class="headerlink" title="1. 两数之和"></a><a href="https://leetcode-cn.com/problems/two-sum/">1. 两数之和</a></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] twoSum(<span class="type">int</span>[] nums,<span class="type">int</span> target)&#123;</span><br><span class="line">    Map&lt;Integer,Integer&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;nums.length;i++)&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">diff</span> <span class="operator">=</span> target-nums[i];<span class="comment">//nums[i]+diff=target</span></span><br><span class="line">        <span class="keyword">if</span>(map.containsKey(diff))<span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;map.get(diff),i&#125;;</span><br><span class="line">        map.put(nums[i],i);<span class="comment">//所有都压入Hashmap再说，return后就停止了</span></span><br><span class="line">        &#125;<span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="142-环形链表-II"><a href="#142-环形链表-II" class="headerlink" title="142. 环形链表 II"></a><a href="https://leetcode-cn.com/problems/linked-list-cycle-ii/">142. 环形链表 II</a></h4><p>快慢指针</p>
<h5 id="单链表数据结构"><a href="#单链表数据结构" class="headerlink" title="单链表数据结构"></a>单链表数据结构</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LinkList</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> Object data;</span><br><span class="line">    <span class="keyword">public</span> LinkList next;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">LinkList</span><span class="params">(Object e)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.data=e;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203202214356.png" alt="image-20220304163525117"></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> ListNode <span class="title function_">detectCycle</span><span class="params">(ListNode head)</span> &#123;</span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">slow</span> <span class="operator">=</span> head;</span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">fast</span> <span class="operator">=</span> head;</span><br><span class="line">        <span class="keyword">while</span>(fast!=<span class="literal">null</span>&amp;&amp;fast.next!=<span class="literal">null</span>)&#123;<span class="comment">//空或只有一个</span></span><br><span class="line">            fast=fast.next.next;</span><br><span class="line">            slow=slow.next;</span><br><span class="line">            <span class="keyword">if</span>(fast==slow)&#123;</span><br><span class="line">                fast=head;<span class="comment">//看图a=c;</span></span><br><span class="line">                <span class="keyword">while</span>(slow!=fast)&#123;</span><br><span class="line">                    fast=fast.next;</span><br><span class="line">                    slow=slow.next;</span><br><span class="line">                &#125;<span class="keyword">return</span> slow;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="141-环形链表"><a href="#141-环形链表" class="headerlink" title="141. 环形链表"></a><a href="https://leetcode-cn.com/problems/linked-list-cycle/">141. 环形链表</a></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">hasCycle</span><span class="params">(ListNode head)</span> &#123;</span><br><span class="line">        ListNode slow=head;</span><br><span class="line">        ListNode fast=head;</span><br><span class="line">        <span class="keyword">while</span>(fast!=<span class="literal">null</span>&amp;&amp;fast.next!=<span class="literal">null</span>)&#123;</span><br><span class="line">            fast=fast.next.next;</span><br><span class="line">            slow=slow.next;</span><br><span class="line">            <span class="keyword">if</span>(slow==fast)<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="88-合并两个有序数组"><a href="#88-合并两个有序数组" class="headerlink" title="88. 合并两个有序数组"></a><a href="https://leetcode-cn.com/problems/merge-sorted-array/">88. 合并两个有序数组</a></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">//先组合再排序</span></span><br><span class="line"><span class="comment">class Solution &#123;</span></span><br><span class="line"><span class="comment">    public void merge(int[] nums1, int m, int[] nums2, int n) &#123;</span></span><br><span class="line"><span class="comment">        for (int i = 0; i != n; ++i) &#123;</span></span><br><span class="line"><span class="comment">            nums1[m + i] = nums2[i];//组合</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">        Arrays.sort(nums1);//排序</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">//新建一个数组存放，双指针</span></span><br><span class="line"><span class="comment">class Solution &#123;</span></span><br><span class="line"><span class="comment">    public void merge(int[] nums1, int m, int[] nums2, int n) &#123;</span></span><br><span class="line"><span class="comment">        int p1 = 0, p2 = 0;</span></span><br><span class="line"><span class="comment">        int[] sorted = new int[m + n];//定义新的数组用了存放结果</span></span><br><span class="line"><span class="comment">        int cur;//这是需要入队列的值</span></span><br><span class="line"><span class="comment">        while (p1 &lt; m || p2 &lt; n) &#123;</span></span><br><span class="line"><span class="comment">            if (p1 == m) &#123;</span></span><br><span class="line"><span class="comment">                cur = nums2[p2++];//1到头，2入队列，直到2结束</span></span><br><span class="line"><span class="comment">            &#125; else if (p2 == n) &#123;</span></span><br><span class="line"><span class="comment">                cur = nums1[p1++];</span></span><br><span class="line"><span class="comment">            &#125; else if (nums1[p1] &lt; nums2[p2]) &#123;//从头比较，如果1&lt;2,1入队列，1指针后移</span></span><br><span class="line"><span class="comment">                cur = nums1[p1++];</span></span><br><span class="line"><span class="comment">            &#125; else &#123;</span></span><br><span class="line"><span class="comment">                cur = nums2[p2++];//1&gt;=2,同理</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">            sorted[p1 + p2 - 1] = cur;//-1是++下轮递增</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">        for (int i = 0; i &lt; m + n; ++i) &#123;//遍历</span></span><br><span class="line"><span class="comment">            nums1[i] = sorted[i];//回到n1</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">//后面是空的，所以从后往前双指针</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">merge</span><span class="params">(<span class="type">int</span>[] nums1, <span class="type">int</span> m, <span class="type">int</span>[] nums2, <span class="type">int</span> n)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">p1</span> <span class="operator">=</span> m - <span class="number">1</span>, p2 = n - <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">tail</span> <span class="operator">=</span> m + n - <span class="number">1</span>;<span class="comment">//新定义尾巴指针区别于mn，存储合适元素</span></span><br><span class="line">        <span class="type">int</span> cur;<span class="comment">//借用cur存储元素</span></span><br><span class="line">        <span class="keyword">while</span> (p1 &gt;= <span class="number">0</span> || p2 &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (p1 == -<span class="number">1</span>) &#123;<span class="comment">//1到头了，2入，直到结束</span></span><br><span class="line">                cur = nums2[p2--];</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (p2 == -<span class="number">1</span>) &#123;</span><br><span class="line">                cur = nums1[p1--];</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (nums1[p1] &gt; nums2[p2]) &#123;<span class="comment">//1大，1入，1左移</span></span><br><span class="line">                cur = nums1[p1--];</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                cur = nums2[p2--];</span><br><span class="line">            &#125;</span><br><span class="line">            nums1[tail--] = cur;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="剑指-Offer-22-链表中倒数第k个节点"><a href="#剑指-Offer-22-链表中倒数第k个节点" class="headerlink" title="剑指 Offer 22. 链表中倒数第k个节点"></a><a href="https://leetcode-cn.com/problems/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof/">剑指 Offer 22. 链表中倒数第k个节点</a></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * public class ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode next;</span></span><br><span class="line"><span class="comment"> *     ListNode(int x) &#123; val = x; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">//顺序查找</span></span><br><span class="line"><span class="comment">class Solution &#123;</span></span><br><span class="line"><span class="comment">    public ListNode getKthFromEnd(ListNode head, int k) &#123;</span></span><br><span class="line"><span class="comment">        int n = 0;</span></span><br><span class="line"><span class="comment">        ListNode node = null;</span></span><br><span class="line"><span class="comment">        for (node = head; node != null; node = node.next) &#123;</span></span><br><span class="line"><span class="comment">            n++;//遍历记录长度n(0,size-1)</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">        node = head;</span></span><br><span class="line"><span class="comment">        while(n&gt;k)&#123;//从后往前数n--直到n&lt;k,果然用for和if判断太费劲了，while容易很多</span></span><br><span class="line"><span class="comment">            node=node.next;</span></span><br><span class="line"><span class="comment">            n--;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">        return node;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//快慢指针，快指针比慢指针多移动k步，不需要统计长度</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> ListNode <span class="title function_">getKthFromEnd</span><span class="params">(ListNode head, <span class="type">int</span> k)</span> &#123;</span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">fast</span> <span class="operator">=</span> head;</span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">slow</span> <span class="operator">=</span> head;</span><br><span class="line">        <span class="comment">//快指针先移动k步</span></span><br><span class="line">        <span class="keyword">while</span> (fast != <span class="literal">null</span> &amp;&amp; k &gt; <span class="number">0</span>) &#123;<span class="comment">//不空且符合条件k不为0</span></span><br><span class="line">            fast = fast.next;<span class="comment">//fast移动k步直到k=0，快慢指针一起走，快指针走到外面时候，慢指针就是倒数第几个</span></span><br><span class="line">            k--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//快慢指针一起移动</span></span><br><span class="line">        <span class="keyword">while</span> (fast != <span class="literal">null</span>) &#123;</span><br><span class="line">            fast = fast.next;</span><br><span class="line">            slow = slow.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> slow;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="876-链表的中间结点"><a href="#876-链表的中间结点" class="headerlink" title="876. 链表的中间结点"></a><a href="https://leetcode-cn.com/problems/middle-of-the-linked-list/">876. 链表的中间结点</a></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> ListNode <span class="title function_">middleNode</span><span class="params">(ListNode head)</span> &#123;</span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">slow</span> <span class="operator">=</span> head, fast = head;</span><br><span class="line">        <span class="keyword">while</span> (fast != <span class="literal">null</span> &amp;&amp; fast.next != <span class="literal">null</span>) &#123;</span><br><span class="line">            slow = slow.next;</span><br><span class="line">            fast = fast.next.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> slow;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="234-回文链表"><a href="#234-回文链表" class="headerlink" title="234.回文链表"></a><a href="https://leetcode-cn.com/problems/palindrome-linked-list/description/">234.回文链表</a></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * @lc app=leetcode.cn id=234 lang=java</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * [234] 回文链表</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// @lc code=start</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * public class ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode next;</span></span><br><span class="line"><span class="comment"> *     ListNode() &#123;&#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int val) &#123; this.val = val; &#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int val, ListNode next) &#123; this.val = val; this.next = next; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// @lc code=end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">class Solution &#123;</span></span><br><span class="line"><span class="comment">    public boolean isPalindrome(ListNode head) &#123;</span></span><br><span class="line"><span class="comment">        List&lt;Integer&gt; vals = new ArrayList&lt;Integer&gt;();</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        // 将链表的值复制到数组中</span></span><br><span class="line"><span class="comment">        ListNode currentNode = head;</span></span><br><span class="line"><span class="comment">        while (currentNode != null) &#123;</span></span><br><span class="line"><span class="comment">            vals.add(currentNode.val);</span></span><br><span class="line"><span class="comment">            currentNode = currentNode.next;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        // 使用双指针判断是否回文</span></span><br><span class="line"><span class="comment">        int front = 0;</span></span><br><span class="line"><span class="comment">        int back = vals.size() - 1;</span></span><br><span class="line"><span class="comment">        while (front &lt; back) &#123;</span></span><br><span class="line"><span class="comment">            if (!vals.get(front).equals(vals.get(back))) &#123;</span></span><br><span class="line"><span class="comment">                return false;</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">            front++;</span></span><br><span class="line"><span class="comment">            back--;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">        return true;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isPalindrome</span><span class="params">(ListNode head)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (head == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 找到前半部分链表的尾节点并反转后半部分链表</span></span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">firstHalfEnd</span> <span class="operator">=</span> endOfFirstHalf(head); <span class="comment">//返回前半部分最后一个节点</span></span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">secondHalfStart</span> <span class="operator">=</span> reverseList(firstHalfEnd.next);<span class="comment">//反转后半部分</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 判断是否回文</span></span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">p1</span> <span class="operator">=</span> head;</span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">p2</span> <span class="operator">=</span> secondHalfStart;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">result</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">while</span> (result &amp;&amp; p2 != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (p1.val != p2.val) &#123;</span><br><span class="line">                result = <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            p1 = p1.next;</span><br><span class="line">            p2 = p2.next;</span><br><span class="line">        &#125;        </span><br><span class="line"></span><br><span class="line">        <span class="comment">// 还原链表并返回结果</span></span><br><span class="line">        firstHalfEnd.next = reverseList(secondHalfStart);<span class="comment">//没有必要这一步</span></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ListNode <span class="title function_">reverseList</span><span class="params">(ListNode head)</span> &#123;<span class="comment">//反转</span></span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">prev</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">curr</span> <span class="operator">=</span> head;</span><br><span class="line">        <span class="keyword">while</span> (curr != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="type">ListNode</span> <span class="variable">nextTemp</span> <span class="operator">=</span> curr.next;</span><br><span class="line">            curr.next = prev;</span><br><span class="line">            prev = curr;</span><br><span class="line">            curr = nextTemp;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> prev;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ListNode <span class="title function_">endOfFirstHalf</span><span class="params">(ListNode head)</span> &#123;<span class="comment">//快慢指针找中间的尾巴，二倍速</span></span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">fast</span> <span class="operator">=</span> head;</span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">slow</span> <span class="operator">=</span> head;</span><br><span class="line">        <span class="keyword">while</span> (fast.next != <span class="literal">null</span> &amp;&amp; fast.next.next != <span class="literal">null</span>) &#123;</span><br><span class="line">            fast = fast.next.next;</span><br><span class="line">            slow = slow.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> slow;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="160-相交链表"><a href="#160-相交链表" class="headerlink" title="160. 相交链表"></a><a href="https://leetcode-cn.com/problems/intersection-of-two-linked-lists/">160. 相交链表</a></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"> <span class="comment">//A: a, c, b, meet</span></span><br><span class="line"> <span class="comment">//B: b, c, a, meet</span></span><br><span class="line"> <span class="comment">//because a+c+b==b+c+a</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> ListNode <span class="title function_">getIntersectionNode</span><span class="params">(ListNode headA, ListNode headB)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(headA==<span class="literal">null</span>||headB==<span class="literal">null</span>)<span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        ListNode you=headA,she=headB;</span><br><span class="line">        <span class="keyword">while</span>(you!=she)&#123;</span><br><span class="line">            <span class="comment">// 若是有缘，早晚相遇;</span></span><br><span class="line">            <span class="comment">// 当你走到头，去重走她来时的路;</span></span><br><span class="line">            <span class="comment">// 当她走到头，也重走你来时的路;</span></span><br><span class="line">            <span class="comment">// 一路上，时而你踩着她的影子，时而她踩着你的影子;</span></span><br><span class="line">            <span class="comment">// 而缘分本身，就是能够坚持一直走下去。</span></span><br><span class="line">            you= you==<span class="literal">null</span>? headB: you.next;</span><br><span class="line">            she= she==<span class="literal">null</span>? headA: she.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> you;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="双指针two-pointers-141-x2F-344-x2F-881"><a href="#双指针two-pointers-141-x2F-344-x2F-881" class="headerlink" title="双指针two pointers 141&#x2F;344&#x2F;881"></a>双指针two pointers 141&#x2F;344&#x2F;881</h3><h4 id="344-反转字符串"><a href="#344-反转字符串" class="headerlink" title="344. 反转字符串"></a><a href="https://leetcode-cn.com/problems/reverse-string/">344. 反转字符串</a></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">reverseString</span><span class="params">(<span class="type">char</span>[] s)</span> &#123;</span><br><span class="line">        <span class="type">int</span> left=<span class="number">0</span>,right=s.length-<span class="number">1</span>;</span><br><span class="line">        <span class="type">char</span> temp;</span><br><span class="line">        <span class="comment">//判空||1，判断与否都可以</span></span><br><span class="line">            <span class="keyword">while</span>(left&lt;right)&#123;</span><br><span class="line">                temp=s[left];</span><br><span class="line">                s[left]=s[right];</span><br><span class="line">                s[right]=temp;</span><br><span class="line">                left++;</span><br><span class="line">                right--;</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="type">char</span> <span class="variable">temp</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">reverseString</span><span class="params">(<span class="type">char</span>[] s)</span> &#123;</span><br><span class="line">        swap(s,<span class="number">0</span>,s.length-<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">swap</span><span class="params">(<span class="type">char</span>[] s,<span class="type">int</span> left,<span class="type">int</span> right)</span>&#123;</span><br><span class="line">        <span class="comment">// 返回条件</span></span><br><span class="line">        <span class="keyword">while</span>(left&gt;right)&#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 递之前</span></span><br><span class="line">        temp = s[left];</span><br><span class="line">        s[left]=s[right];</span><br><span class="line">        s[right]=temp;</span><br><span class="line">        <span class="comment">// 递下去</span></span><br><span class="line">        swap(s,left+<span class="number">1</span>,right-<span class="number">1</span>);</span><br><span class="line">        <span class="comment">// 归回来</span></span><br><span class="line">        <span class="comment">// Do nothing.</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="881-救生艇"><a href="#881-救生艇" class="headerlink" title="881. 救生艇"></a><a href="https://leetcode-cn.com/problems/boats-to-save-people/">881. 救生艇</a></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">numRescueBoats</span><span class="params">(<span class="type">int</span>[] people, <span class="type">int</span> limit)</span> &#123;</span><br><span class="line">        <span class="comment">//先排序，最大的和最小的组合，只剩一个直接走，和小于等于limit走，大于走大的</span></span><br><span class="line">        <span class="type">int</span> res=<span class="number">0</span>,left=<span class="number">0</span>,right=people.length-<span class="number">1</span>;</span><br><span class="line">        Arrays.sort(people);</span><br><span class="line">        <span class="keyword">while</span>(left&lt;=right)&#123;</span><br><span class="line">            <span class="keyword">if</span>(left==right)&#123;<span class="comment">// 只剩下最后一个,直接一个走,结束</span></span><br><span class="line">                res++;</span><br><span class="line">                <span class="keyword">break</span>;<span class="comment">//一定要加，结束while</span></span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(people[left]+people[right]&lt;=limit)&#123;<span class="comment">// 最重的与最轻的一起走</span></span><br><span class="line">                right--;</span><br><span class="line">                left++;</span><br><span class="line">                res++;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;<span class="comment">// 先载最重的, 而且最小的也无法一起载,那么就最重的单独走</span></span><br><span class="line">                right--;</span><br><span class="line">                res++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="3-sliding-window-和two-sum都很重要，高频"><a href="#3-sliding-window-和two-sum都很重要，高频" class="headerlink" title="3.sliding window(和two sum都很重要，高频)"></a>3.sliding window(和two sum都很重要，高频)</h2><p>双指针变形，一般为同向。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">模板</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">findSubArray</span>(<span class="params">nums</span>):</span><br><span class="line">    N = <span class="built_in">len</span>(nums) <span class="comment"># 数组/字符串长度</span></span><br><span class="line">    left, right = <span class="number">0</span>, <span class="number">0</span> <span class="comment"># 双指针，表示当前遍历的区间[left, right]，闭区间</span></span><br><span class="line">    sums = <span class="number">0</span> <span class="comment"># 用于统计 子数组/子区间 是否有效，根据题目可能会改成求和/计数</span></span><br><span class="line">    res = <span class="number">0</span> <span class="comment"># 保存最大的满足题目要求的 子数组/子串 长度</span></span><br><span class="line">    <span class="keyword">while</span> right &lt; N: <span class="comment"># 当右边的指针没有搜索到 数组/字符串 的结尾</span></span><br><span class="line">        sums += nums[right] <span class="comment"># 增加当前右边指针的数字/字符的求和/计数</span></span><br><span class="line">        <span class="keyword">while</span> 区间[left, right]不符合题意：<span class="comment"># 此时需要一直移动左指针，直至找到一个符合题意的区间</span></span><br><span class="line">            sums -= nums[left] <span class="comment"># 移动左指针前需要从counter中减少left位置字符的求和/计数</span></span><br><span class="line">            left += <span class="number">1</span> <span class="comment"># 真正的移动左指针，注意不能跟上面一行代码写反</span></span><br><span class="line">        <span class="comment"># 到 while 结束时，我们找到了一个符合题意要求的 子数组/子串</span></span><br><span class="line">        res = <span class="built_in">max</span>(res, right - left + <span class="number">1</span>) <span class="comment"># 需要更新结果</span></span><br><span class="line">        right += <span class="number">1</span> <span class="comment"># 移动右指针，去探索新的区间</span></span><br><span class="line">    <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure>



<h4 id="209-长度最小的子数组-Minimum-Size-Subarray-Sum-找连续子数组"><a href="#209-长度最小的子数组-Minimum-Size-Subarray-Sum-找连续子数组" class="headerlink" title="209. 长度最小的子数组 Minimum Size Subarray Sum 找连续子数组"></a><a href="https://leetcode-cn.com/problems/minimum-size-subarray-sum/">209. 长度最小的子数组</a> Minimum Size Subarray Sum 找连续子数组</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">minSubArrayLen</span><span class="params">(<span class="type">int</span> target, <span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span><span class="number">0</span>,N=nums.length,res=Integer.MAX_VALUE,sum=<span class="number">0</span>;<span class="comment">//res窗口长度初始化为无限大，最后看结果有没有修改，改了就是新结果，没改就是0</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;N;i++)&#123;<span class="comment">//外层移动右侧数组指针</span></span><br><span class="line">            sum += nums[i];<span class="comment">//当前窗口内的和</span></span><br><span class="line">            <span class="keyword">while</span>(sum &gt;= target)&#123;<span class="comment">//内层循环移动left指针知道和小于target</span></span><br><span class="line">                res=Math.min(res,i-left+<span class="number">1</span>);</span><br><span class="line">                sum -= nums[left++];<span class="comment">//窗口无脑右移一格；找连续子数组</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">return</span> res==Integer.MAX_VALUE ? <span class="number">0</span>:res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//二分法猜答案</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">minSubArrayLen</span><span class="params">(<span class="type">int</span> target, <span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        <span class="type">int</span> left=<span class="number">0</span>,right=nums.length-<span class="number">1</span>,res=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(left&lt;=right)&#123;</span><br><span class="line">            <span class="type">int</span> mid=left+(right-left)/<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span>(volidwindow(mid+<span class="number">1</span>,nums,target))&#123;</span><br><span class="line">                right=mid-<span class="number">1</span>;</span><br><span class="line">                res=mid+<span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> left=mid+<span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">volidwindow</span><span class="params">(<span class="type">int</span> size,<span class="type">int</span>[] nums,<span class="type">int</span> s)</span>&#123;</span><br><span class="line">        <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;nums.length;i++)&#123;</span><br><span class="line">            sum+=nums[i];</span><br><span class="line">            <span class="keyword">if</span>(i-size&gt;=<span class="number">0</span>)sum-=nums[i-size];</span><br><span class="line">            <span class="keyword">if</span>(sum&gt;=s)<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="340会员题目"><a href="#340会员题目" class="headerlink" title="340会员题目"></a>340会员题目</h4><h4 id="1456-定长子串中元音的最大数目"><a href="#1456-定长子串中元音的最大数目" class="headerlink" title="1456. 定长子串中元音的最大数目"></a><a href="https://leetcode-cn.com/problems/maximum-number-of-vowels-in-a-substring-of-given-length/">1456. 定长子串中元音的最大数目</a></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//滑动窗口，暴力定长，超出时长限制</span></span><br><span class="line"><span class="comment">/*class Solution &#123;</span></span><br><span class="line"><span class="comment">    public int maxVowels(String s, int k) &#123;</span></span><br><span class="line"><span class="comment">        char[] c=s.toCharArray();</span></span><br><span class="line"><span class="comment">        int left=0,n=c.length,right=0,res=0;</span></span><br><span class="line"><span class="comment">        while(left&lt;=n-k)&#123;</span></span><br><span class="line"><span class="comment">            int count=0;</span></span><br><span class="line"><span class="comment">            for(right=left;right&lt;left+k;right++)&#123;</span></span><br><span class="line"><span class="comment">                if(c[right]==&#x27;a&#x27;||c[right]==&#x27;e&#x27;||c[right]==&#x27;i&#x27;||c[right]==&#x27;o&#x27;||c[right]==&#x27;u&#x27;)&#123;</span></span><br><span class="line"><span class="comment">                count++;</span></span><br><span class="line"><span class="comment">                &#125;</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">            res=Math.max(res,count);</span></span><br><span class="line"><span class="comment">            left++;           </span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">        return res;</span></span><br><span class="line"><span class="comment">    &#125;   </span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">maxVowels</span><span class="params">(String s, <span class="type">int</span> k)</span> &#123;</span><br><span class="line">        <span class="type">char</span>[] c=s.toCharArray();</span><br><span class="line">        <span class="type">int</span> left=<span class="number">0</span>,right=<span class="number">0</span>,res=<span class="number">0</span>,count=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(right&lt;c.length)&#123;</span><br><span class="line">            <span class="keyword">if</span>(c[right]==<span class="string">&#x27;a&#x27;</span>||c[right]==<span class="string">&#x27;e&#x27;</span>||c[right]==<span class="string">&#x27;i&#x27;</span>||c[right]==<span class="string">&#x27;o&#x27;</span>||c[right]==<span class="string">&#x27;u&#x27;</span>)&#123;</span><br><span class="line">                count++;</span><br><span class="line">            &#125;</span><br><span class="line">            right++;</span><br><span class="line">            <span class="keyword">if</span>(right-left==k)&#123;</span><br><span class="line">                res=Math.max(res,count);</span><br><span class="line">                <span class="keyword">if</span>(c[left]==<span class="string">&#x27;a&#x27;</span>||c[left]==<span class="string">&#x27;e&#x27;</span>||c[left]==<span class="string">&#x27;i&#x27;</span>||c[left]==<span class="string">&#x27;o&#x27;</span>||c[left]==<span class="string">&#x27;u&#x27;</span>)&#123;</span><br><span class="line">                    count--;</span><br><span class="line">            &#125;</span><br><span class="line">                left++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="3-无重复字符的最长子串"><a href="#3-无重复字符的最长子串" class="headerlink" title="3. 无重复字符的最长子串"></a><a href="https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/">3. 无重复字符的最长子串</a></h4><h4 id="剑指-Offer-48-最长不含重复字符的子字符串"><a href="#剑指-Offer-48-最长不含重复字符的子字符串" class="headerlink" title="剑指 Offer 48. 最长不含重复字符的子字符串"></a><a href="https://leetcode-cn.com/problems/zui-chang-bu-han-zhong-fu-zi-fu-de-zi-zi-fu-chuan-lcof/">剑指 Offer 48. 最长不含重复字符的子字符串</a></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">lengthOfLongestSubstring</span><span class="params">(String s)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(s.length()==<span class="number">0</span>)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        HashMap&lt;Character,Integer&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="type">int</span> left=<span class="number">0</span>,max=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;s.length();i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(map.containsKey(s.charAt(i)))&#123;</span><br><span class="line">                left=Math.max(left, map.get(s.charAt(i))+<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            map.put(s.charAt(i),i);</span><br><span class="line">            max=Math.max(max,i-left+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> max;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="1004-最大连续1的个数-III"><a href="#1004-最大连续1的个数-III" class="headerlink" title="1004. 最大连续1的个数 III"></a><a href="https://leetcode-cn.com/problems/max-consecutive-ones-iii/">1004. 最大连续1的个数 III</a></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">longestOnes</span><span class="params">(<span class="type">int</span>[] nums, <span class="type">int</span> k)</span> &#123;</span><br><span class="line">        <span class="type">int</span> len=nums.length;</span><br><span class="line">        <span class="type">int</span> l=<span class="number">0</span>,r=<span class="number">0</span>,max=<span class="number">0</span>,count0=<span class="number">0</span>;</span><br><span class="line">        <span class="comment">//本质上来说，滑窗是双指针，一根指针指向左端点，一根指针指向右端点。</span></span><br><span class="line">        <span class="keyword">while</span>(r&lt;len)&#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[r]==<span class="number">0</span>)count0++;</span><br><span class="line">            r++;</span><br><span class="line">            <span class="comment">//右指针移动可以表示扩张窗口，左指针移动表示缩小窗口。</span></span><br><span class="line">            <span class="comment">//如果当前元素满足题目要求时，可以挪动右指针尝试更优解，并且更新需要记录的变量（元素，元素个数++等）</span></span><br><span class="line">            <span class="keyword">while</span>(count0&gt;k)&#123;</span><br><span class="line">                <span class="keyword">if</span>(nums[l]==<span class="number">0</span>)count0--;</span><br><span class="line">                l++;<span class="comment">//直到nums[l==0,跳出while]</span></span><br><span class="line">                <span class="comment">//如果当前窗口内的元素不满足条件，可以挪动左指针尝试调整，并且更新需要记录的变量（元素，元素个数--等）</span></span><br><span class="line">            &#125;</span><br><span class="line">            max=Math.max(max,r-l);</span><br><span class="line">            <span class="comment">//通过以上步骤窗口就开始“滑动”起来，在滑动过程中，要记得及时更新答案。一般为求最大或最小。</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> max;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h4 id="30-串联所有单词的子串"><a href="#30-串联所有单词的子串" class="headerlink" title="30. 串联所有单词的子串"></a><a href="https://leetcode-cn.com/problems/substring-with-concatenation-of-all-words/">30. 串联所有单词的子串</a></h4><h4 id="76-最小覆盖子串"><a href="#76-最小覆盖子串" class="headerlink" title="76. 最小覆盖子串"></a><a href="https://leetcode-cn.com/problems/minimum-window-substring/">76. 最小覆盖子串</a></h4><h4 id="159-至多包含两个不同字符的最长子串"><a href="#159-至多包含两个不同字符的最长子串" class="headerlink" title="159. 至多包含两个不同字符的最长子串"></a><a href="https://leetcode-cn.com/problems/longest-substring-with-at-most-two-distinct-characters/">159. 至多包含两个不同字符的最长子串</a></h4><h4 id="209-长度最小的子数组"><a href="#209-长度最小的子数组" class="headerlink" title="209. 长度最小的子数组"></a><a href="https://leetcode-cn.com/problems/minimum-size-subarray-sum/">209. 长度最小的子数组</a></h4><h4 id="239-滑动窗口最大值"><a href="#239-滑动窗口最大值" class="headerlink" title="239. 滑动窗口最大值"></a><a href="https://leetcode-cn.com/problems/sliding-window-maximum/">239. 滑动窗口最大值</a></h4><h4 id="567-字符串的排列"><a href="#567-字符串的排列" class="headerlink" title="567. 字符串的排列"></a><a href="https://leetcode-cn.com/problems/permutation-in-string/">567. 字符串的排列</a></h4><h4 id="632-最小区间"><a href="#632-最小区间" class="headerlink" title="632. 最小区间"></a><a href="https://leetcode-cn.com/problems/smallest-range/">632. 最小区间</a></h4><h4 id="727-最小窗口子序列"><a href="#727-最小窗口子序列" class="headerlink" title="727. 最小窗口子序列"></a><a href="https://leetcode-cn.com/problems/minimum-window-subsequence/">727. 最小窗口子序列</a></h4><h1 id="转变一下刷题顺序，先以出新手村为目标"><a href="#转变一下刷题顺序，先以出新手村为目标" class="headerlink" title="转变一下刷题顺序，先以出新手村为目标"></a>转变一下刷题顺序，先以出新手村为目标</h1><p>笔记：<br>一.数据结构：<br>√1数组Array 485&#x2F;283&#x2F;27<br>√2链表Linked List 203&#x2F;206<br>√3队列Queue 933&#x2F;225（用队列实现栈）&#x2F;622&#x2F;641<br>√4栈stack 20&#x2F;496&#x2F;232（用栈实现队列） 单调栈模板<br>√5哈希表Hash table 217&#x2F;389&#x2F;496<br>√6集合set 217&#x2F;705（设计）<br>√7堆Heap 215&#x2F;692<br>√8树&amp;图（算法）</p>
<p>二.算法：<br>√1双指针two pointers 141&#x2F;344&#x2F;881<br>√2二分查找 binary search &#x3D;&#x3D;704&#x3D;&#x3D;&#x2F;35&#x2F;162&#x2F;74<br>√3滑动窗口 sliding window（技巧） 209&#x2F;1456<br>√4递归 recursion 509&#x2F;206&#x2F;344&#x2F;687 画一画 树的先学树<br>5分治 divide&amp;conquer 169&#x2F;53<br>6回溯 backtracking 22&#x2F;78&#x2F;77&#x2F;46（全经典）<br>7深度优先搜索DFS 938&#x2F;78&#x2F;200<br>8宽度优先搜索BFS 200&#x2F;547&#x2F;721<br>9并查集 union find 200&#x2F;547&#x2F;721<br>10贪心 greedy 322&#x2F;1217&#x2F;55<br>11记忆化搜索（技巧）509&#x2F;322<br>12动态规划 dynamic programming 509&#x2F;62&#x2F;121&#x2F;70&#x2F;279&#x2F;221<br>13拓扑排序 topologic sort 207&#x2F;210<br>14前缀树 trie 208&#x2F;720&#x2F;692（数据结构）</p>
<p><strong>ArrayList 动态数组:可以实现List，能增删改遍历</strong></p>
<p><strong>常用方法：get()返回第几个的值,add(),set()修改,remove()删除,size(),sort()排序</strong></p>
<p> <strong>LinkedList线性链表：可以实现Queue,List；</strong></p>
<p> <strong>queue常用操作：</strong></p>
<p><strong>添加到尾部：add(),offer()不报错；</strong></p>
<p><strong>peek()返回第一个,poll()返回第一个并删掉,size()长度.</strong></p>
<h2 id="1数组Array-485-x2F-283-x2F-27"><a href="#1数组Array-485-x2F-283-x2F-27" class="headerlink" title="1数组Array 485&#x2F;283&#x2F;27"></a>1数组Array 485&#x2F;283&#x2F;27</h2><h3 id="ArrayList-ADT"><a href="#ArrayList-ADT" class="headerlink" title="ArrayList ADT"></a>ArrayList ADT</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">size();</span><br><span class="line"></span><br><span class="line">isEmpty();</span><br><span class="line"></span><br><span class="line">contains(Object o)是否包含，不含<span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">indexOf(Object o)元素下标，不存在-<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">lastIndexOf(Object o)最大下标，不含-<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">get(<span class="type">int</span> e)获取指定下标的元素;</span><br><span class="line"></span><br><span class="line">set(<span class="type">int</span> e,E element)设置指定下标的值;</span><br><span class="line"></span><br><span class="line">add(E e)队尾添加数据;</span><br><span class="line"></span><br><span class="line">add(<span class="type">int</span> index,E element)指定下标添加元素，小于动态数组大小;</span><br><span class="line"></span><br><span class="line">remove(<span class="type">int</span> index);</span><br><span class="line"></span><br><span class="line">remove(Object o)移除指定元素，成功返回<span class="literal">true</span>，失败返回<span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">clear()清除所有;</span><br><span class="line"></span><br><span class="line">sort()所有元素排序;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h4 id="485-最大连续-1-的个数"><a href="#485-最大连续-1-的个数" class="headerlink" title="485. 最大连续 1 的个数"></a><a href="https://leetcode-cn.com/problems/max-consecutive-ones/">485. 最大连续 1 的个数</a></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">findMaxConsecutiveOnes</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        <span class="type">int</span> count=<span class="number">0</span>,max=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;nums.length;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[i]==<span class="number">1</span>)count++;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(nums[i]==<span class="number">0</span>)&#123;</span><br><span class="line">                max=Math.max(max,count);</span><br><span class="line">                count=<span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(i==nums.length-<span class="number">1</span>)max=Math.max(max,count);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//或者直接max=Math.max(max,count);</span></span><br><span class="line">        <span class="keyword">return</span> max;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="27-移除元素"><a href="#27-移除元素" class="headerlink" title="27. 移除元素"></a><a href="https://leetcode-cn.com/problems/remove-element/">27. 移除元素</a></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">removeElement</span><span class="params">(<span class="type">int</span>[] nums, <span class="type">int</span> val)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">idx</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> x : nums) &#123;<span class="comment">//x移动，快指针</span></span><br><span class="line">            <span class="keyword">if</span> (x != val) nums[idx++] = x;<span class="comment">//如果不一样，需要换了，idx下一个，慢指针</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> idx;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">class Solution &#123;</span></span><br><span class="line"><span class="comment">    public int removeElement(int[] nums, int val) &#123;</span></span><br><span class="line"><span class="comment">        int j = nums.length - 1;</span></span><br><span class="line"><span class="comment">        for (int i = 0; i &lt;= j; i++) &#123;</span></span><br><span class="line"><span class="comment">            if (nums[i] == val) &#123;</span></span><br><span class="line"><span class="comment">                swap(nums, i--, j--);//重新判断i位置换过来的新元素</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">        return j + 1;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    void swap(int[] nums, int i, int j) &#123;</span></span><br><span class="line"><span class="comment">        int tmp = nums[i];</span></span><br><span class="line"><span class="comment">        nums[i] = nums[j];</span></span><br><span class="line"><span class="comment">        nums[j] = tmp;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<h4 id="26-删除有序数组中的重复项"><a href="#26-删除有序数组中的重复项" class="headerlink" title="26. 删除有序数组中的重复项"></a><a href="https://leetcode-cn.com/problems/remove-duplicates-from-sorted-array/">26. 删除有序数组中的重复项</a></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//慢指针指向重复第一个，slow左边的都不重复</span></span><br><span class="line"><span class="comment">//快指针指向重复元素后第一个新元素</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">removeDuplicates</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(nums==<span class="literal">null</span>||nums.length==<span class="number">0</span>)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> fast=<span class="number">1</span>,slow=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(fast&lt;nums.length)&#123;</span><br><span class="line">            <span class="comment">//快指针遇到不一样的，传给慢指针的下一个，慢指针刷新移动，快指针同样移动，访问过了</span></span><br><span class="line">            <span class="keyword">if</span>(nums[fast]!=nums[slow])&#123;</span><br><span class="line">                nums[slow+<span class="number">1</span>]=nums[fast];</span><br><span class="line">                slow++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//如果前后一样，快指针继续移动</span></span><br><span class="line">            fast++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> slow+<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="448-找到所有数组中消失的数字"><a href="#448-找到所有数组中消失的数字" class="headerlink" title="448. 找到所有数组中消失的数字"></a><a href="https://leetcode-cn.com/problems/find-all-numbers-disappeared-in-an-array/">448. 找到所有数组中消失的数字</a></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//数组索引和不重复数组-1完全一致</span></span><br><span class="line"><span class="comment">//有重复数组，重复数字，少了元素，也少了对应的索引+1</span></span><br><span class="line"><span class="comment">//所以只需要看索引位置就可以知道少了什么数字</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> List&lt;Integer&gt; <span class="title function_">findDisappearedNumbers</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(nums.length==<span class="number">0</span>)<span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;nums.length;i++)&#123;</span><br><span class="line">            nums[Math.abs(nums[i])-<span class="number">1</span>]=-Math.abs(nums[Math.abs(nums[i])-<span class="number">1</span>]);</span><br><span class="line">        &#125;<span class="comment">//理解nums[nums[i]-1]</span></span><br><span class="line">        List&lt;Integer&gt; result=<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;nums.length;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[i]&gt;<span class="number">0</span>) result.add(i+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="2链表Linked-List-203-x2F-206"><a href="#2链表Linked-List-203-x2F-206" class="headerlink" title="2链表Linked List 203&#x2F;206"></a>2链表Linked List 203&#x2F;206</h2><h3 id="单向链表ADT"><a href="#单向链表ADT" class="headerlink" title="单向链表ADT"></a>单向链表ADT</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">isEmpty();</span><br><span class="line"></span><br><span class="line">isLast(node) node是否最后一个结点，<span class="literal">true</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">getFirst();</span><br><span class="line"></span><br><span class="line">setFirst(node);</span><br><span class="line"></span><br><span class="line">prepend(T obj)添加元素到链头，返回指向新节点的指针;</span><br><span class="line"></span><br><span class="line">append(T obj)添加元素到表尾，返回指向新节点指针;</span><br><span class="line"></span><br><span class="line">insert(node,T obj) node后插入新结点obj，返回新结点;</span><br><span class="line"></span><br><span class="line">remove(node);</span><br><span class="line"></span><br><span class="line">removeHead();</span><br><span class="line"></span><br><span class="line">clear();</span><br><span class="line"></span><br><span class="line">free();</span><br><span class="line"></span><br><span class="line">getNthEntry(<span class="type">int</span> n)返回第n个位置的元素，超出报错;</span><br><span class="line"></span><br><span class="line">length();</span><br><span class="line"></span><br><span class="line">toArry();</span><br><span class="line"></span><br><span class="line">findData(T obj);</span><br><span class="line"></span><br><span class="line">迭代器?Iterator</span><br></pre></td></tr></table></figure>



<h4 id="203-移除链表元素"><a href="#203-移除链表元素" class="headerlink" title="203. 移除链表元素"></a><a href="https://leetcode-cn.com/problems/remove-linked-list-elements/">203. 移除链表元素</a></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> ListNode <span class="title function_">removeElements</span><span class="params">(ListNode head, <span class="type">int</span> val)</span> &#123;</span><br><span class="line">        <span class="comment">////创建一个新的头,加一个头来判断第一个节点</span></span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">dummyHead</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ListNode</span>(<span class="number">0</span>);</span><br><span class="line">        dummyHead.next = head;<span class="comment">//head前一个</span></span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">temp</span> <span class="operator">=</span> dummyHead;<span class="comment">//当前指针</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span> (temp.next != <span class="literal">null</span>) &#123;<span class="comment">//判断下一个是不是val，为空或者到了最后</span></span><br><span class="line">            <span class="keyword">if</span> (temp.next.val == val) &#123;</span><br><span class="line">                temp.next = temp.next.next;<span class="comment">//删除下一个</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                temp = temp.next;<span class="comment">//后移</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dummyHead.next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="206-反转链表头插法"><a href="#206-反转链表头插法" class="headerlink" title="206. 反转链表头插法"></a><a href="https://leetcode-cn.com/problems/reverse-linked-list/">206. 反转链表</a>头插法</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//头插法 模板</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> ListNode <span class="title function_">reverseList</span><span class="params">(ListNode head)</span> &#123;</span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">prev</span> <span class="operator">=</span> <span class="literal">null</span>;<span class="comment">//新增头</span></span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">curr</span> <span class="operator">=</span> head;<span class="comment">//1-&gt;2-&gt;3为例</span></span><br><span class="line">        <span class="keyword">while</span> (curr != <span class="literal">null</span>) &#123;<span class="comment">//不空也没有到尾，cur=2       </span></span><br><span class="line">            <span class="comment">//核心，断中间指针，换next</span></span><br><span class="line">            <span class="type">ListNode</span> <span class="variable">next</span> <span class="operator">=</span> curr.next;<span class="comment">//next保存,next=3</span></span><br><span class="line">            curr.next = prev;<span class="comment">//curr.next=1           </span></span><br><span class="line">            <span class="comment">//后移</span></span><br><span class="line">            prev = curr;<span class="comment">//pre=2</span></span><br><span class="line">            curr = next;<span class="comment">//cur=3//还需要使用cur.next所以用next保存</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> prev;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//递归</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">	<span class="keyword">public</span> ListNode <span class="title function_">reverseList</span><span class="params">(ListNode head)</span> &#123;</span><br><span class="line">		<span class="comment">//递归终止条件是当前为空传进来个空的，或者下一个节点为空递归到了最后一个</span></span><br><span class="line">		<span class="keyword">if</span>(head==<span class="literal">null</span> || head.next==<span class="literal">null</span>) &#123;</span><br><span class="line">			<span class="keyword">return</span> head;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">//这里的cur就是最后一个节点</span></span><br><span class="line">		<span class="type">ListNode</span> <span class="variable">cur</span> <span class="operator">=</span> reverseList(head.next);<span class="comment">//进入递归，下一层，之后的代码先不执行</span></span><br><span class="line">		</span><br><span class="line">		<span class="comment">//如果链表是 1-&gt;2-&gt;3-&gt;4-&gt;5，那么此时的cur就是5</span></span><br><span class="line">		<span class="comment">//而head是4，head的下一个是5，下下一个是空，则进入if，return 5结束(4.next)的递归</span></span><br><span class="line">		</span><br><span class="line">        <span class="comment">//所以head.next.next 就是(4.next).next=4  5-&gt;4</span></span><br><span class="line">		head.next.next = head;</span><br><span class="line">		<span class="comment">//防止链表循环，需要将head.next设置为空 4.next=null</span></span><br><span class="line">		head.next = <span class="literal">null</span>;</span><br><span class="line">		<span class="comment">//每层递归函数都返回cur，也就是最后一个节点 ,从上一层没执行完的head.next.next = head继续,执行完所有语句结束这一层递归</span></span><br><span class="line">		<span class="keyword">return</span> cur;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="19-删除链表的倒数第-N-个结点"><a href="#19-删除链表的倒数第-N-个结点" class="headerlink" title="19. 删除链表的倒数第 N 个结点"></a><a href="https://leetcode-cn.com/problems/remove-nth-node-from-end-of-list/">19. 删除链表的倒数第 N 个结点</a></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> ListNode <span class="title function_">removeNthFromEnd</span><span class="params">(ListNode head, <span class="type">int</span> n)</span> &#123;</span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">dummy</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ListNode</span>(<span class="number">0</span>);</span><br><span class="line">        dummy.next=head;</span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">first</span> <span class="operator">=</span> dummy, second = dummy;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            first=first.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(first.next!=<span class="literal">null</span>)&#123;</span><br><span class="line">            first=first.next;</span><br><span class="line">            second=second.next;</span><br><span class="line">        &#125;</span><br><span class="line">        second.next=second.next.next;</span><br><span class="line">        <span class="keyword">return</span> dummy.next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="21-合并两个有序链表"><a href="#21-合并两个有序链表" class="headerlink" title="21. 合并两个有序链表"></a><a href="https://leetcode-cn.com/problems/merge-two-sorted-lists/">21. 合并两个有序链表</a></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> ListNode <span class="title function_">mergeTwoLists</span><span class="params">(ListNode list1, ListNode list2)</span> &#123;</span><br><span class="line">        ListNode head=<span class="keyword">new</span> <span class="title class_">ListNode</span>();</span><br><span class="line">        ListNode res=head;</span><br><span class="line">        <span class="keyword">while</span>(list1!=<span class="literal">null</span>&amp;&amp;list2!=<span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(list1.val&lt;=list2.val)&#123;</span><br><span class="line">                res.next=list1;</span><br><span class="line">                list1=list1.next;               </span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                res.next=list2;</span><br><span class="line">                list2=list2.next;</span><br><span class="line">            &#125;</span><br><span class="line">            res=res.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//没合并完的部分</span></span><br><span class="line">        res.next= list1==<span class="literal">null</span>?list2:list1;</span><br><span class="line">        <span class="keyword">return</span> head.next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h2 id="3队列Queue-933-x2F-225（用队列实现栈）-x2F-622-x2F-641"><a href="#3队列Queue-933-x2F-225（用队列实现栈）-x2F-622-x2F-641" class="headerlink" title="3队列Queue 933&#x2F;225（用队列实现栈）&#x2F;622&#x2F;641"></a>3队列Queue 933&#x2F;225（用队列实现栈）&#x2F;622&#x2F;641</h2><h3 id="队列ADT："><a href="#队列ADT：" class="headerlink" title="队列ADT："></a>队列ADT：</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">add(E e)队尾加入，无可用空间报错;</span><br><span class="line"></span><br><span class="line">offer(E e)队尾加入元素，无可用返回<span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">push(E e)类似与offer;</span><br><span class="line"></span><br><span class="line">remove()移除队首并返回，空报错;</span><br><span class="line"></span><br><span class="line">pop()移除队首并返回，空<span class="literal">null</span>;同pull();</span><br><span class="line"></span><br><span class="line">element()返回队首，空报错;</span><br><span class="line"></span><br><span class="line">peek()返回队首，空<span class="literal">null</span>；</span><br></pre></td></tr></table></figure>



<h4 id="933-最近的请求次数"><a href="#933-最近的请求次数" class="headerlink" title="933. 最近的请求次数"></a><a href="https://leetcode-cn.com/problems/number-of-recent-calls/">933. 最近的请求次数</a></h4><p>题目莫名其妙看不懂</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">RecentCounter</span> &#123;</span><br><span class="line">    Queue&lt;Integer&gt; q;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">RecentCounter</span><span class="params">()</span> &#123;</span><br><span class="line">        q = <span class="keyword">new</span> <span class="title class_">LinkedList</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">ping</span><span class="params">(<span class="type">int</span> t)</span> &#123;</span><br><span class="line">        q.add(t);</span><br><span class="line">        <span class="keyword">while</span> (q.peek() &lt; t - <span class="number">3000</span>)<span class="comment">//peek返回第一个元素</span></span><br><span class="line">            q.poll();<span class="comment">//删除并返回第一个</span></span><br><span class="line">        <span class="keyword">return</span> q.size();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="225-用队列实现栈"><a href="#225-用队列实现栈" class="headerlink" title="225. 用队列实现栈"></a><a href="https://leetcode-cn.com/problems/implement-stack-using-queues/">225. 用队列实现栈</a></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MyStack</span> &#123;</span><br><span class="line">    Queue&lt;Integer&gt; queue;</span><br><span class="line">    Queue&lt;Integer&gt; queue_ass;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyStack</span><span class="params">()</span> &#123;</span><br><span class="line">        queue=<span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;Integer&gt;();</span><br><span class="line">        queue_ass=<span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;Integer&gt;();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//思路，在插入的时候，执行操作：1给空的辅助队列输入新元素，倒过来了，2把旧队列所有入队辅助队列，3交换</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">push</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line"><span class="comment">//队列的add()方法和offer()方法的区别</span></span><br><span class="line"><span class="comment">//区别：两者都是往队列尾部插入元素，不同的时候，当超出队列界限的时候，</span></span><br><span class="line"><span class="comment">//add（）方法是抛出异常让你处理，</span></span><br><span class="line"><span class="comment">//offer（）方法是直接返回false</span></span><br><span class="line">        queue_ass.offer(x);</span><br><span class="line">         <span class="keyword">while</span>(!queue.isEmpty())&#123;</span><br><span class="line">             queue_ass.offer(queue.poll());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(!queue_ass.isEmpty())&#123;<span class="comment">//交换</span></span><br><span class="line">             queue.offer(queue_ass.poll());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*Queue&lt;Integer&gt; temp = queue1;//一样的交换</span></span><br><span class="line"><span class="comment">        queue1 = queue2;</span></span><br><span class="line"><span class="comment">        queue2 = temp;*/</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">pop</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> queue.poll();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">top</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> queue.peek();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">empty</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> queue.isEmpty();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="622-设计循环队列"><a href="#622-设计循环队列" class="headerlink" title="622. 设计循环队列"></a><a href="https://leetcode-cn.com/problems/design-circular-queue/">622. 设计循环队列</a></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//用固定长度数组实现循环队列</span></span><br><span class="line"><span class="comment">//定义两个循环变量（指针），front和rear，模仿动态数组</span></span><br><span class="line"><span class="comment">//rear指向前一个可以插的空位，front指向队头第一个元素非空</span></span><br><span class="line"><span class="comment">//人为区别空和循环满的判断条件，空front==rear,循环满(front+1)%length==rear,浪费最后一个空位</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyCircularQueue</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span>[]arr;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> front;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> rear;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> length;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyCircularQueue</span><span class="params">(<span class="type">int</span> k)</span> &#123;</span><br><span class="line">        length=k+<span class="number">1</span>;</span><br><span class="line">        arr=<span class="keyword">new</span> <span class="title class_">int</span>[length];</span><br><span class="line">        front=<span class="number">0</span>;</span><br><span class="line">        rear=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">enQueue</span><span class="params">(<span class="type">int</span> value)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(isFull())&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            arr[rear]=value;</span><br><span class="line">            rear=(rear+<span class="number">1</span>)%length;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125; </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">deQueue</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(isEmpty())&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            front=(front+<span class="number">1</span>)%length;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">Front</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(isEmpty())&#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">return</span> arr[front];</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">Rear</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(isEmpty())&#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">         <span class="keyword">return</span> arr[(rear-<span class="number">1</span>+length)%length];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isEmpty</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span>(front==rear);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isFull</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span>((rear+<span class="number">1</span>)%length==front);<span class="comment">// 注意：这是这个经典设计的原因</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="641-设计循环双端队列"><a href="#641-设计循环双端队列" class="headerlink" title="641. 设计循环双端队列"></a><a href="https://leetcode-cn.com/problems/design-circular-deque/">641. 设计循环双端队列</a></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MyCircularDeque</span> &#123;<span class="comment">//和单端循环队列区别不大,头朝后尾朝前，头增长尾缩短</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span>[] arr;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> front;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> rear;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> length;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyCircularDeque</span><span class="params">(<span class="type">int</span> k)</span> &#123;</span><br><span class="line">        length=k+<span class="number">1</span>;</span><br><span class="line">        arr=<span class="keyword">new</span> <span class="title class_">int</span>[length];</span><br><span class="line">        front=<span class="number">0</span>;</span><br><span class="line">        rear=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">insertFront</span><span class="params">(<span class="type">int</span> value)</span> &#123;<span class="comment">//新的</span></span><br><span class="line">        <span class="keyword">if</span>(isFull())<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            arr[(front-<span class="number">1</span>+length)%length]=value;</span><br><span class="line">            front=(front-<span class="number">1</span>+length)%length;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">insertLast</span><span class="params">(<span class="type">int</span> value)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(isFull())<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            arr[rear]=value;</span><br><span class="line">            rear=(rear+<span class="number">1</span>)%length;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">deleteFront</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(isEmpty())<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            front=(front+<span class="number">1</span>)%length;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">deleteLast</span><span class="params">()</span> &#123;<span class="comment">//新的</span></span><br><span class="line">        <span class="keyword">if</span>(isEmpty())<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            rear=(rear-<span class="number">1</span>+length)%length;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getFront</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(isEmpty())<span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> arr[front];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getRear</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(isEmpty())<span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> arr[(rear-<span class="number">1</span>+length)%length];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isEmpty</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(front==rear)<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isFull</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>((rear+<span class="number">1</span>+length)%length==front)<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="4栈stack-20-x2F-496-x2F-232（用栈实现队列）"><a href="#4栈stack-20-x2F-496-x2F-232（用栈实现队列）" class="headerlink" title="4栈stack 20&#x2F;496&#x2F;232（用栈实现队列）"></a>4栈stack 20&#x2F;496&#x2F;232（用栈实现队列）</h2><h3 id="栈ADT："><a href="#栈ADT：" class="headerlink" title="栈ADT："></a>栈ADT：</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">stack()建立一个空栈;</span><br><span class="line"></span><br><span class="line">push(E item)栈顶插入，入栈;</span><br><span class="line"></span><br><span class="line">pop()栈顶删除返回，出栈;</span><br><span class="line"></span><br><span class="line">peek()返回栈顶元素;</span><br><span class="line"></span><br><span class="line">empty();</span><br><span class="line"></span><br><span class="line">search(Object o)查找位置;</span><br></pre></td></tr></table></figure>

<h4 id="20-有效的括号"><a href="#20-有效的括号" class="headerlink" title="20. 有效的括号"></a><a href="https://leetcode-cn.com/problems/valid-parentheses/">20. 有效的括号</a></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isValid</span><span class="params">(String s)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(s.isEmpty())<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        Stack&lt;Character&gt; stack=<span class="keyword">new</span> <span class="title class_">Stack</span>&lt;Character&gt;();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">char</span> c:s.toCharArray())&#123;</span><br><span class="line">            <span class="keyword">if</span>(c==<span class="string">&#x27;(&#x27;</span>)</span><br><span class="line">                stack.push(<span class="string">&#x27;)&#x27;</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(c==<span class="string">&#x27;[&#x27;</span>)</span><br><span class="line">                stack.push(<span class="string">&#x27;]&#x27;</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(c==<span class="string">&#x27;&#123;&#x27;</span>)</span><br><span class="line">                stack.push(<span class="string">&#x27;&#125;&#x27;</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(stack.empty()||c!=stack.pop())</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(stack.empty())</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="496-下一个更大元素-I"><a href="#496-下一个更大元素-I" class="headerlink" title="496. 下一个更大元素 I"></a><a href="https://leetcode-cn.com/problems/next-greater-element-i/">496. 下一个更大元素 I</a></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//模板</span></span><br><span class="line"><span class="comment">//[2,1,2,4,3]自己找自己[4,2,4,-1,-1]</span></span><br><span class="line"><span class="comment">//找能挡住自己的就够了</span></span><br><span class="line">vector&lt;<span class="type">int</span>&gt; <span class="title function_">nextGreaterElement</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums)</span> &#123;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; <span class="title function_">ans</span><span class="params">(nums.size()</span>); <span class="comment">// 存放答案的数组</span></span><br><span class="line">    stack&lt;<span class="type">int</span>&gt; s;<span class="comment">// 这里放元素索引，而不是元素</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> nums.size() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123; <span class="comment">// 倒着往栈里放,一开始就是从自己之后开始寻找;与顺序寻找，把所有都压入栈再找不同在于，全部一次压入栈 需要先找当前的元素自己，再找之后的更大元素，找完到下一个需要把它之前出栈的元素重新压栈;</span></span><br><span class="line">        <span class="keyword">while</span> (!s.empty() &amp;&amp; s.top() &lt;= nums[i]) &#123; <span class="comment">// 判定个子高矮，循环，如果小就出栈扔掉，把所有无关的小个子都扔掉直到被大个子挡住</span></span><br><span class="line">            s.pop(); <span class="comment">// 矮个起开，反正也被挡着了。。。</span></span><br><span class="line">        &#125;<span class="comment">//栈里剩下来的第一个是比当前元素大的大个子</span></span><br><span class="line">        ans[i] = s.empty() ? -<span class="number">1</span> : s.top(); <span class="comment">// 这个元素身后的第一个高个,得到最大元素的值</span></span><br><span class="line">        s.push(nums[i]); <span class="comment">// 进队，接受之后的身高判定吧！加入</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>




<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] nextGreaterElement(<span class="type">int</span>[] nums1, <span class="type">int</span>[] nums2) &#123;</span><br><span class="line">        <span class="type">int</span>[] result=<span class="keyword">new</span> <span class="title class_">int</span> [nums1.length];</span><br><span class="line">        Map&lt;Integer,Integer&gt;map=nextGreaterHelper(nums2);<span class="comment">//找到nums2自己的nextGreaterElement</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;nums1.length;i++)&#123;<span class="comment">//查询map</span></span><br><span class="line">            result[i]=map.get(nums1[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;      </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//因为nums1是nums2的子集，只需要 先套用模板在nums2中nums2的nextGreaterElement,用map储存，nums1就一定能在map中 找到自己在nums2母集中对应的nextGreaterElement</span></span><br><span class="line">    <span class="keyword">private</span> Map&lt;Integer,Integer&gt; <span class="title function_">nextGreaterHelper</span><span class="params">(<span class="type">int</span>[] nums)</span>&#123;</span><br><span class="line">        Map&lt;Integer,Integer&gt; map=<span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        Stack&lt;Integer&gt; stack=<span class="keyword">new</span> <span class="title class_">Stack</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=nums.length-<span class="number">1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">            <span class="keyword">while</span>(!stack.empty()&amp;&amp; stack.peek()&lt;=nums[i])&#123;<span class="comment">//peek(),top()无所谓</span></span><br><span class="line">                stack.pop();</span><br><span class="line">            &#125;</span><br><span class="line">            map.put(nums[i],stack.isEmpty()?-<span class="number">1</span>:stack.peek());<span class="comment">//isEmpty(),empty()无所谓</span></span><br><span class="line">            stack.push(nums[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> map;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="503-下一个更大元素-II"><a href="#503-下一个更大元素-II" class="headerlink" title="503. 下一个更大元素 II"></a><a href="https://leetcode-cn.com/problems/next-greater-element-ii/">503. 下一个更大元素 II</a></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//用i % length取余模拟循环</span></span><br><span class="line"><span class="comment">//[21243]-&gt;假装变成两倍-&gt;[21243 21243] [4,2,4,-1,4]</span></span><br><span class="line"><span class="comment">//变化：在1循环时循环2length-1次，2所有从nums读数字都是i%length</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] nextGreaterElements(<span class="type">int</span>[] nums) &#123;</span><br><span class="line">        <span class="type">int</span> n=nums.length;</span><br><span class="line">        <span class="type">int</span>[] res=<span class="keyword">new</span> <span class="title class_">int</span>[n];<span class="comment">// 存放结果</span></span><br><span class="line">        Stack&lt;Integer&gt; stack=<span class="keyword">new</span> <span class="title class_">Stack</span>&lt;&gt;();</span><br><span class="line">        <span class="comment">// 假装这个数组长度翻倍了</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>*n-<span class="number">1</span>;i&gt;=<span class="number">0</span>;i--)&#123;<span class="comment">//假装翻倍ums.length，一共执行了2*length-1次，重复的一遍更新，大部分是重复数字；有变化</span></span><br><span class="line">            <span class="keyword">while</span>(!stack.empty()&amp;&amp;stack.peek()&lt;=nums[i%n])&#123;<span class="comment">//i%nums.length()实现复制模拟循环；有变化</span></span><br><span class="line">                stack.pop();</span><br><span class="line">            &#125;</span><br><span class="line">            res[i%n]=stack.empty()?-<span class="number">1</span>:stack.peek();</span><br><span class="line">            stack.push(nums[i%n]);</span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p><a href="https://leetcode-cn.com/problems/number-of-days-in-a-month">1118.一月有多少天</a></p>
<h2 id="5哈希表Hash-table-217-x2F-389-x2F-496"><a href="#5哈希表Hash-table-217-x2F-389-x2F-496" class="headerlink" title="5哈希表Hash table 217&#x2F;389&#x2F;496"></a>5哈希表Hash table 217&#x2F;389&#x2F;496</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">HashSet&lt;String&gt; sites = new HashSet&lt;String&gt;();</span><br></pre></td></tr></table></figure>

<h5 id="HashSet常用-add-contains-remove-size"><a href="#HashSet常用-add-contains-remove-size" class="headerlink" title="HashSet常用 add(),contains(),remove(),size();"></a>HashSet常用 add(),contains(),remove(),size();</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">HashMap&lt;Integer, String&gt; Sites = new HashMap&lt;Integer, String&gt;();</span><br></pre></td></tr></table></figure>

<h5 id="HashMap常用put-key-value-get-key-访问value-remove-key-size"><a href="#HashMap常用put-key-value-get-key-访问value-remove-key-size" class="headerlink" title="HashMap常用put(key,value),get(key)访问value,remove(key),size()"></a>HashMap常用put(key,value),get(key)访问value,remove(key),size()</h5><p>for-each,clear(),clone(),isEmpty()通用</p>
<h4 id="217-存在重复元素"><a href="#217-存在重复元素" class="headerlink" title="217. 存在重复元素"></a><a href="https://leetcode-cn.com/problems/contains-duplicate/">217. 存在重复元素</a></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">containsDuplicate</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        Arrays.sort(nums);</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> nums.length;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (nums[i] == nums[i + <span class="number">1</span>]) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//HashSet不能保存相同元素，add不进去，而且自带去重，结果会短</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">containsDuplicate</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        Set&lt;Integer&gt; set = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;Integer&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> x : nums) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!set.add(x)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//去重判断长度的方法</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">containsDuplicate</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        Set&lt;Integer&gt; set=<span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> x:nums)set.add(x);</span><br><span class="line">        <span class="keyword">if</span>(set.size()&lt;nums.length)<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="389-找不同"><a href="#389-找不同" class="headerlink" title="389. 找不同"></a><a href="https://leetcode-cn.com/problems/find-the-difference/">389. 找不同</a></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"> <span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">char</span> <span class="title function_">findTheDifference</span><span class="params">(String s, String t)</span> &#123;</span><br><span class="line">        Set&lt;Character&gt; set=<span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();</span><br><span class="line">        <span class="type">char</span>[] charArr = s.concat(t).toCharArray();<span class="comment">//concat()连接到字符串尾部，toCharArray()转化为字符数组</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;charArr.length;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(set.contains(charArr[i]))&#123;<span class="comment">//s元素有两份重合，添加的一个字母只有一份；如果包含就删去，不包含就添加，两份会先添加再删除，一份只添加不删除</span></span><br><span class="line">                set.remove(charArr[i]);</span><br><span class="line">            &#125;<span class="keyword">else</span> set.add(charArr[i]);</span><br><span class="line">        &#125;<span class="keyword">return</span> (<span class="type">char</span>) set.toArray()[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="496-下一个更大元素-I-哈希-单调栈怎么做？"><a href="#496-下一个更大元素-I-哈希-单调栈怎么做？" class="headerlink" title="496. 下一个更大元素 I 哈希+单调栈怎么做？"></a><a href="https://leetcode-cn.com/problems/next-greater-element-i/">496. 下一个更大元素 I</a> 哈希+单调栈怎么做？</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] nextGreaterElement(<span class="type">int</span>[] nums1, <span class="type">int</span>[] nums2) &#123;</span><br><span class="line">        <span class="type">int</span>[] res =<span class="keyword">new</span> <span class="title class_">int</span>[nums1.length];      </span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;nums1.length;i++)&#123;</span><br><span class="line">            <span class="type">int</span> j=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span>(j&lt;nums2.length&amp;&amp;nums1[i]!=nums2[j])j++;<span class="comment">//跳出条件为相等或没有</span></span><br><span class="line">            <span class="keyword">while</span>(j&lt;nums2.length&amp;&amp;nums2[j]&lt;=nums1[i])j++;<span class="comment">//如果相等而不是遍历后没有,下一个符合条件跳出         </span></span><br><span class="line">            res[i] = j&lt;nums2.length ? nums2[j] : -<span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">return</span> res;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="136-只出现一次的数字"><a href="#136-只出现一次的数字" class="headerlink" title="136. 只出现一次的数字"></a><a href="https://leetcode-cn.com/problems/single-number/">136. 只出现一次的数字</a></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*class Solution &#123;</span></span><br><span class="line"><span class="comment">    public int singleNumber(int[] nums) &#123;</span></span><br><span class="line"><span class="comment">        Set&lt;Integer&gt;set =new HashSet&lt;&gt;();       </span></span><br><span class="line"><span class="comment">        for(int i=0;i&lt;nums.length;i++)&#123;   </span></span><br><span class="line"><span class="comment">            if(set.contains(nums[i]))&#123;</span></span><br><span class="line"><span class="comment">                set.remove(nums[i]);</span></span><br><span class="line"><span class="comment">            &#125;else set.add(nums[i]);</span></span><br><span class="line"><span class="comment">        &#125;return (int)set.toArray()[0];</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">singleNumber</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        Set&lt;Integer&gt;set =<span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();  </span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i:nums)&#123;<span class="comment">//循环写法差别而已</span></span><br><span class="line">            <span class="keyword">if</span>(set.contains(i))&#123;</span><br><span class="line">            set.remove(i);</span><br><span class="line">            &#125;<span class="keyword">else</span> set.add(i);</span><br><span class="line">        &#125;<span class="keyword">return</span> (<span class="type">int</span>)set.toArray()[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="349-两个数组的交集"><a href="#349-两个数组的交集" class="headerlink" title="349. 两个数组的交集"></a><a href="https://leetcode-cn.com/problems/intersection-of-two-arrays/">349. 两个数组的交集</a></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] intersection(<span class="type">int</span>[] nums1, <span class="type">int</span>[] nums2) &#123;</span><br><span class="line">        Set &lt;Integer&gt; parentSet=<span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();</span><br><span class="line">        Set &lt;Integer&gt; childSet=<span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> num:nums1)&#123;</span><br><span class="line">            parentSet.add(num);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> num:nums2)&#123;</span><br><span class="line">            <span class="keyword">if</span>(parentSet.contains(num))&#123;<span class="comment">//重复就存</span></span><br><span class="line">                childSet.add(num);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//用数组输出，hashset调用函数转数组转不明白暴力转</span></span><br><span class="line">        <span class="type">int</span> [] res=<span class="keyword">new</span> <span class="title class_">int</span>[childSet.size()];</span><br><span class="line">        <span class="type">int</span> index=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> value:childSet)&#123;</span><br><span class="line">            res[index++]=value;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="242-有效的字母异位词"><a href="#242-有效的字母异位词" class="headerlink" title="242. 有效的字母异位词"></a><a href="https://leetcode-cn.com/problems/valid-anagram/">242. 有效的字母异位词</a></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*class Solution &#123;</span></span><br><span class="line"><span class="comment">    public boolean isAnagram(String s, String t) &#123;</span></span><br><span class="line"><span class="comment">        char[] sChars=s.toCharArray();</span></span><br><span class="line"><span class="comment">        char[] tChars=t.toCharArray();</span></span><br><span class="line"><span class="comment">        Arrays.sort(sChars);</span></span><br><span class="line"><span class="comment">        Arrays.sort(tChars);</span></span><br><span class="line"><span class="comment">        return Arrays.equals(sChars,tChars);</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">&#125;*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isAnagram</span><span class="params">(String s, String t)</span> &#123;</span><br><span class="line">        Map&lt;Character,Integer&gt; map=<span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">char</span> ch:s.toCharArray())&#123;</span><br><span class="line">            map.put(ch,map.getOrDefault(ch,<span class="number">0</span>)+<span class="number">1</span>);<span class="comment">//getOrDefault获取指定 key 对应对 value，如果找不到 key ，则返回设置的默认值(定义ch,0默认值)</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">char</span> ch:t.toCharArray())&#123;</span><br><span class="line">            Integer count=map.get(ch);</span><br><span class="line">            <span class="keyword">if</span>(count==<span class="literal">null</span>)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(count&gt;<span class="number">1</span>)&#123;</span><br><span class="line">                map.put(ch,count-<span class="number">1</span>);<span class="comment">//更新</span></span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                map.remove(ch);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> map.isEmpty();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="剑指-Offer-03-数组中重复的数字"><a href="#剑指-Offer-03-数组中重复的数字" class="headerlink" title="剑指 Offer 03. 数组中重复的数字"></a><a href="https://leetcode-cn.com/problems/shu-zu-zhong-zhong-fu-de-shu-zi-lcof/">剑指 Offer 03. 数组中重复的数字</a></h4><p>HashSet.add() 不进去重复元素，会return false</p>
<p>而HashMap.put()会更新</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">    public int findRepeatNumber(int[] nums) &#123;</span><br><span class="line">        Set&lt;Integer&gt; set=new HashSet&lt;&gt;();</span><br><span class="line">        for(int num:nums)&#123;</span><br><span class="line">            if(!set.add(num))return num;</span><br><span class="line">        &#125;return -1;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="6集合set-217-x2F-705（设计）"><a href="#6集合set-217-x2F-705（设计）" class="headerlink" title="6集合set 217&#x2F;705（设计）"></a>6集合set 217&#x2F;705（设计）</h2><h4 id="705-设计哈希集合"><a href="#705-设计哈希集合" class="headerlink" title="705. 设计哈希集合"></a><a href="https://leetcode-cn.com/problems/design-hashset/">705. 设计哈希集合</a></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//数组</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyHashSet</span> &#123;</span><br><span class="line"><span class="comment">/** Initialize your data structure here. */</span></span><br><span class="line">    <span class="type">boolean</span>[]nodes =<span class="keyword">new</span> <span class="title class_">boolean</span>[<span class="number">10000000</span>];<span class="comment">//boolean类型的数组，好用</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyHashSet</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> key)</span> &#123;</span><br><span class="line">        nodes[key]=<span class="literal">true</span>;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">remove</span><span class="params">(<span class="type">int</span> key)</span> &#123;</span><br><span class="line">        nodes[key]=<span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">contains</span><span class="params">(<span class="type">int</span> key)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> nodes[key];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="7堆Heap-215-x2F-692"><a href="#7堆Heap-215-x2F-692" class="headerlink" title="7堆Heap 215&#x2F;692"></a>7堆Heap 215&#x2F;692</h2><p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203202221210.png" alt="image-20220309214446810"></p>
<p>已知堆的父节点，左孩子2k+1，右孩子2k+2；</p>
<p>已知孩子节点k，parent (k-1)&#x2F;2  int不要小数</p>
<p>Heapify 堆排序（大根堆、小根堆） T(N)&#x3D;O(N)</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">buildHeap</span><span class="params">(<span class="type">int</span>[] A)</span>&#123;<span class="comment">//传入数组，堆排序，并且要求是大根堆</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=A.length/<span class="number">2</span>;i--)<span class="comment">//为什么length/2？所有双亲节点，叶子节点占一半</span></span><br><span class="line">		heapify(A,A.length,i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//从二分之一开始往前，对应每个双亲结点，以及它自己的双亲结点（之后会递归到存储数组的开头），从下往上，堆排序；每次具体排序都从这个结点作为根节点自上而下遍历排序到自己的叶子节点，因为之前上层的排序有可能使下面的排序不符合堆。</span></span><br><span class="line"><span class="comment">//完成大根堆后，才能考虑通过交换最大根元素到最后一个叶子节点，找根和孩子节点最大，不断把上浮的大元素交换到叶子，完成堆排序。堆排序看后面！</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">heapify</span><span class="params">(<span class="type">int</span> arr[],<span class="type">int</span> n,<span class="type">int</span> i)</span>&#123;</span><br><span class="line">    <span class="type">int</span> largest=i;<span class="comment">//初始化largest as root</span></span><br><span class="line">    <span class="type">int</span> lChild=<span class="number">2</span>*i+<span class="number">1</span>;<span class="comment">//左右孩子指针</span></span><br><span class="line">    <span class="type">int</span> rChild=<span class="number">2</span>*i+<span class="number">2</span>;</span><br><span class="line">    <span class="comment">//在三个结点中先找最大，用largest指针标记最大，找到后交换largest到根节点</span></span><br><span class="line">    <span class="keyword">if</span>(lChild&lt;n&amp;&amp;arr[lChild]&gt;arr[largest])</span><br><span class="line">        largest=lChild;</span><br><span class="line">    <span class="keyword">if</span>(rChild&lt;n&amp;&amp;arr[rChild]&gt;arr[largest])</span><br><span class="line">        largest=rChild;</span><br><span class="line">    <span class="keyword">if</span>(largest!=i)&#123;<span class="comment">//最大不是根结点，就交换值</span></span><br><span class="line">        <span class="type">int</span> temp=arr[i];</span><br><span class="line">        arr[i]=arr[largest];</span><br><span class="line">        arr[largest]=arr[i];</span><br><span class="line">        heapify(arr,n,largest]);<span class="comment">//largest此时指向改变的位置</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203202221197.jpeg" alt="网页捕获_10-3-2022_102336_www.cnblogs.com"></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//HeapSort 每次把第一个元素拿出来，对剩下的做Heapify，没法直接拿，把头和尾做调换，把最后一个尾巴叶子节点砍掉 T（n）=nlog(n)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sort</span><span class="params">(<span class="type">int</span> arr[])</span>&#123;</span><br><span class="line">    <span class="type">int</span> n=arr.length;</span><br><span class="line">    <span class="comment">//build</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=n/<span class="number">2</span>-<span class="number">1</span>;i&gt;=<span class="number">0</span>;i--)<span class="comment">//算一下，i=n/2-1确定最后叶子节点对应的根，很巧妙,找双亲或者i=(n-1)/2</span></span><br><span class="line">        heapify(arr,n,i);</span><br><span class="line">    <span class="comment">//one by one extract an element for heap</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=n-<span class="number">1</span>;i&gt;<span class="number">0</span>;i--)&#123;</span><br><span class="line">        <span class="comment">//move current root to end</span></span><br><span class="line">        <span class="type">int</span> temp=arr[<span class="number">0</span>];</span><br><span class="line">        arr[<span class="number">0</span>]=arr[i];</span><br><span class="line">        arr[i]=temp;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//对除了最后一个元素（已经完成了排序），剩下的所有重生成堆heapify</span></span><br><span class="line">        heapify(arr,i,<span class="number">0</span>);<span class="comment">//用i排除最后一个很巧妙</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="PriorityQueue-JAVA默认小根堆"><a href="#PriorityQueue-JAVA默认小根堆" class="headerlink" title="PriorityQueue JAVA默认小根堆"></a>PriorityQueue JAVA默认小根堆</h3><p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203202215320.png" alt="img"></p>
<img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203202215568.png" alt="image-20220310112716034" style="zoom:50%;" />

<h4 id="剑指-Offer-40-最小的k个数"><a href="#剑指-Offer-40-最小的k个数" class="headerlink" title="剑指 Offer 40. 最小的k个数"></a><a href="https://leetcode-cn.com/problems/zui-xiao-de-kge-shu-lcof/">剑指 Offer 40. 最小的k个数</a></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 保持堆的大小为K，然后遍历数组中的数字，遍历的时候做如下判断：</span></span><br><span class="line"><span class="comment">// 1. 若目前堆的大小小于K，将当前数字放入堆中。</span></span><br><span class="line"><span class="comment">// 2. 否则判断当前数字与大根堆堆顶元素的大小关系，如果当前数字比大根堆堆顶还大，这个数就直接跳过；</span></span><br><span class="line"><span class="comment">//    反之如果当前数字比大根堆堆顶小，先poll掉堆顶，再将该数字放入堆中。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] getLeastNumbers(<span class="type">int</span>[] arr, <span class="type">int</span> k) &#123;</span><br><span class="line">        <span class="keyword">if</span>(k==<span class="number">0</span>||arr.length==<span class="number">0</span>)<span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">0</span>];</span><br><span class="line">        <span class="comment">//使用大根堆，Java的PriorityQueue默认小根堆，添加comparator参数变成大根堆</span></span><br><span class="line">        Queue&lt;Integer&gt; heap = <span class="keyword">new</span> <span class="title class_">PriorityQueue</span>&lt;&gt;((v1, v2) -&gt; v2 - v1);</span><br><span class="line">        <span class="comment">//Queue&lt;Integer&gt; heap =new PriorityQueue&lt;&gt;((v1, v2) -&gt; v2 - v1);</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> e:arr)&#123;</span><br><span class="line">            <span class="comment">//当前是大根堆，只有小于堆顶入堆</span></span><br><span class="line">            <span class="keyword">if</span> (heap.size() &lt; k) &#123;</span><br><span class="line">                heap.offer(e);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e &lt; heap.peek()) &#123;</span><br><span class="line">                heap.poll();</span><br><span class="line">                heap.offer(e);</span><br><span class="line">            &#125;<span class="comment">//删除最大元素，保证（已读取最小的）大根堆里只有k个元素</span></span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//用int数组返回</span></span><br><span class="line">        <span class="type">int</span>[] res=<span class="keyword">new</span> <span class="title class_">int</span>[heap.size()];</span><br><span class="line">        <span class="type">int</span> j=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> e:heap)&#123;</span><br><span class="line">            res[j++]=e;</span><br><span class="line">        &#125;<span class="keyword">return</span> res;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="703-数据流中的第-K-大元素"><a href="#703-数据流中的第-K-大元素" class="headerlink" title="703. 数据流中的第 K 大元素"></a><a href="https://leetcode-cn.com/problems/kth-largest-element-in-a-stream/">703. 数据流中的第 K 大元素</a></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">KthLargest</span> &#123;</span><br><span class="line">    PriorityQueue&lt;Integer&gt; pq;</span><br><span class="line">    <span class="type">int</span> k;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">KthLargest</span><span class="params">(<span class="type">int</span> k, <span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.k = k;</span><br><span class="line">        pq = <span class="keyword">new</span> <span class="title class_">PriorityQueue</span>&lt;Integer&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> x : nums) &#123;</span><br><span class="line">            add(x);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> val)</span> &#123;</span><br><span class="line">        pq.offer(val);</span><br><span class="line">        <span class="keyword">if</span> (pq.size() &gt; k) &#123;</span><br><span class="line">            pq.poll();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> pq.peek();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="215-数组中的第K个最大元素"><a href="#215-数组中的第K个最大元素" class="headerlink" title="215. 数组中的第K个最大元素"></a><a href="https://leetcode-cn.com/problems/kth-largest-element-in-an-array/">215. 数组中的第K个最大元素</a></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">findKthLargest</span><span class="params">(<span class="type">int</span>[] nums, <span class="type">int</span> k)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(nums.length&lt;k||nums.length==<span class="number">0</span>)<span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        Queue&lt;Integer&gt; pq=<span class="keyword">new</span> <span class="title class_">PriorityQueue</span>&lt;Integer&gt;();</span><br><span class="line">        <span class="comment">// Java 里没有 heapify ，因此我们逐个将前 k 个元素添加到 pq 里</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;k;i++)&#123;</span><br><span class="line">            pq.offer(nums[i]);</span><br><span class="line">        &#125;<span class="comment">//先读取k个进去</span></span><br><span class="line">        <span class="comment">//再读取后面的</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=k;i&lt;nums.length;i++)&#123;</span><br><span class="line">            <span class="comment">// 只要当前遍历的元素比堆顶元素大，堆顶弹出，遍历的元素进去</span></span><br><span class="line">            <span class="keyword">if</span>(nums[i]&gt;pq.peek())&#123;</span><br><span class="line">                    pq.poll();</span><br><span class="line">                    pq.offer(nums[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> pq.peek();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id=""><a href="#" class="headerlink" title=""></a></h4><h2 id="动态规划没看"><a href="#动态规划没看" class="headerlink" title="动态规划没看"></a>动态规划没看</h2><h4 id="53-最大子数组和"><a href="#53-最大子数组和" class="headerlink" title="53. 最大子数组和"></a><a href="https://leetcode-cn.com/problems/maximum-subarray/">53. 最大子数组和</a></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//思路1，暴力，每一个元素做第一位，循环找对应最大和，最后比较最大是哪个第一个元素，相当于两层循环</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">maxSubArray</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        <span class="type">int</span> result=nums[<span class="number">0</span>];<span class="comment">//这样定义很巧妙</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;nums.length;i++)&#123;</span><br><span class="line">            <span class="type">int</span> count=<span class="number">0</span>,res=nums[<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=i;j&lt;nums.length;j++)&#123;</span><br><span class="line">                count=count+nums[j];</span><br><span class="line">                res=Math.max(res,count);</span><br><span class="line">            &#125;</span><br><span class="line">            result=Math.max(result,res);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="comment">//超出时间限制，结果应该是没问题，需要优化</span></span><br><span class="line"><span class="comment">//暴力法无法通过</span></span><br></pre></td></tr></table></figure>



<h2 id="8递归-recursion-509-x2F-206-x2F-344-x2F-687-画一画"><a href="#8递归-recursion-509-x2F-206-x2F-344-x2F-687-画一画" class="headerlink" title="8递归 recursion 509&#x2F;206&#x2F;344&#x2F;687 画一画"></a>8递归 recursion 509&#x2F;206&#x2F;344&#x2F;687 画一画</h2><h4 id="509-斐波那契数"><a href="#509-斐波那契数" class="headerlink" title="509. 斐波那契数"></a><a href="https://leetcode-cn.com/problems/fibonacci-number/">509. 斐波那契数</a></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">fib</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(n&lt;<span class="number">2</span>) <span class="keyword">return</span> n;</span><br><span class="line">        <span class="keyword">return</span> fib(n-<span class="number">1</span>)+fib(n-<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="9分治-divide-amp-conquer-169-x2F-53-考的少先跳过"><a href="#9分治-divide-amp-conquer-169-x2F-53-考的少先跳过" class="headerlink" title="9分治 divide&amp;conquer 169&#x2F;53,考的少先跳过"></a>9分治 divide&amp;conquer 169&#x2F;53,考的少先跳过</h2><h4 id="169-多数元素"><a href="#169-多数元素" class="headerlink" title="169. 多数元素"></a><a href="https://leetcode-cn.com/problems/majority-element/">169. 多数元素</a></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//找众数</span></span><br><span class="line"><span class="comment">//1暴力找</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//2排序看中间</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">majorityElement</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        Arrays.sort(nums);</span><br><span class="line">        <span class="keyword">return</span> nums[(nums.length-<span class="number">1</span>)/<span class="number">2</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//3hashmap计数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//4分治？</span></span><br><span class="line"><span class="comment">//5摩尔投票？</span></span><br></pre></td></tr></table></figure>

<h2 id="10-扫描线"><a href="#10-扫描线" class="headerlink" title="10 扫描线"></a>10 扫描线</h2><h4 id="252-会议室"><a href="#252-会议室" class="headerlink" title="252. 会议室"></a><a href="https://leetcode-cn.com/problems/meeting-rooms">252. 会议室</a></h4><p>input:[[0,30],[5,10],[15,20]] outpit:false 能否同时参加</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">canAttendMeeting</span><span class="params">(<span class="type">int</span>[][] intervals)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(intervals.length==<span class="number">0</span>)<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    Arrays.sor(intervals,(a,b)-&gt;a[<span class="number">0</span>]-b[<span class="number">0</span>]);<span class="comment">//分类完比较起点终点就是扫描线</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;intervals.length-<span class="number">1</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(intervals[i][<span class="number">1</span>]&gt;intervals[i+<span class="number">1</span>][<span class="number">0</span>])&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;<span class="comment">//前一个结束的比后一个开始的迟</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="253-会议室-II-飞机起飞"><a href="#253-会议室-II-飞机起飞" class="headerlink" title="253. 会议室 II 飞机起飞"></a><a href="https://leetcode-cn.com/problems/meeting-rooms-ii">253. 会议室 II</a> 飞机起飞</h4><p>input:[[0,30],[5,10],[15,20]] outpit:2 最少需要几个房间</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">minMeetingRooms</span><span class="params">(<span class="type">int</span>[][] intervals)</span>&#123;</span><br><span class="line">    List&lt;<span class="type">int</span>[]&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span>[] interval: intervals)&#123;</span><br><span class="line">        list.add(<span class="keyword">new</span> <span class="title class_">int</span>[]&#123;interval[<span class="number">0</span>],<span class="number">1</span>&#125;);</span><br><span class="line">        list.add(<span class="keyword">new</span> <span class="title class_">int</span>[]&#123;interval[<span class="number">1</span>],-<span class="number">1</span>&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    Collection.sort(list,(a,b)-&gt;a[<span class="number">0</span>]==b[<span class="number">0</span>]?a[<span class="number">1</span>]-b[<span class="number">1</span>]:a[<span class="number">0</span>]-b[<span class="number">0</span>]);</span><br><span class="line">    <span class="type">int</span> res=<span class="number">0</span>,count=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span>[]point:list)&#123;</span><br><span class="line">        count +=point[<span class="number">1</span>];</span><br><span class="line">        res=Math.max(res,count);        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="11-树"><a href="#11-树" class="headerlink" title="11 树"></a>11 树</h2><h4 id="144-二叉树的前序遍历"><a href="#144-二叉树的前序遍历" class="headerlink" title="144. 二叉树的前序遍历"></a><a href="https://leetcode-cn.com/problems/binary-tree-preorder-traversal/">144. 二叉树的前序遍历</a></h4><h4 id="94-二叉树的中序遍历"><a href="#94-二叉树的中序遍历" class="headerlink" title="94. 二叉树的中序遍历"></a><a href="https://leetcode-cn.com/problems/binary-tree-inorder-traversal/">94. 二叉树的中序遍历</a></h4><h4 id="145-二叉树的后序遍历"><a href="#145-二叉树的后序遍历" class="headerlink" title="145. 二叉树的后序遍历"></a><a href="https://leetcode-cn.com/problems/binary-tree-postorder-traversal/">145. 二叉树的后序遍历</a></h4><h4 id="递归法"><a href="#递归法" class="headerlink" title="递归法"></a>递归法</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * public class TreeNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     TreeNode left;</span></span><br><span class="line"><span class="comment"> *     TreeNode right;</span></span><br><span class="line"><span class="comment"> *     TreeNode() &#123;&#125;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int val) &#123; this.val = val; &#125;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int val, TreeNode left, TreeNode right) &#123;</span></span><br><span class="line"><span class="comment"> *         this.val = val;</span></span><br><span class="line"><span class="comment"> *         this.left = left;</span></span><br><span class="line"><span class="comment"> *         this.right = right;</span></span><br><span class="line"><span class="comment"> *     &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//前序递归遍历，叶子结点下面加一行空判断结束递归</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> List&lt;Integer&gt; <span class="title function_">preorderTraversal</span><span class="params">(TreeNode root)</span> &#123;</span><br><span class="line">        List&lt;Integer&gt; result = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Integer&gt;();</span><br><span class="line">        preorder(root, result);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">preorder</span><span class="params">(TreeNode root, List&lt;Integer&gt; result)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(root==<span class="literal">null</span>)<span class="keyword">return</span>;<span class="comment">//如果为空，上一个根是叶子，结束此递归</span></span><br><span class="line">        result.add(root.val);<span class="comment">//压入顺序表</span></span><br><span class="line">        <span class="comment">//递归前</span></span><br><span class="line">        preorder(root.left, result);<span class="comment">//递归</span></span><br><span class="line">        preorder(root.right, result);<span class="comment">//递归</span></span><br><span class="line">        <span class="comment">//递归后不需要做什么了</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//中序递归遍历</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> List&lt;Integer&gt; <span class="title function_">inorderTraversal</span><span class="params">(TreeNode root)</span> &#123;</span><br><span class="line">        List&lt;Integer&gt; result = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Integer&gt;();</span><br><span class="line">        inorder(root,result);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">inorder</span><span class="params">(TreeNode root,List result)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(root == <span class="literal">null</span>)<span class="keyword">return</span>;</span><br><span class="line">        inorder(root.left,result);</span><br><span class="line">        result.add(root.val);</span><br><span class="line">        inorder(root.right,result);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//后序递归遍历</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> List&lt;Integer&gt; <span class="title function_">postorderTraversal</span><span class="params">(TreeNode root)</span> &#123;</span><br><span class="line">        List&lt;Integer&gt; result = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Integer&gt;();</span><br><span class="line">        postorder(root, result);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">postorder</span><span class="params">(TreeNode root, List&lt;Integer&gt; result)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(root == <span class="literal">null</span>)<span class="keyword">return</span>;</span><br><span class="line">        postorder(root.left,result);</span><br><span class="line">        postorder(root.right,result);</span><br><span class="line">        result.add(root.val);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>字符串中只有isEmpty()方法，其它没太大区别</strong></p>
<h4 id="迭代，好理解的思路，不同写法"><a href="#迭代，好理解的思路，不同写法" class="headerlink" title="迭代，好理解的思路，不同写法"></a>迭代，好理解的思路，不同写法</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//前序遍历，迭代，迭代结果中左右，压栈中，右左，让右在栈底</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> List&lt;Integer&gt; <span class="title function_">preorderTraversal</span><span class="params">(TreeNode root)</span> &#123;</span><br><span class="line">        List&lt;Integer&gt; result = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Integer&gt;();</span><br><span class="line">        <span class="comment">//不同于递归，需要判空</span></span><br><span class="line">        <span class="keyword">if</span>(root == <span class="literal">null</span>)<span class="keyword">return</span> result;</span><br><span class="line">        Stack&lt;TreeNode&gt; stack = <span class="keyword">new</span> <span class="title class_">Stack</span>&lt;&gt;();</span><br><span class="line">        stack.push(root);<span class="comment">//中</span></span><br><span class="line">        <span class="keyword">while</span>(!stack.isEmpty())&#123;</span><br><span class="line">            <span class="type">TreeNode</span> <span class="variable">node</span> <span class="operator">=</span> stack.pop();</span><br><span class="line">            result.add(node.val);</span><br><span class="line">            <span class="keyword">if</span>(node.right!=<span class="literal">null</span>)&#123;</span><br><span class="line">                stack.push(node.right);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(node.left!=<span class="literal">null</span>)&#123;</span><br><span class="line">                stack.push(node.left);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//后续递归遍历，基于前序遍历，中左右，调整顺序，中，右左，方便在中先访问先处理，顺序一致；反转result为左右中</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> List&lt;Integer&gt; <span class="title function_">postorderTraversal</span><span class="params">(TreeNode root)</span> &#123;</span><br><span class="line">        List&lt;Integer&gt; result = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Integer&gt;();</span><br><span class="line">        <span class="keyword">if</span>(root == <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125;</span><br><span class="line">        Stack&lt;TreeNode&gt; stack = <span class="keyword">new</span> <span class="title class_">Stack</span>&lt;&gt;();</span><br><span class="line">        <span class="comment">//先前序遍历，但是结果是中右左</span></span><br><span class="line">        stack.push(root);</span><br><span class="line">        <span class="keyword">while</span>(!stack.isEmpty())&#123;</span><br><span class="line">            <span class="type">TreeNode</span> <span class="variable">node</span> <span class="operator">=</span> stack.pop();</span><br><span class="line">            result.add(node.val);</span><br><span class="line">            <span class="comment">//先把左压入栈底</span></span><br><span class="line">            <span class="keyword">if</span>(node.left!=<span class="literal">null</span>)&#123;</span><br><span class="line">                stack.push(node.left);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(node.right!=<span class="literal">null</span>)&#123;</span><br><span class="line">                stack.push(node.right);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        Collections.reverse(result);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//中序遍历，访问顺序和，result处理顺序不一致，输出左中右，入栈，左右</span></span><br><span class="line"><span class="comment">//迭代，从头开始一直往左，经历了中和左，把所有左都压入栈；到头，为空，上一个元素，也就是存在栈顶部一个，左出栈，或者中出栈，看它右边有没有，先指针指向右边右压，有就重复步骤：压栈左深度遍历，没有就出栈栈顶，也就是更早之前来时的路。</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> List&lt;Integer&gt; <span class="title function_">inorderTraversal</span><span class="params">(TreeNode root)</span> &#123;</span><br><span class="line">        List&lt;Integer&gt; result = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Integer&gt;();</span><br><span class="line">        <span class="keyword">if</span>(root==<span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125;</span><br><span class="line">        Stack&lt;TreeNode&gt; stack = <span class="keyword">new</span> <span class="title class_">Stack</span>&lt;&gt;();</span><br><span class="line">        TreeNode cur=root;</span><br><span class="line">        <span class="keyword">while</span>(cur!=<span class="literal">null</span>||!stack.isEmpty())&#123;<span class="comment">//cur!=null负责左深度;isEmpty负责返回来时的路</span></span><br><span class="line">            <span class="comment">//不断往左子树方向走，每走一次就将当前节点保存到栈中</span></span><br><span class="line">			<span class="comment">//这是模拟递归的调用</span></span><br><span class="line">            <span class="keyword">if</span>(cur!=<span class="literal">null</span>)&#123;</span><br><span class="line">                stack.push(cur);</span><br><span class="line">                cur=cur.left;<span class="comment">//一动一次cur</span></span><br><span class="line">                <span class="comment">//当前节点为空，说明左边走到头了，从栈中弹出节点并保存</span></span><br><span class="line">			    <span class="comment">//然后转向右边节点，继续上面整个过程</span></span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                cur=stack.pop();<span class="comment">//第一次移动cur，回</span></span><br><span class="line">                result.add(cur.val);</span><br><span class="line">                cur=cur.right;<span class="comment">//第二次移动cur，右</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//从左深度走到了右深度</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="用标记的方法统一迭代"><a href="#用标记的方法统一迭代" class="headerlink" title="用标记的方法统一迭代"></a>用标记的方法统一迭代</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//标记迭代，统一写法,不好理解</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> List&lt;Integer&gt; <span class="title function_">inorderTraversal</span><span class="params">(TreeNode root)</span> &#123;</span><br><span class="line">        List&lt;Integer&gt; result=<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Integer&gt;();</span><br><span class="line">        Stack&lt;TreeNode&gt; stack=<span class="keyword">new</span> <span class="title class_">Stack</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span>(root!=<span class="literal">null</span>)stack.push(root);<span class="comment">//先让栈中有根再说，然后入栈访问，访问完了用null标记一下，出栈处理加到result里</span></span><br><span class="line">        <span class="keyword">while</span>(!stack.isEmpty())&#123;</span><br><span class="line">            <span class="comment">// 将该节点弹出，避免重复操作，下面再将右中左节点添加到栈中</span></span><br><span class="line">            <span class="comment">// 将空节点弹出</span></span><br><span class="line">            <span class="type">TreeNode</span> <span class="variable">node</span> <span class="operator">=</span> stack.pop();</span><br><span class="line">            <span class="keyword">if</span>(node!=<span class="literal">null</span>)&#123;<span class="comment">//未访问</span></span><br><span class="line">                <span class="comment">// 添加右节点（空节点不入栈）</span></span><br><span class="line">                <span class="keyword">if</span>(node.right!=<span class="literal">null</span>)stack.push(node.right);</span><br><span class="line">                <span class="comment">// 添加中节点</span></span><br><span class="line">                stack.push(node);<span class="comment">//已访问</span></span><br><span class="line">                <span class="comment">// 中节点访问过，但是还没有处理，加入空节点做为标记。</span></span><br><span class="line">                stack.push(<span class="literal">null</span>);<span class="comment">//给访问元素打上标记</span></span><br><span class="line">                 <span class="comment">// 添加左节点（空节点不入栈）</span></span><br><span class="line">                <span class="keyword">if</span>(node.left!=<span class="literal">null</span>)stack.push(node.left);<span class="comment">//出栈从左开始</span></span><br><span class="line">                <span class="comment">// 只有遇到空节点的时候，才将下一个节点放进结果集</span></span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;<span class="comment">//已访问出栈为空</span></span><br><span class="line">                <span class="comment">// 重新取出栈中元素</span></span><br><span class="line">                node=stack.pop();</span><br><span class="line">                <span class="comment">// 加入到结果集</span></span><br><span class="line">                result.add(node.val);<span class="comment">//出栈已访问元素，剩下的是其它或者未访问元素，下一轮pop直接访问</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//统一迭代前序遍历，书写，参考统一中序</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> List&lt;Integer&gt; <span class="title function_">preorderTraversal</span><span class="params">(TreeNode root)</span>&#123;</span><br><span class="line">        List&lt;Integer&gt; result=<span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;&gt;();<span class="comment">//用ArrayList还是LinkedList存没什么区别</span></span><br><span class="line">        Stack&lt;TreeNode&gt; stack=<span class="keyword">new</span> <span class="title class_">Stack</span>&lt;&gt;();</span><br><span class="line">        <span class="comment">//同意书写，先无脑压栈root，不需要判空</span></span><br><span class="line">        <span class="keyword">if</span>(root!=<span class="literal">null</span>)stack.push(root);</span><br><span class="line">        <span class="keyword">while</span>(!stack.isEmpty())&#123;</span><br><span class="line">            TreeNode node= stack.pop();</span><br><span class="line">            <span class="keyword">if</span>(node!=<span class="literal">null</span>)&#123;<span class="comment">//没遇上标记</span></span><br><span class="line">                <span class="comment">//前序遍历，中左右，右左中压栈,给中的（栈）上面打上标记</span></span><br><span class="line">                <span class="keyword">if</span>(node.right!=<span class="literal">null</span>)stack.push(node.right);</span><br><span class="line">                <span class="keyword">if</span>(node.left!=<span class="literal">null</span>)stack.push(node.left);</span><br><span class="line">                stack.push(node);</span><br><span class="line">                stack.push(<span class="literal">null</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                node=stack.pop();</span><br><span class="line">                result.add(node.val);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//统一书写后续递归，左右中，用中右左压栈</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> List&lt;Integer&gt; <span class="title function_">postorderTraversal</span><span class="params">(TreeNode root)</span>&#123;</span><br><span class="line">        List&lt;Integer&gt; result=<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        Stack&lt;TreeNode&gt; stack = <span class="keyword">new</span> <span class="title class_">Stack</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span>(root!=<span class="literal">null</span>)stack.push(root);</span><br><span class="line">        <span class="keyword">while</span>(!stack.isEmpty())&#123;</span><br><span class="line">            TreeNode node=stack.pop();</span><br><span class="line">            <span class="keyword">if</span>(node!=<span class="literal">null</span>)&#123;</span><br><span class="line">                stack.push(node);</span><br><span class="line">                stack.push(<span class="literal">null</span>);</span><br><span class="line">                <span class="keyword">if</span>(node.right!=<span class="literal">null</span>)stack.push(node.right);</span><br><span class="line">                <span class="keyword">if</span>(node.left!=<span class="literal">null</span>)stack.push(node.left);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                node=stack.pop();</span><br><span class="line">                result.add(node.val);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="102-二叉树的层序遍历"><a href="#102-二叉树的层序遍历" class="headerlink" title="102. 二叉树的层序遍历"></a><a href="https://leetcode-cn.com/problems/binary-tree-level-order-traversal/">102. 二叉树的层序遍历</a></h4><h4 id="BFS-模板"><a href="#BFS-模板" class="headerlink" title="BFS 模板"></a>BFS 模板</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="title function_">bfs</span><span class="params">(TreeNode root)</span> &#123;</span><br><span class="line">    Queue&lt;TreeNode&gt; queue = <span class="keyword">new</span> <span class="title class_">ArrayDeque</span>&lt;&gt;();<span class="comment">//ArrayDeque或者LinkedList</span></span><br><span class="line">    queue.add(root);</span><br><span class="line">    <span class="keyword">while</span> (!queue.isEmpty()) &#123;</span><br><span class="line">        <span class="type">TreeNode</span> <span class="variable">node</span> <span class="operator">=</span> queue.poll(); <span class="comment">//按需result.add</span></span><br><span class="line">        <span class="keyword">if</span> (node.left != <span class="literal">null</span>) &#123;</span><br><span class="line">            queue.add(node.left);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (node.right != <span class="literal">null</span>) &#123;</span><br><span class="line">            queue.add(node.right);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="DFS模板"><a href="#DFS模板" class="headerlink" title="DFS模板"></a>DFS模板</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="title function_">dfs</span><span class="params">(TreeNode root)</span> &#123;<span class="comment">//层次遍历中会用到deep</span></span><br><span class="line">    <span class="keyword">if</span> (root == <span class="literal">null</span>)<span class="keyword">return</span>;<span class="comment">//空处理，可以在外面</span></span><br><span class="line">    <span class="comment">//按需result.add</span></span><br><span class="line">    dfs(root.left);</span><br><span class="line">    dfs(root.right);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="深度优先遍历递归做层次遍历-模板"><a href="#深度优先遍历递归做层次遍历-模板" class="headerlink" title="深度优先遍历递归做层次遍历 模板"></a>深度优先遍历递归做层次遍历 模板</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>&#123;</span><br><span class="line">    <span class="comment">//[6][4,7][1,3,5,8]</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;List&lt;Integer&gt;&gt; result=<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;List&lt;Integer&gt;&gt;();<span class="comment">//全局变量，二维数组储存层次结果</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;List&lt;Integer&gt;&gt; <span class="title function_">levelOrder</span><span class="params">(TreeNode root)</span>&#123;<span class="comment">//定义层次遍历,这么写方便切换两种方法</span></span><br><span class="line">        <span class="comment">//迭代外判空</span></span><br><span class="line">        <span class="keyword">if</span>(root==<span class="literal">null</span>)<span class="keyword">return</span> result;</span><br><span class="line">        dfs(<span class="number">1</span>, root);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//DFS递归</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">dfs</span><span class="params">(Integer deep, TreeNode root)</span>&#123;<span class="comment">//deep:123,result:0123</span></span><br><span class="line">        <span class="keyword">if</span>(result.size()&lt;deep)&#123;<span class="comment">//</span></span><br><span class="line">            result.add(<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Integer&gt;());<span class="comment">//初始size=0,[null]-&gt;[null][null]</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//左深度</span></span><br><span class="line">        result.get(deep-<span class="number">1</span>).add(root.val);</span><br><span class="line">        <span class="comment">//deep从开始，result从0开始所以-1</span></span><br><span class="line">        <span class="comment">//[null]-&gt;[null,6][null],ArrayList,null不显示，这儿方便理解</span></span><br><span class="line">        <span class="keyword">if</span>(root.left!=<span class="literal">null</span>)dfs(deep+<span class="number">1</span>,root.left);</span><br><span class="line">        <span class="comment">//对6左：[n,6][n]-&gt;对4左：[n,6][n,4][n]-&gt;对1左：[n,6][n,4][n,1][n]-&gt;^-&gt;对1右-&gt;1结束</span></span><br><span class="line">        <span class="keyword">if</span>(root.right!=<span class="literal">null</span>)dfs(deep+<span class="number">1</span>,root.right);</span><br><span class="line">        <span class="comment">//对4右：[n,6][n,4][n,1][n]-&gt;对3左：[n,6][n,4][n,1,3][n]-&gt;对3右：^—&gt;3结束-&gt;4结束</span></span><br><span class="line">        <span class="comment">//对6右：[n,6][n,4,7][n,1,3][n]-&gt;对7左：[n,6][n,4,7][n,1,3,5][n]-&gt;对5左^-&gt;对5右^-&gt;5结束-&gt;对7右：[n,6][n,4,7][n,1,3,5,8][n]-&gt;^^,结束876</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="广度优先遍历递归做层次遍历，队列"><a href="#广度优先遍历递归做层次遍历，队列" class="headerlink" title="广度优先遍历递归做层次遍历，队列"></a>广度优先遍历递归做层次遍历，队列</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//BFS很简单，借用队列就好了</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> List&lt;List&lt;Integer&gt;&gt; result=<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;List&lt;Integer&gt;&gt;();</span><br><span class="line">    <span class="keyword">public</span> List&lt;List&lt;Integer&gt;&gt; <span class="title function_">levelOrder</span><span class="params">(TreeNode root)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(root==<span class="literal">null</span>)<span class="keyword">return</span> result;</span><br><span class="line">        bfs(root);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">bfs</span><span class="params">(TreeNode root)</span>&#123;</span><br><span class="line">        Queue&lt;TreeNode&gt; queue=<span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;&gt;();<span class="comment">//queue一维，result二维       </span></span><br><span class="line">        queue.add(root);</span><br><span class="line">        <span class="keyword">while</span>(!queue.isEmpty())&#123;</span><br><span class="line">            List&lt;Integer&gt; itemList=<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Integer&gt;();        </span><br><span class="line">            <span class="type">int</span> len=queue.size();</span><br><span class="line">            <span class="comment">//将队列中现存的元素都拿出来(也就是获取这一层的节点)，放到临时list中；同时BFS</span></span><br><span class="line">            <span class="keyword">while</span>(len&gt;<span class="number">0</span>)&#123;<span class="comment">//不断遍历队列</span></span><br><span class="line">                TreeNode node=queue.poll();</span><br><span class="line">                itemList.add(node.val);</span><br><span class="line">                <span class="keyword">if</span>(node.left!=<span class="literal">null</span>)queue.add(node.left);</span><br><span class="line">                <span class="keyword">if</span>(node.right!=<span class="literal">null</span>)queue.add(node.right);</span><br><span class="line">                len--;</span><br><span class="line">            &#125;</span><br><span class="line">            result.add(itemList);</span><br><span class="line">            <span class="comment">//将临时list加入最终返回结果中</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="107-二叉树的层序遍历-II"><a href="#107-二叉树的层序遍历-II" class="headerlink" title="107. 二叉树的层序遍历 II"></a><a href="https://leetcode-cn.com/problems/binary-tree-level-order-traversal-ii/">107. 二叉树的层序遍历 II</a></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * public class TreeNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     TreeNode left;</span></span><br><span class="line"><span class="comment"> *     TreeNode right;</span></span><br><span class="line"><span class="comment"> *     TreeNode() &#123;&#125;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int val) &#123; this.val = val; &#125;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int val, TreeNode left, TreeNode right) &#123;</span></span><br><span class="line"><span class="comment"> *         this.val = val;</span></span><br><span class="line"><span class="comment"> *         this.left = left;</span></span><br><span class="line"><span class="comment"> *         this.right = right;</span></span><br><span class="line"><span class="comment"> *     &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> <span class="comment">//bfs</span></span><br><span class="line"> <span class="comment">/*</span></span><br><span class="line"><span class="comment">class Solution &#123;</span></span><br><span class="line"><span class="comment">    public List&lt;List&lt;Integer&gt;&gt; result=new ArrayList&lt;&gt;();</span></span><br><span class="line"><span class="comment">    public List&lt;List&lt;Integer&gt;&gt; levelOrderBottom(TreeNode root) &#123;</span></span><br><span class="line"><span class="comment">        if(root==null)return result;</span></span><br><span class="line"><span class="comment">        bfs(root);</span></span><br><span class="line"><span class="comment">        return result;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    private void bfs(TreeNode root)&#123;</span></span><br><span class="line"><span class="comment">        Queue&lt;TreeNode&gt; queue=new LinkedList&lt;&gt;();</span></span><br><span class="line"><span class="comment">        List&lt;List&lt;Integer&gt;&gt; assList=new ArrayList&lt;&gt;();</span></span><br><span class="line"><span class="comment">        queue.add(root);</span></span><br><span class="line"><span class="comment">        while(!queue.isEmpty())&#123;</span></span><br><span class="line"><span class="comment">            //需要临时小列表一段一段存</span></span><br><span class="line"><span class="comment">            //len到头了new</span></span><br><span class="line"><span class="comment">            List&lt;Integer&gt; itemList=new ArrayList&lt;&gt;();</span></span><br><span class="line"><span class="comment">            int len=queue.size();</span></span><br><span class="line"><span class="comment">            while(len&gt;0)&#123;</span></span><br><span class="line"><span class="comment">                //每次出队列所有父类节点，上一层结点，入队下一层孩子节点，结束while，line=0</span></span><br><span class="line"><span class="comment">                TreeNode node=queue.poll();</span></span><br><span class="line"><span class="comment">                if(node.left!=null)queue.add(node.left);</span></span><br><span class="line"><span class="comment">                if(node.right!=null)queue.add(node.right);</span></span><br><span class="line"><span class="comment">                itemList.add(node.val);</span></span><br><span class="line"><span class="comment">                len--;</span></span><br><span class="line"><span class="comment">            &#125; </span></span><br><span class="line"><span class="comment">            assList.add(itemList);//辅助list</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">        for(int i=assList.size()-1;i&gt;=0;i--)&#123;//反转</span></span><br><span class="line"><span class="comment">            result.add(assList.get(i));</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">&#125;*/</span></span><br><span class="line"><span class="comment">//dfs</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> List&lt;List&lt;Integer&gt;&gt; result=<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">public</span> List&lt;List&lt;Integer&gt;&gt; <span class="title function_">levelOrderBottom</span><span class="params">(TreeNode root)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(root==<span class="literal">null</span>)<span class="keyword">return</span> result;</span><br><span class="line">        dfs(<span class="number">1</span>,root);</span><br><span class="line">        Collections.reverse(result);<span class="comment">//反转，理解一下</span></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">dfs</span><span class="params">(Integer deep,TreeNode root)</span>&#123;</span><br><span class="line">        <span class="comment">//先判断有处放吗</span></span><br><span class="line">        <span class="keyword">if</span>(result.size()&lt;deep)&#123;</span><br><span class="line">            result.add(<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Integer&gt;());</span><br><span class="line">        &#125;</span><br><span class="line">        result.get(deep-<span class="number">1</span>).add(root.val);</span><br><span class="line">        <span class="keyword">if</span>(root.left!=<span class="literal">null</span>)dfs(deep+<span class="number">1</span>,root.left);</span><br><span class="line">        <span class="keyword">if</span>(root.right!=<span class="literal">null</span>)dfs(deep+<span class="number">1</span>,root.right);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>Collections.reverse()</code> <code>Collections.swap()</code></p>
<h4 id="199-二叉树的右视图"><a href="#199-二叉树的右视图" class="headerlink" title="199. 二叉树的右视图"></a><a href="https://leetcode-cn.com/problems/binary-tree-right-side-view/">199. 二叉树的右视图</a></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"> <span class="comment">//层次遍历，原本是所有都加入到itemList，现在只需要把每行最后一个加到result中就可以,一维,bfs</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> List&lt;Integer&gt; <span class="title function_">rightSideView</span><span class="params">(TreeNode root)</span> &#123;</span><br><span class="line">        List&lt;Integer&gt; result=<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        Queue&lt;TreeNode&gt; queue=<span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span>(root==<span class="literal">null</span>)<span class="keyword">return</span> result;</span><br><span class="line">        queue.add(root);</span><br><span class="line">        <span class="keyword">while</span>(!queue.isEmpty())&#123;</span><br><span class="line">            <span class="type">int</span> len=queue.size();</span><br><span class="line">            <span class="keyword">while</span>(len&gt;<span class="number">0</span>)&#123;<span class="comment">//继续分层，因为只需要最后一个</span></span><br><span class="line">                TreeNode node=queue.poll();</span><br><span class="line">                <span class="keyword">if</span>(node.left!=<span class="literal">null</span>)queue.add(node.left);</span><br><span class="line">                <span class="keyword">if</span>(node.right!=<span class="literal">null</span>)queue.add(node.right);</span><br><span class="line">                len--;</span><br><span class="line">                <span class="keyword">if</span>(len==<span class="number">0</span>)result.add(node.val);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="637-二叉树的层平均值"><a href="#637-二叉树的层平均值" class="headerlink" title="637. 二叉树的层平均值"></a><a href="https://leetcode-cn.com/problems/average-of-levels-in-binary-tree/">637. 二叉树的层平均值</a></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> List&lt;Double&gt; <span class="title function_">averageOfLevels</span><span class="params">(TreeNode root)</span> &#123;</span><br><span class="line">        Queue&lt;TreeNode&gt; queue = <span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;&gt;();</span><br><span class="line">        List&lt;Double&gt; result = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span>(root==<span class="literal">null</span>)<span class="keyword">return</span> result;</span><br><span class="line">        <span class="comment">//bfs</span></span><br><span class="line">        queue.add(root);</span><br><span class="line">        <span class="keyword">while</span>(!queue.isEmpty())&#123;</span><br><span class="line">            <span class="type">int</span> length=queue.size();<span class="comment">//需要记录一下</span></span><br><span class="line">            <span class="type">int</span> len=length;</span><br><span class="line">            Double sum=<span class="number">0.0</span>;</span><br><span class="line">            <span class="keyword">while</span>(len&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                TreeNode node=queue.poll();</span><br><span class="line">                <span class="keyword">if</span>(node.left!=<span class="literal">null</span>)queue.add(node.left);</span><br><span class="line">                <span class="keyword">if</span>(node.right!=<span class="literal">null</span>)queue.add(node.right);</span><br><span class="line">                sum+=node.val;</span><br><span class="line">                len--;</span><br><span class="line">            &#125;</span><br><span class="line">            result.add(sum/length);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="429-N-叉树的层序遍历"><a href="#429-N-叉树的层序遍历" class="headerlink" title="429. N 叉树的层序遍历"></a><a href="https://leetcode-cn.com/problems/n-ary-tree-level-order-traversal/">429. N 叉树的层序遍历</a></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//ERROR调不明白</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> List&lt;List&lt;Integer&gt;&gt; <span class="title function_">levelOrder</span><span class="params">(Node root)</span> &#123;</span><br><span class="line">        List&lt;List&lt;Integer&gt;&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        Deque&lt;Node&gt; que = <span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> list;</span><br><span class="line">        &#125;</span><br><span class="line">        que.offerLast(root);</span><br><span class="line">        <span class="keyword">while</span> (!que.isEmpty()) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">levelSize</span> <span class="operator">=</span> que.size();</span><br><span class="line">            List&lt;Integer&gt; levelList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; levelSize; i++) &#123;</span><br><span class="line">                <span class="type">Node</span> <span class="variable">poll</span> <span class="operator">=</span> que.pollFirst();</span><br><span class="line">                levelList.add(poll.val);</span><br><span class="line">                List&lt;Node&gt; children = poll.children;</span><br><span class="line">                <span class="keyword">if</span> (children == <span class="literal">null</span> || children.size() == <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">for</span> (Node child : children) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (child != <span class="literal">null</span>) &#123;</span><br><span class="line">                        que.offerLast(child);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            list.add(levelList);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="515-在每个树行中找最大值"><a href="#515-在每个树行中找最大值" class="headerlink" title="515. 在每个树行中找最大值"></a><a href="https://leetcode-cn.com/problems/find-largest-value-in-each-tree-row/">515. 在每个树行中找最大值</a></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> List&lt;Integer&gt; <span class="title function_">largestValues</span><span class="params">(TreeNode root)</span> &#123;</span><br><span class="line">        List&lt;Integer&gt; result = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span>(root==<span class="literal">null</span>)<span class="keyword">return</span> result;</span><br><span class="line">        <span class="comment">//bfs</span></span><br><span class="line">        Queue&lt;TreeNode&gt; queue = <span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;&gt;();</span><br><span class="line">        queue.add(root);</span><br><span class="line">        <span class="keyword">while</span>(!queue.isEmpty())&#123;</span><br><span class="line">            <span class="type">int</span> len=queue.size();</span><br><span class="line">            <span class="type">int</span> max=queue.peek().val;<span class="comment">//有可能是负值</span></span><br><span class="line">            <span class="keyword">while</span>(len&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="type">TreeNode</span> <span class="variable">node</span> <span class="operator">=</span> queue.poll();</span><br><span class="line">                <span class="keyword">if</span>(node.left!=<span class="literal">null</span>)queue.add(node.left);</span><br><span class="line">                <span class="keyword">if</span>(node.right!=<span class="literal">null</span>)queue.add(node.right);</span><br><span class="line">                max= max &lt; node.val ? node.val : max;</span><br><span class="line">                len--;</span><br><span class="line">            &#125;</span><br><span class="line">            result.add(max);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="116-填充每个节点的下一个右侧节点指针"><a href="#116-填充每个节点的下一个右侧节点指针" class="headerlink" title="116. 填充每个节点的下一个右侧节点指针"></a><a href="https://leetcode-cn.com/problems/populating-next-right-pointers-in-each-node/">116. 填充每个节点的下一个右侧节点指针</a></h4><h4 id="117-填充每个节点的下一个右侧节点指针-II"><a href="#117-填充每个节点的下一个右侧节点指针-II" class="headerlink" title="117. 填充每个节点的下一个右侧节点指针 II"></a><a href="https://leetcode-cn.com/problems/populating-next-right-pointers-in-each-node-ii/">117. 填充每个节点的下一个右侧节点指针 II</a></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> Node <span class="title function_">connect</span><span class="params">(Node root)</span> &#123;</span><br><span class="line">        LinkedList&lt;Node&gt; queue = <span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;&gt;();<span class="comment">//定义为LinkedList就可以使用get了！</span></span><br><span class="line">        <span class="keyword">if</span>(root==<span class="literal">null</span>)<span class="keyword">return</span> root;</span><br><span class="line">        queue.add(root);</span><br><span class="line">        <span class="keyword">while</span>(!queue.isEmpty())&#123;</span><br><span class="line">            <span class="type">int</span> len=queue.size();<span class="comment">//遍历小层</span></span><br><span class="line">            <span class="comment">//返回root，不是结构化的list&lt;list&lt;&gt;&gt;</span></span><br><span class="line">            <span class="comment">//先连起来next</span></span><br><span class="line">            <span class="comment">//connect,建立在层次队列的基础上</span></span><br><span class="line">            Node node=queue.peek();</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;len;i++)&#123;</span><br><span class="line">                node.next=queue.get(i);</span><br><span class="line">                node=queue.get(i);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//bfs</span></span><br><span class="line">            <span class="keyword">while</span>(len&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                node=queue.poll();</span><br><span class="line">                <span class="keyword">if</span> (node.left != <span class="literal">null</span>) queue.add(node.left);</span><br><span class="line">                <span class="keyword">if</span> (node.right != <span class="literal">null</span>) queue.add(node.right);</span><br><span class="line">                  len--;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">return</span> root;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="104-二叉树的最大深度"><a href="#104-二叉树的最大深度" class="headerlink" title="104. 二叉树的最大深度"></a><a href="https://leetcode-cn.com/problems/maximum-depth-of-binary-tree/">104. 二叉树的最大深度</a></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//层次遍历试试看有几层</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">maxDepth</span><span class="params">(TreeNode root)</span> &#123;</span><br><span class="line">        Queue&lt;TreeNode&gt; queue= <span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;&gt;();</span><br><span class="line">        <span class="type">int</span> <span class="variable">deep</span> <span class="operator">=</span><span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(root==<span class="literal">null</span>)<span class="keyword">return</span> deep;</span><br><span class="line">        <span class="comment">//BFS</span></span><br><span class="line">        queue.add(root);</span><br><span class="line">        <span class="keyword">while</span>(!queue.isEmpty())&#123;</span><br><span class="line">            <span class="type">int</span> len=queue.size();</span><br><span class="line">            <span class="keyword">while</span>(len&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="type">TreeNode</span> <span class="variable">node</span> <span class="operator">=</span> queue.poll();</span><br><span class="line">                <span class="keyword">if</span>(node.left!=<span class="literal">null</span>)queue.add(node.left);</span><br><span class="line">                <span class="keyword">if</span>(node.right!=<span class="literal">null</span>)queue.add(node.right);</span><br><span class="line">                len--;</span><br><span class="line">            &#125;</span><br><span class="line">            deep++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> deep;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="111-二叉树的最小深度"><a href="#111-二叉树的最小深度" class="headerlink" title="111. 二叉树的最小深度"></a><a href="https://leetcode-cn.com/problems/minimum-depth-of-binary-tree/">111. 二叉树的最小深度</a></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"> <span class="comment">//层次遍历，最先遍历到左右孩子都为空时候，最小深度</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">minDepth</span><span class="params">(TreeNode root)</span> &#123;</span><br><span class="line">        Queue&lt;TreeNode&gt; queue = <span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;&gt;();</span><br><span class="line">        <span class="type">int</span> deep=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(root==<span class="literal">null</span>)<span class="keyword">return</span> deep;</span><br><span class="line">        queue.add(root);</span><br><span class="line">        <span class="keyword">while</span>(!queue.isEmpty())&#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> queue.size();</span><br><span class="line">            deep++;</span><br><span class="line">            <span class="keyword">while</span>(len&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="type">TreeNode</span> <span class="variable">node</span> <span class="operator">=</span> queue.poll();</span><br><span class="line">                <span class="keyword">if</span>(node.left!=<span class="literal">null</span>)queue.add(node.left);</span><br><span class="line">                <span class="keyword">if</span>(node.right!=<span class="literal">null</span>)queue.add(node.right);</span><br><span class="line">                <span class="keyword">if</span>(node.left==<span class="literal">null</span>&amp;&amp;node.right==<span class="literal">null</span>)<span class="keyword">return</span> deep;</span><br><span class="line">                len--;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> deep;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="226-翻转二叉树"><a href="#226-翻转二叉树" class="headerlink" title="226. 翻转二叉树"></a><a href="https://leetcode-cn.com/problems/invert-binary-tree/">226. 翻转二叉树</a></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//DFS递归</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> TreeNode <span class="title function_">invertTree</span><span class="params">(TreeNode root)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(root==<span class="literal">null</span>)<span class="keyword">return</span> root;<span class="literal">null</span>也不影响递归</span><br><span class="line">        swapChild(root);<span class="comment">//java 中swap不能交换指针</span></span><br><span class="line">        <span class="comment">//位于前序后续都可以，中序不行，会重复遍历</span></span><br><span class="line">        invertTree(root.left);</span><br><span class="line">        invertTree(root.right);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> root;<span class="comment">//主要是为了最后一次有返回值</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">swapChild</span><span class="params">(TreeNode node)</span>&#123;</span><br><span class="line">        TreeNode temp=node.left;</span><br><span class="line">        node.left=node.right;</span><br><span class="line">        node.right=temp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;*/</span><br><span class="line"><span class="comment">//BFS</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> TreeNode <span class="title function_">invertTree</span><span class="params">(TreeNode root)</span> &#123;</span><br><span class="line">        Queue&lt;TreeNode&gt; queue=<span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span>(root==<span class="literal">null</span>)<span class="keyword">return</span> root;</span><br><span class="line">        queue.add(root);</span><br><span class="line">        <span class="keyword">while</span>(!queue.isEmpty())&#123;</span><br><span class="line">            <span class="type">int</span> len=queue.size();</span><br><span class="line">            <span class="keyword">while</span>(len&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                TreeNode node=queue.poll();</span><br><span class="line">                swapChild(node);</span><br><span class="line">                <span class="keyword">if</span>(node.left!=<span class="literal">null</span>)queue.add(node.left);</span><br><span class="line">                <span class="keyword">if</span>(node.right!=<span class="literal">null</span>)queue.add(node.right);</span><br><span class="line">                len--;</span><br><span class="line">            &#125;    </span><br><span class="line">        &#125;   </span><br><span class="line">        <span class="keyword">return</span> root;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">swapChild</span><span class="params">(TreeNode node)</span>&#123;</span><br><span class="line">        TreeNode temp=node.left;</span><br><span class="line">        node.left=node.right;</span><br><span class="line">        node.right=temp;</span><br><span class="line">    &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>



<h2 id="12-10大排序算法"><a href="#12-10大排序算法" class="headerlink" title="12 10大排序算法"></a>12 10大排序算法</h2><h2 id="-1"><a href="#-1" class="headerlink" title=""></a></h2>]]></content>
      <categories>
        <category>java</category>
      </categories>
  </entry>
  <entry>
    <title>《海边的卡夫卡》随笔</title>
    <url>/2022/04/05/Kafka-by-the-Sea/</url>
    <content><![CDATA[<p>读村上春树有个好玩的点，这也是之前听方所杨照先生讲座启发的，就是书中隐藏着各种下一步做什么的“指示”,比如找来杨纳切克的<em>sinfonietta</em>来听吧（出自《1Q84》开头）。</p>
<span id="more"></span>

<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=298 height=52 src="//music.163.com/outchain/player?type=2&id=1384830266&auto=0&height=32"></iframe>

<p>或者去看看《浮士德》吧（来自于《多崎作和他的巡礼之年》的隐喻），我记得大二看挪威的森林不自觉买了甲壳虫的那张专辑<a href="https://music.163.com/album?id=438028">Rubber Soul (Remastered)</a>（无vip<a href="https://music.163.com/album?id=92593453">Rubber Soul</a>）。这是一种奇特的阅读体验，不是一行一行读过去，而是读一阵发现一个宝藏。之前有过这种体验的还是读《红楼梦》的时候。所以第一遍看故事情节，主线，第二遍我就停留下来看看这些橱窗里面都有些什么好东西。</p>
<p>卡夫卡这个长篇小说，第一次读，印象深刻的有杀猫者，肯德基老爷爷拉皮条，俄狄浦斯情结的隐喻，再次读深深感受到了责任这一主题：人要为自己负责。</p>
<p>在所涵盖的知识量上，<a href="https://www.baidu.com/link?url=6Qg-Fnq3MCwiuQit2dkvbOyqiz6N036obbaB89bdce3xJOYKtq9dfGGWnLQ826_a33xi9W2N-lbPcTrhwp5nEK&wd=&eqid=bb4ff91d0003c9ed00000003624d5df9"><em>《海边的卡夫卡》</em></a>应该算长篇小说中最纷繁复杂的橱窗了。</p>
<h2 id="村上春树的创作背景"><a href="#村上春树的创作背景" class="headerlink" title="村上春树的创作背景"></a>村上春树的创作背景</h2><p>自1955年起，日本发生了两起安保斗争，第一起发生在安保条约签订时，第二起发生在安保条约到期是否要续约时。这里提一下安保条约，简单来说，就是由美国负责保护日本的国土安全，<strong>日本同意永久解除武装</strong>。安保条约是很多战后日本年轻人难以接受的现实，因为战后日本经济复苏，拥有了比以前更加强大的国家自信，日本年轻人都期盼着国家的独立，摆脱美国的约束。</p>
<p>矛盾的是，日本青年的抗争需要从欧美社会那里获取精神资源，所以日本青年很分裂，一方面热切拥抱美国，学习美国，另一方面用学习来的反抗精神反抗美国。这种抗争不单单是对外，还有自我怀疑，自我抗争的部分。</p>
<p>村上春树进早稻田大学戏剧系没多久，安保斗争就在校园大面积爆发了。村上在现场经历了一切，但是他没参与。因此，首先他见过大场面，体会过革命的轰轰烈烈；同时他又是局外人，因此他能很快看出、承认革命的徒劳无功。由于这一场革命的关系，村上春树始终对日本人抱着一股疏离感，上面这个背景贯穿了他所有小说的主题。</p>
<p><img src="https://cdn.jsdelivr.net/gh/Kasahara-MAY/MarkdownPicture/img/202204052236645.jpeg" alt="img"></p>
<h2 id="村上小说的主题"><a href="#村上小说的主题" class="headerlink" title="村上小说的主题"></a>村上小说的主题</h2><h3 id="人与自由的关系"><a href="#人与自由的关系" class="headerlink" title="人与自由的关系"></a>人与自由的关系</h3><p>拥有自由之后并不是那么容易，相反情况会更复杂。村上在小说《电视人》和《国境以南，太阳以西》都曾探讨过人被解开束缚后会变成什么。</p>
<p>两个模范生恋爱了，笨拙得亲吻，爱抚。女生却一直坚信，只有结婚才可献出处子之身。</p>
<blockquote>
<p>然而，她却站在完全不同的观点来看待这件事。她咬住嘴唇，轻轻地摇摇头。“我非常喜欢你。可是，我想保持处女之身，直到结婚为止。“她以十分平静的语气 说。然后，不论他再怎么说话，极力说服她，她都不为所动。“我很爱你，非常地爱你！可是，那个和这个完全是两回事。对我而言，这是早就决定好的。我觉得很抱歉，但是，请你忍耐。如果你真心爱我，应该可以忍耐吧！</p>
<p>……</p>
</blockquote>
<p>他们后来都读了很好的大学，男生在东京，女生在神户，男孩再一次提出性需求，女孩再一次拒绝，她甚至说自己如果结婚了就可以做爱了，请等到那时候。</p>
<blockquote>
<p>等她终于止住哭泣之后，她说了一段很奇怪的话。</p>
<p>“嗳，如果……，我是说如果我和你分丰了，我还是会永远记得你。真的！我绝对不会忘了你！我真的好爱你！你是我第一个爱上的人，而且，只要和你在一起，我 就觉得很快乐。希望一你了解这一点。可是，那个和这个是两回事。如果你希望我保证对你的爱，那我们就在此约定。我会和你上床。不过，现在还不行。等我和某 人结婚以后，我再和你上床。我不骗你！我保证！”</p>
<p>……</p>
</blockquote>
<p>他们真的分手了，女孩后来和别人结婚了，有一天她给男孩打电话，男孩知道女孩的意思，犹豫了一下便去了，但是现实是两个人并没有做爱，互相爱抚和以前一样，两个人都觉得这是最好的方式。结束后各自说了再见，确实是最后一面了。男人出门找了妓女，这是他第一次招妓。</p>
<p>处女身体是女孩自己无法打破的框架，限制了她的自由，60年的日本还是相对保守的，打破处女框架的办法只有结婚，所以她觉得自己的自由只有结婚后才能获得。她结婚后，这种自由终于来了，但小说讲的是没有了框架，没有了处女之身的限制，比在框架之内想象自由的情况要复杂得多。缺乏自由的时候想象自由是相对简单的，毕竟很清楚当下的匮乏，但真的有了自由情况就复杂，困难了。女孩结婚，婚姻何尝又不是一种新的框架呢，婚姻生活，家庭生活的框架只能更复杂更紧密。</p>
<p>难过的事实就是，自由来了，人却没办法拿到自己原来想要的东西，因为不想要了。不过这也没什么可难过的吧，顶多是遗憾，真到那时候，之前想要的东西也就不重要了，就是说那种觉得做到什么什么，获得自由之后我就解脱了，轻松了之类的想法还是不要有的好，自由来临的那一刻，自己亲身经历的，感受过的回忆说不定更重要呢。毕竟那是自己最熟悉的，真切的，无可取代的。</p>
<p>村上的小说也一直在问：人打破了约束自己的框架，会做些什么？</p>
<h3 id="人与人之间的疏离"><a href="#人与人之间的疏离" class="headerlink" title="人与人之间的疏离"></a>人与人之间的疏离</h3><p>莫名奇妙是村上小说里面一个很直观的感觉，《寻羊冒险记》里，那个”羊男“让人摸不着头脑，它到底是”羊“还是”男“完全搞不清楚。但是主人公好像完全不在意，简简单单把这玩意当作现实接受下来了，作者的描写让我感觉男主不过是看见了桌上的一个苹果一样稀松平常。</p>
<img src="https://cdn.jsdelivr.net/gh/Kasahara-MAY/MarkdownPicture/img/202204052235181.webp" alt="img" style="zoom:50%;" />

<p>其实这也是村上创造的角色的魅力，对莫名其妙的事情容忍度出奇得高。这种感觉和我看《局外人》相似，默尔索是一个只看现象的人，对莫名其妙得现象既不惊讶，也不追问。对别人一点也不好奇，算某种程度的选择了和别人疏离吧，说来惭愧，我目前的状态或多或少就是这样，我觉得自己连自己都搞不明白，在不了解自己的情况下，对别人的好奇心真的很少。我之前看豆瓣上《局外人》的书评，很多人认为默尔索很麻木，我对这么麻木讨厌不起来，甚至村上笔下这种麻木可爱起来了。说到这想到个事，大学时候，我可爱的室友总喜欢逗我，比如对着我唱情歌，我大部分时间总说：好的，我知道了。舍友就会哈哈大笑。还有一次，我穿了很日系风的JK服，舍友说很少见我打扮这么可爱，我几乎脱口而出：我也很少见。大抵就是这种可爱的麻木吧。</p>
<p>说起这么麻木，我还想到爸爸了，他比我有着更强壮的神经，面对这个世界时，比我有着更大的包容力。我几乎很少看他露出惊讶的样子，他也不一定会去探究我觉得莫名其妙的东西。</p>
<h3 id="两个世界并行交错"><a href="#两个世界并行交错" class="headerlink" title="两个世界并行交错"></a>两个世界并行交错</h3><p>从《世界尽头与冷酷仙境》的目录可以一瞥，世界尽头和冷酷仙境两个世界各占一章，互相交织。还有《海边的卡夫卡》中那个在森林中走着走着进到了二战老兵的世界。每当现实性的东西开始摇摆，世界就要变动了，除了《挪威的森林》，几乎所有的长篇都描写了不止一个世界。</p>
<blockquote>
<p><strong>目录</strong></p>
<ol>
<li>冷酷仙境电梯、无声、肥胖</li>
<li>世界尽头金毛兽</li>
<li>冷酷仙境雨衣、夜鬼、分类运算</li>
<li>世界尽头图书馆</li>
<li>冷酷仙境计算、进化、性欲</li>
<li>世界尽头影子</li>
<li>冷酷仙境头骨、劳伦·巴考尔、图书馆</li>
<li>世界尽头大校</li>
<li>冷酷仙境食欲、失意、列宁格勒</li>
<li>世界尽头围墙</li>
<li>冷酷仙境穿衣、西瓜、混沌</li>
<li>世界尽头世界尽头的地图</li>
<li>冷酷仙境法兰克福、门、独立组织</li>
<li>世界尽头森林</li>
</ol>
</blockquote>
<p>这三个特点特别完美涵盖了村上的所有小说，能总结得如此精炼也很感谢发条鸟文艺沙龙里面小伙伴的观点，基本上所有小说都是这三个特点的自由组合。</p>
<h2 id="逛《海边的卡夫卡》里面的橱窗"><a href="#逛《海边的卡夫卡》里面的橱窗" class="headerlink" title="逛《海边的卡夫卡》里面的橱窗"></a>逛《海边的卡夫卡》里面的橱窗</h2><p>村上春树写小说很会藏典故，但是我对美国文学了解很少，就看过《漫长的告别》和《了不起的盖茨比》，所以兴趣来了我会自己去研究研究他里面所谓的典故，当然，这很费时间。</p>
<h3 id="俄狄浦斯王"><a href="#俄狄浦斯王" class="headerlink" title="俄狄浦斯王"></a>俄狄浦斯王</h3><p>俄狄浦斯王讲了一个弑父娶母的故事，故事里每个人都在想方设法得逃脱自己的命运，结果却是被完完全全拉进命运里了。《海边的卡夫卡》中的少年田村卡夫卡也被下了弑父娶母的诅咒，但是一开始村上的态度就和俄狄浦斯王截然相反：</p>
<blockquote>
<p>有时候所谓命运这东西，就像不断改变前进方向的区域沙尘暴一样。你想要避开他而改变脚步，结果，风暴也好像配合你似的改变脚步。你再次改变脚步，于是风暴也同样再度改变脚步。好几次好几次，简直像黎明前和死神所跳的不祥舞步一样，不断的重复又重复。你要问为什么？因为那风暴并不是从远方吹来的和你无关的什么，换句话说那就是你自己。那就是你心中的什么。所以说你能够做的就是放弃挣扎，往那风暴中笔直地踏步走进去，把眼睛和鼻子严严实实得遮住不让风暴进去，一步一步穿过去就可以了。那里面可能既没有太阳，也没有月亮，更没有方向。有时甚至连正常的时间也没有，那里只有如同粉碎得骨头般细细得白沙在高空中飞舞。要想象这样的风暴。</p>
</blockquote>
<p>这个其实很好理解了，村上的意思是俄狄浦斯王里面的大家都在逃避自己的命运，直面命运，直面恐惧，才有可能摆脱命运的控制。人的有意识得活着和无意识得活着是两种不同得状态，即便从客观来看结果都差不多，明知有悲惨结局，还是坚持对抗，终于走入悲惨结局，这种态度的核心观点是人要为自己负责。一个抗拒命运的人，即便失败，也是为自己做了决定，为自己的决定负责。</p>
<p>另外关于俄狄浦斯王，村上春树在对应的田村卡夫卡那里写了他和自己母亲的关系，卡夫卡对母亲的抛弃一直质问，悲哀。俄狄浦斯其实也是同样的经历，刚生下的小孩脚被打了钉子送走了，俄狄浦斯之后刺瞎双眼自我放逐是否也有过对父母的不甘呢。</p>
<h3 id="卡夫卡"><a href="#卡夫卡" class="headerlink" title="卡夫卡"></a>卡夫卡</h3><p>小说里，在田村卡夫卡和大岛的眼中，卡夫卡最负盛名的小说是《在流放地》。</p>
<hr>
<p>Sherry</p>
<p>2022-4-5</p>
]]></content>
      <categories>
        <category>Sherry</category>
      </categories>
  </entry>
  <entry>
    <title>读读纪伯伦的小诗吧</title>
    <url>/2021/09/10/Kahlil-Gibran/</url>
    <content><![CDATA[<h2 id="论孩子"><a href="#论孩子" class="headerlink" title="论孩子"></a>论孩子</h2><p>一位怀抱婴儿的妇女说：请给我们谈谈孩子吧。<br>穆斯塔法说：<br>你们的孩子并不是你们的，<br>而是“生命”对自身的渴望所生的儿女。<br>他们借你们来到世上，却并非来自你们，<br>他们虽与你们一起生活，却并不属于你们。</p>
<span id="more"></span>

<hr>
<p>你们可把爱给予他们，却不能给予他们思想。<br>因为他们有他们的思想。<br>你们能够庇护他们的身体，却不能庇护他们的灵魂。<br>因为他们的灵魂居于明日的华屋，那是你们无法相见的，即使在梦中。<br>你们可以努力以求像他们，但不要试图让他们像你们。<br>因为生命不能退步，它不可能滞留在昨天。<br>你们是弓，你们的孩子则是从你们的弓弦上射出的实箭。<br>射手看见竖立在无尽头路上的目标，<br>他会用自己的神力将你们的弓引满，以便让他的箭快速射至最远。<br>就让你们的弓在射手的手中甘愿曲弯；<br>因为他既爱那飞快的箭，也爱那静止的弓。</p>
<p>摘自：《先知》 — [黎巴嫩] 纪伯伦</p>
<hr>
<p>2021&#x2F;9&#x2F;10</p>
]]></content>
      <categories>
        <category>生活和诗歌</category>
      </categories>
  </entry>
  <entry>
    <title>永远的赤名莉香</title>
    <url>/2022/04/22/LI-Xiang/</url>
    <content><![CDATA[<p>差不多花了一周多的时间把《东京爱情故事》看完了，好喜欢赤名莉香啊。以至于我对其他角色的印象都变浅了，莉香这样的角色怕是很难超越，现在国内的舆论环境也应该拍不出如此有魅力的角色了。</p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202204220939957.png" alt="1650591193680"></p>
<span id="more"></span>

<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=298 height=52 src="//music.163.com/outchain/player?type=2&id=486806&auto=0&height=32"></iframe>

<h2 id="我喜欢莉香"><a href="#我喜欢莉香" class="headerlink" title="我喜欢莉香"></a>我喜欢莉香</h2><p>电视剧一开始我就被莉香吸引了，当时丸子刚从乡下来到东京，忐忑不安，不知道明天会发生什么，莉香当时告诉他：“正因为不知道明天会发生什么，才有意思不是吗?”我一下子就被这个充满热情的女孩吸引了，那种从骨子里生发的自信与活力是我特别喜欢的。</p>
<p>她会蹦蹦跳跳在街上把鞋子扔到树上占卜天气，然后撒娇求丸子帮她拿下来。当丸子问她那个大包包里面装了什么时，她会笑着说：”爱和希望！”。她工作干练，剧里经常出现她不碍于女性身份，利落得搬箱子，公司出现状况，其他人都在担心抱怨，只有莉香在想办法，笑着说：”没事，丸子一定会赶上的！”她人际交往能力一流，同事都很喜欢她，就连合作商都对她印象深刻，不用潜规则，打电话就能搞定业务。</p>
<p>生活中的她，很有品味，穿衣打扮靓丽，下班会在家里养绿植，玩拼图，煮咖啡，或者去和同事唱K，小酌，还会去便利店买热乎乎的夜宵，我觉得她开头那句话不是安慰刚从乡下来的丸子，而是她自己人生态度，这是一个多么可爱，烟火气，自由自在的女孩！</p>
<p>在剧里，很少能看到莉香露出阴霾的样子，她每天都是很用心，很有朝气得生活。</p>
<p>作为观众，我经常能被莉香这个”小太阳“温暖，如果身边有这样的人我一定会好好珍惜她。</p>
<h2 id="什么都懂仍旧很天真"><a href="#什么都懂仍旧很天真" class="headerlink" title="什么都懂仍旧很天真"></a>什么都懂仍旧很天真</h2><p>刚开始对于莉香的爱情态度我觉得有些累，因为丸子的注意力一直在里美身上，即使看完了全剧，我也没看出来丸子爱过莉香。我甚至想到了卑微，但是越看会越觉得莉香和舔狗其实毫无关系。爸爸和我聊的时候说到女主的情况是她看了 剧本，知道接下来会发生什么，但仍旧坚持自己的喜欢。卑微是放弃原则，没有下限的妥协，莉香给我的感觉是她只是在坚持自己对爱情的看法，为此做了一切自己能做的努力。</p>
<p>天真的莉香好像一直不会绝望，知道丸子心有所属，也不会轻易举白旗，她会在深夜分别后，飞奔过去抱住丸子表白，她会大大方方地发出邀约：”丸子，我们做爱吧！“，她敢在大街上大喊：”丸子，我爱你！“  我看到这儿的时候有种似曾相识地感觉，以前的我和丸子一样，莉香这样的大胆举动我也做不到，后来我明白了相爱的两个人眼里只有对方，不在意其他人了，其实这是一件相当浪漫的事情。</p>
<p>她就连对待情敌也坦坦荡荡。</p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202204220939631.jpg" alt="永远的赤名莉香"></p>
<p>莉香和里美的一个区别在我看来就是：<strong>莉香希望丸子也爱她，而非得到丸子；里美想尽心思想要得到丸子</strong>。莉香的这个特质我很喜欢，我会希望自己像她一样，现实里的我或许还有很多人往往做着里美的事情。</p>
<p>莉香对丸子一直以来都是，我喜欢你，我考虑的事情只有一件，那就是努力也让你喜欢我，而不是得到你。里面有段莉香的台词我特别动容：</p>
<blockquote>
<p>努力过了，我这么做了</p>
<p>我敲了门</p>
<p>”丸子，</p>
<p>你在做什么？</p>
<p>你快开门呀“</p>
<p>丸子却还是不理我，</p>
<p>还是我必须再努力呢，</p>
<p>是不是我要更努力才行呢？</p>
</blockquote>
<p>还有一处我喜欢莉香的点在于她很本真，她和丸子吵架后，同事劝她对付男人要用技巧，即使喜欢也要偶尔装出讨厌的样子，爱不要太重了，苹果咬到芯就不好吃了。莉香笑着说：“苹果芯很有营养哦”，她觉得如果男人就此跑了自己也就认了。莉香不喜欢那些恋爱小伎俩，这里其实和里美来了个对比，里美后期为了得到丸子，某些行为确实有点绿茶了……我喜欢莉香谈恋爱就付出真心，把每一场都当最后一场，不去在意技巧啊，利益得失之类的东西。</p>
<p>剧里面的恋爱小细节真的太甜啦，有几个我比较喜欢的。</p>
<p>当丸子因为里美的事情一个人落寞的时候，莉香晚上打去电话耍宝逗他开心，后面丸子半夜就会期待莉香的电话哈哈哈。莉香在电话里说：</p>
<blockquote>
<p>所谓恋爱啊，只要是参加了就是有意义的，</p>
<p>即使是没有结局</p>
<p>当你喜欢上一个人的那一刹</p>
<p>是永远不会消失的，</p>
<p>这将成为你活下去的勇气，</p>
<p>而且会变成你黑暗中的一丝曙光</p>
</blockquote>
<p>莉香的这些话暖洋洋的，我作为观众都能从中感受到力量。</p>
<p>还有莉香去出差，丸子一个人发现自己真的很想莉香，一直盼望着她回来，后来莉香回来了却没有鸟丸子哈哈哈，丸子一脸失望，就在这是突然发现了脚下的箱子，打开发现是莉香带来的“特产”，这里真的好心动啊，小雪人也太浪漫啦。</p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202204220940250.png" alt="202204212243576"></p>
<p>丸子木讷含蓄，总是不经意说出伤害莉香的话，和莉香的约会也总是迟到失约，就算丸子迟到了五个消失，莉香见到他第一反应还是绽开笑颜，撒撒娇。</p>
<p>最后两个人在丸子的家乡做了分别，这里导演处理的有点意思，莉香告诉丸子，自己的火车四点四十八分就开了哦，如果改变心意的话，就在车开走前来找她，不来找就分别了。丸子纠结了一番最终跑去找莉香，等到四十八分跑过去的时候在站台上怎么也找不到莉香，原来莉香坐三十三分的车走了，栏杆上挂着丸子的手帕，写着“再见，丸子。”这场单恋终于结束了。莉香始终坚持着自己的恋爱观，对得起自己也不会后悔，她和丸子说再见的时候已经想的很明白了，已经好好的放下了，那么大家好聚好散，抱着珍惜的回忆离开，这份洒脱让我觉得莉香是一个真正为自己负责的人。</p>
<img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202204220940136.png" alt="202204212251342" style="zoom: 67%;" />

<p>三年后，莉香和丸子在街头相遇，丸子和里美已经结婚，丸子用开玩笑的语气说自己有点后悔，和莉香说话会紧张，但是已经和三年前那个自己判若两人了，各方面都成熟了，变得游刃有余。但是这也并不代表他爱过莉香，只是三年时间让他明白了：</p>
<p><strong>莉香曾经的每一个云淡风轻背后都承受了多大的痛苦；</strong></p>
<p><strong>他曾经深深伤害了莉香；</strong></p>
<p><strong>莉香曾经给他多么美好，多么珍贵的爱情</strong></p>
<p>容我不怀好意得推测一下，丸子得心未必会全然在里美身上即便结婚。我能看到里美为他系鞋带时丸子眼里有一丝无趣，也许丸子和朋友在家里胡闹喝酒总会有一双哀怨得眼睛盯着他，反正我觉得爱情又不是找个好驾驭得人搭伙过日子哈哈哈，爱情就应该是快乐的，无私的，疯狂的，不顾一切的，就像丸子和莉香表白时说的那样！</p>
<img src="https://cdn.jsdelivr.net/gh/Kasahara-MAY/MarkdownPicture/img/202204212300798.png" alt="image-20220421230001036" style="zoom:33%;" />

<hr>
<p>东京爱情故事画质修复版 阿里云盘 自取</p>
<p><a href="https://www.aliyundrive.com/s/mTQHUvPQbw2">https://www.aliyundrive.com/s/mTQHUvPQbw2</a> </p>
<hr>
<p>Sherry</p>
<p>2022&#x2F;4&#x2F;22</p>
]]></content>
      <categories>
        <category>Sherry</category>
      </categories>
  </entry>
  <entry>
    <title>Latex&amp;mermaid(二)</title>
    <url>/2022/03/21/Latex/</url>
    <content><![CDATA[<h2 id="1-Latex支持"><a href="#1-Latex支持" class="headerlink" title="1. Latex支持"></a>1. Latex支持</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$J^&#123;wt&#125;_&#123;i&#125;$ </span><br><span class="line"></span><br><span class="line">$$</span><br><span class="line">&#123;\mathbb R&#125; = \sum_&#123;t=0&#125;^&#123;n&#125;&#123; &#123;\mathbb R_t&#125;\gamma^&#123;t&#125; &#125;</span><br><span class="line">$$</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<span id="more"></span>

<p>$J^{wt}_{i}$ </p>
<p>$$<br>{\mathbb R} &#x3D; \sum_{t&#x3D;0}^{n}{ {\mathbb R_t}\gamma^{t} }<br>$$</p>
<p>$$<br>\begin{equation}min_{\phi}\sum_{i&#x3D;1}^{|B|}(r_{t_{i} } + \gamma max_{\hat{a}\in\mathcal{A} }Q_{\phi^{target} }(s_{t_{i}+1},\hat{a}) - Q_{\phi}(s_{t_{i} },a_{t_{i} }))^2<br>\end{equation}<br>$$</p>
<hr>
<h2 id="2-流程图绘制"><a href="#2-流程图绘制" class="headerlink" title="2.流程图绘制"></a>2.流程图绘制</h2><p><strong>都不好看，没必要学，追求效果不如专业工具，追求方便不如纸上画图然后拍照</strong></p>
<h3 id="flow画流程图效果还不错"><a href="#flow画流程图效果还不错" class="headerlink" title="flow画流程图效果还不错"></a>flow画流程图效果还不错</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//flow流程图</span></span><br><span class="line">st=&gt;start: Start|past:&gt;http:<span class="comment">//www.google.com[blank]</span></span><br><span class="line">e=&gt;end: End:&gt;http:<span class="comment">//www.google.com</span></span><br><span class="line">op1=&gt;operation: My Operation|past</span><br><span class="line">op2=&gt;operation: Stuff|current</span><br><span class="line">sub1=&gt;subroutine: My Subroutine|invalid</span><br><span class="line">cond=&gt;condition: Yes</span><br><span class="line">or No?|approved:&gt;http:<span class="comment">//www.google.com</span></span><br><span class="line">c2=&gt;condition: Good idea|rejected</span><br><span class="line">io=&gt;inputoutput: <span class="keyword">catch</span> something...|request</span><br><span class="line"></span><br><span class="line">st-&gt;op1(right)-&gt;cond</span><br><span class="line"><span class="title function_">cond</span><span class="params">(yes, right)</span>-&gt;c2</span><br><span class="line"><span class="title function_">cond</span><span class="params">(no)</span>-&gt;sub1(left)-&gt;op1</span><br><span class="line"><span class="title function_">c2</span><span class="params">(yes)</span>-&gt;io-&gt;e</span><br><span class="line"><span class="title function_">c2</span><span class="params">(no)</span>-&gt;op2-&gt;e</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<div id="flowchart-0" class="flow-chart"></div>

<h3 id="mermaid画图语法简单"><a href="#mermaid画图语法简单" class="headerlink" title="mermaid画图语法简单"></a>mermaid画图语法简单</h3><p>画流程图不好看</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//mermaid</span></span><br><span class="line">graph TD</span><br><span class="line">    <span class="title function_">B</span><span class="params">((开始)</span>) --&gt;C&#123;判断&#125;</span><br><span class="line">    C --  a=<span class="number">1</span> --&gt;D[执行语句<span class="number">1</span>]</span><br><span class="line">    C --  a=<span class="number">2</span>  --&gt;E[执行语句<span class="number">2</span>]</span><br><span class="line">    C --  a=<span class="number">3</span> --&gt;F[执行语句<span class="number">3</span>]</span><br><span class="line">    C -- a=<span class="number">4</span>  --&gt;G[执行语句<span class="number">4</span>]</span><br><span class="line">    D--&gt; AA((结束))</span><br><span class="line">    E--&gt; AA</span><br><span class="line">    F--&gt; AA</span><br><span class="line">   G--&gt; AA      </span><br><span class="line"></span><br></pre></td></tr></table></figure>

<pre class="mermaid">
graph TD
    B((开始)) -->C{判断}
    C --  a=1 -->D[执行语句1]
    C --  a=2  -->E[执行语句2]
    C --  a=3 -->F[执行语句3]
    C -- a=4  -->G[执行语句4]
    D--> AA((结束))
    E--> AA
    F--> AA
   G--> AA</pre>

<h3 id="甘特图"><a href="#甘特图" class="headerlink" title="甘特图"></a>甘特图</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">gantt </span><br><span class="line">	dateFormat YYYY-MM-DD </span><br><span class="line">	title 甘特图名称 </span><br><span class="line">	</span><br><span class="line">	section 类别A </span><br><span class="line">	已经完成的任务 : done, des1, <span class="number">2014</span>-<span class="number">01</span>-<span class="number">06</span>, <span class="number">2014</span>-<span class="number">01</span>-08 </span><br><span class="line">	进行中的任务 : active, des2, <span class="number">2014</span>-<span class="number">01</span>-09, <span class="number">3d</span> </span><br><span class="line">	未来的任务 : des3, after des2, <span class="number">5d</span> </span><br><span class="line">	section 类别B </span><br><span class="line">	完成的关键任务 :crit, done, <span class="number">2014</span>-<span class="number">01</span>-<span class="number">06</span>, 24h </span><br><span class="line">	进行中的关键任务 :crit, active, <span class="number">3d</span> </span><br><span class="line">	将来的关键任务 :crit, <span class="number">5d</span></span><br></pre></td></tr></table></figure>

<pre class="mermaid">gantt 
    dateFormat YYYY-MM-DD 
    title 甘特图名称 
    
    section 类别A 
    已经完成的任务 : done, des1, 2014-01-06, 2014-01-08 
    进行中的任务 : active, des2, 2014-01-09, 3d 
    未来的任务 : des3, after des2, 5d 
    section 类别B 
    完成的关键任务 :crit, done, 2014-01-06, 24h 
    进行中的关键任务 :crit, active, 3d 
    将来的关键任务 :crit, 5d</pre>

<h2 id="mermaid饼图"><a href="#mermaid饼图" class="headerlink" title="mermaid饼图"></a>mermaid饼图</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">pie</span><br><span class="line"> title Pie Chart</span><br><span class="line"> <span class="string">&quot;Dogs&quot;</span> : <span class="number">386</span></span><br><span class="line"> <span class="string">&quot;cats&quot;</span> : <span class="number">567</span></span><br><span class="line"> <span class="string">&quot;rabbit&quot;</span> : <span class="number">700</span></span><br><span class="line"> <span class="string">&quot;pig&quot;</span>:<span class="number">365</span></span><br><span class="line"> <span class="string">&quot;tiger&quot;</span> : <span class="number">15</span></span><br></pre></td></tr></table></figure>

<pre class="mermaid">pie
 title Pie Chart
 "Dogs" : 386
 "cats" : 567
 "rabbit" : 700
 "pig":365
 "tiger" : 15</pre>


<h2 id="回来的路-gt-如何优雅的编写Markdown-Markdown-amp-Blog笔记一"><a href="#回来的路-gt-如何优雅的编写Markdown-Markdown-amp-Blog笔记一" class="headerlink" title="回来的路-&gt;如何优雅的编写Markdown(Markdown&amp;Blog笔记一) "></a>回来的路-&gt;<a href="https://yongtaiq.github.io/2020/12/03/Code-Markdown-gracefully/">如何优雅的编写Markdown(Markdown&amp;Blog笔记一) </a></h2><hr>
<h2 id="本系列和所有相关文章目录"><a href="#本系列和所有相关文章目录" class="headerlink" title="本系列和所有相关文章目录"></a>本系列和所有相关文章目录</h2><ol>
<li><a href="https://yongtaiq.github.io/2020/12/03/Code-Markdown-gracefully/">如何优雅的编写Markdown(Markdown&amp;Blog笔记一) </a></li>
<li><a href="https://yongtaiq.github.io/2022/03/21/Latex/">Latex&amp;流程图(Markdown&amp;Blog笔记二) </a></li>
<li><a href="https://yongtaiq.github.io/2022/03/21/Typora-Setting/">Typora的设置(Markdown&amp;Blog笔记三) </a></li>
<li><a href="https://yongtaiq.github.io/2022/03/21/Typora+PicGo+GitHub/">Typora+PicGo+GitHub搭建云端图床(Markdown&amp;Blog笔记四) </a></li>
<li><a href="https://yongtaiq.github.io/2022/03/21/Blog+Hexo/">Blog+Hexo搭建(Markdown&amp;Blog笔记五) </a></li>
<li><a href="https://yongtaiq.github.io/2022/03/20/Win10-shortcut-key/">win快捷键 </a></li>
</ol>
<hr>
<p>2022&#x2F;3&#x2F;21</p>
<script src="https://cdnjs.cloudflare.com/ajax/libs/raphael/2.2.7/raphael.min.js"></script><script src="https://cdnjs.cloudflare.com/ajax/libs/flowchart/1.6.5/flowchart.min.js"></script><textarea id="flowchart-0-code" style="display: none">st=>start: Start|past:>http://www.google.com[blank]
e=>end: End:>http://www.google.com
op1=>operation: My Operation|past
op2=>operation: Stuff|current
sub1=>subroutine: My Subroutine|invalid
cond=>condition: Yes
or No?|approved:>http://www.google.com
c2=>condition: Good idea|rejected
io=>inputoutput: catch something...|request

st->op1(right)->cond
cond(yes, right)->c2
cond(no)->sub1(left)->op1
c2(yes)->io->e
c2(no)->op2->e</textarea><textarea id="flowchart-0-options" style="display: none">{"scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("flowchart-0-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-0-options").value));  var diagram = flowchart.parse(code);  diagram.drawSVG("flowchart-0", options);</script>]]></content>
      <categories>
        <category>Markdown&amp;Blog</category>
      </categories>
  </entry>
  <entry>
    <title>做菜学习记录（更）</title>
    <url>/2022/04/29/Learn-to-cook/</url>
    <content><![CDATA[<p>自己对好吃的很感兴趣，所以相应的做菜也是一件美事，平时家里吃的太清淡了，偶尔想自己做点喜欢吃的，做出来还是蛮有成就感的。</p>
<span id="more"></span>

<h2 id="酸菜鱼"><a href="#酸菜鱼" class="headerlink" title="酸菜鱼"></a>酸菜鱼</h2><h3 id="材料"><a href="#材料" class="headerlink" title="材料"></a>材料</h3><p>梭边鱼，生鸡蛋，葱，姜，蒜，酸菜，干辣椒，藤椒，白芝麻，老坛酸菜鱼调料，盐，生抽</p>
<h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><p><strong>处理鱼</strong></p>
<ul>
<li>洗鱼：清洗去除内脏的鱼，重点要洗掉鱼肉内壁上黑色的膜，鱼鳃上残留的组织，血迹，内脏残留组织，不然会有腥味。</li>
<li>切鱼：先剁掉鱼头，以鱼鳃和鱼头中间为分界线把鱼头分为四份；鱼的身体沿着脊椎剃掉两排的肉，将取下的肉按照一拇指宽切成条，脊椎部分剁成几份即可，然后将鱼肉装盆。</li>
<li>腌鱼：将生姜沫，葱沫放在碗里，然后倒上清水浸泡，一段时间后将碗里的东西倒入盆中。撒上盐，倒入生抽，将生鸡蛋打碎倒入其中，戴上塑料手套搅动使混合均匀，腌鱼需要半个小时到一个小时的时间。</li>
</ul>
<p><strong>准备佐料</strong></p>
<ul>
<li>拍蒜，生姜沫，葱段，藤椒装碗1。</li>
<li>红油，酸菜鱼酱料装碗2，红油是为了颜色更鲜艳。</li>
<li>酸菜经过清洗沥干后装碗3。</li>
<li>藤椒，干辣椒装碗4。</li>
<li>葱段装碗5。</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/Kasahara-MAY/MarkdownPicture/img/202204291145258.jpg"></p>
<p><strong>做菜</strong></p>
<p>热锅凉油，等油烧热后倒入碗1，爆出香味后，倒入碗2，用长勺煸炒，看到边缘有红油渗出就倒入开水，具体的量根据鱼的大小决定，能刚好装盆即可。</p>
<p>等汤煮沸后倒入酸菜，鱼头和脊椎骨，鱼肉先留着。盖锅盖煮十分钟。</p>
<p>十分钟后，开锅，下入鱼肉，盖锅盖煮五分钟。</p>
<p>五分钟后将锅中的东西都倒入鱼盆中，将锅洗干净擦干。</p>
<p>热锅凉油，等油热后倒入碗4，同时将碗5的葱段洒在鱼肉上，等锅中爆出香味后，将油浇到鱼肉上，出锅。</p>
<p><img src="https://cdn.jsdelivr.net/gh/Kasahara-MAY/MarkdownPicture/img/202204291157897.jpg"></p>
<hr>
<p><a href="https://github.com/Anduin2017/HowToCook">https://github.com/Anduin2017/HowToCook</a></p>
<hr>
<p>Sherry</p>
<p>2022&#x2F;4&#x2F;29</p>
]]></content>
      <categories>
        <category>Sherry</category>
      </categories>
  </entry>
  <entry>
    <title>幸福来得太突然</title>
    <url>/2022/04/21/Mid-Platform/</url>
    <content><![CDATA[<p>撞了狗屎运了，激动的发说说，对了，以后没有说说，只有博客~</p>
<p>另外，博客评论区已经支持邮件提醒功能，留下邮箱别人回复你，你就能收到邮件提醒。</p>
<span id="more"></span>

<p>宝藏专辑</p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=450 src="//music.163.com/outchain/player?type=0&id=7388968725&auto=0&height=430"></iframe>

<h2 id="项目成果成了毕业条件？"><a href="#项目成果成了毕业条件？" class="headerlink" title="项目成果成了毕业条件？"></a>项目成果成了毕业条件？</h2><p>本来都没指望文章能加我名字，突然就达到毕业条件了？？？</p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202204211513778.png" alt="image-20220421151325684"></p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202204211513211.png" alt="image-20220421151353138"></p>
<h2 id="时间管理"><a href="#时间管理" class="headerlink" title="时间管理"></a>时间管理</h2><p>之前小猫咪问我杂事很多，特别忙的时候是怎么管理时间的。</p>
<p>我是个懒狗，能量时而充沛时而一丝不剩，低效是常态。</p>
<h3 id="deadline管理"><a href="#deadline管理" class="headerlink" title="deadline管理"></a>deadline管理</h3><p><a href="http://chs.desktopcal.com/chs/">桌面日历 (desktopcal.com)</a></p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202204211520088.png" alt="image-20220421151959103"></p>
<h3 id="每日进度"><a href="#每日进度" class="headerlink" title="每日进度"></a>每日进度</h3><p>每日或者每隔几天规划一下待办事项，随手写，边做边规划，这是这篇论文的历程，我还没来得及扔掉。</p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202204211523521.jpg" alt="7a43e5b50e4853c34cd320f15a0147c"></p>
<h3 id="周期进度"><a href="#周期进度" class="headerlink" title="周期进度"></a>周期进度</h3><p>我一般直接贴墙上，写起来方便。</p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202204211524778.jpg" alt="f9a3f3bbd55a8e90c67af2f6c0f0ac3"></p>
<hr>
<p>2022&#x2F;4&#x2F;21</p>
<p>西走菜菜</p>
]]></content>
      <categories>
        <category>生活和诗歌</category>
      </categories>
  </entry>
  <entry>
    <title>离骚</title>
    <url>/2022/04/07/Li-sao/</url>
    <content><![CDATA[<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p><a href="https://hanyu.baidu.com/s?wd=%E5%B1%88%E5%8E%9F">【作者】屈原 </a>【朝代】先秦 </p>

            <i class="fa fa-quote-right"></i>
          </blockquote>

<span id="more"></span>

<iframe src="//player.bilibili.com/player.html?aid=553962799&bvid=BV1ev4y1P7qM&cid=716434775&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>

<div class="poem-detail-separator"></div>
<div class="poem-detail-item-content">
<p class="poem-detail-main-text" id="body_p">
                    <span id="body_1_0" data="means_1_0">帝<span class='body-zhushi-span' data='"\u989b\u987c\u4e4b\u53f7\u3002"'>高阳</span>之<span class='body-zhushi-span' data='"\u82d7\uff0c\u521d\u751f\u7684\u79be\u672c\u690d\u7269\u3002\u88d4\uff0c\u8863\u670d\u7684\u672b\u8fb9\u3002\u6b64\u82d7\u88d4\u8fde\u7528\uff0c\u55bb\u6307\u5b50\u5b59\u540e\u4ee3\u3002"'>苗裔</span>兮，</span><span id="body_1_1" data="means_1_1"><span class='body-zhushi-span' data='"\u6211\u3002"'>朕</span>皇<span class='body-zhushi-span' data='"\u5df2\u6545\u7684\u7236\u4eb2\u3002"'>考</span>曰伯庸。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_1_0" data="body_1_0">我是古帝高阳氏的子孙，</span><span id="means_1_1" data="body_1_1">我已去世的父亲字伯庸。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_2_0" data="means_2_0"><span class='body-zhushi-span' data='"\u592a\u5c81\u5728\u5bc5\u65f6\u4e3a\u6444\u63d0\u683c\u3002\u6b64\u6307\u5bc5\u5e74\u3002"'>摄提</span><span class='body-zhushi-span' data='"\u6b63\u3002"'>贞</span>于孟<span class='body-zhushi-span' data='"\u6b63\u6708\u3002"'>陬</span>兮，</span><span id="body_2_1" data="means_2_1">惟<span class='body-zhushi-span' data='"\u6307\u5e9a\u5bc5\u4e4b\u65e5\u3002\u53e4\u4ee5\u5e72\u652f\u76f8\u914d\u6765\u7eaa\u65e5\u3002"'>庚寅</span>吾以<span class='body-zhushi-span' data='"\u964d\u751f\u3002"'>降</span>。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_2_0" data="body_2_0">岁星在寅那年的孟春月，</span><span id="means_2_1" data="body_2_1">正当庚寅日那天我降生。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_3_0" data="means_3_0">皇览<span class='body-zhushi-span' data='"\u63a8\u7406\u63e3\u5ea6\u3002"'>揆</span>余初度兮，</span><span id="body_3_1" data="means_3_1"><span class='body-zhushi-span' data='"\u5f00\u59cb\u3002"'>肇</span><span class='body-zhushi-span' data='"\u8d50\u3002"'>锡</span>余以嘉<span class='body-zhushi-span' data='"\u547d\u540d\u3002"'>名</span>。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_3_0" data="body_3_0">父亲仔细揣测我的生辰，</span><span id="means_3_1" data="body_3_1">于是赐给我相应的美名。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_4_0" data="means_4_0">名余曰<span class='body-zhushi-span' data='"\u901a\u201c\u8bc1\u201d\u3002"'>正</span>则兮，</span><span id="body_4_1" data="means_4_1"><span class='body-zhushi-span' data='"\u8868\u5b57\uff0c\u8fd9\u91cc\u6d3b\u7528\u4f5c\u52a8\u8bcd\uff0c\u8d77\u4e2a\u8868\u5b57\u3002"'>字</span>余曰灵均。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_4_0" data="body_4_0">父亲把我的名取为正则，</span><span id="means_4_1" data="body_4_1">同时把我的字叫作灵均。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_5_0" data="means_5_0">纷吾既有此<span class='body-zhushi-span' data='"\u5185\u5728\u7684\u7f8e\u597d\u54c1\u8d28\u3002"'>内美</span>兮，</span><span id="body_5_1" data="means_5_1">又<span class='body-zhushi-span' data='"\u518d\u3002"'>重</span>之以修能。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_5_0" data="body_5_0">天赋给我很多良好素质，</span><span id="means_5_1" data="body_5_1">我不断加强自己的修养。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_6_0" data="means_6_0"><span class='body-zhushi-span' data='"\u695a\u65b9\u8a00\uff0c\u62ab\u6302\u3002"'>扈</span>江离与辟芷兮，</span><span id="body_6_1" data="means_6_1"><span class='body-zhushi-span' data='"\u8349\u6709\u830e\u53f6\u53ef\u505a\u7ef3\u7d22\u3002"'>纫</span><span class='body-zhushi-span' data='"\u9999\u8349\u540d\u3002\u5373\u6cfd\u5170\uff0c\u79cb\u5b63\u5f00\u82b1\u3002"'>秋兰</span>以<span class='body-zhushi-span' data='"\u5b9e\u884c\u3002"'>为</span>佩。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_6_0" data="body_6_0">我把江离芷草披在肩上，</span><span id="means_6_1" data="body_6_1">把秋兰结成索佩挂身旁。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_7_0" data="means_7_0">汩余若将不<span class='body-zhushi-span' data='"\u8d81\u7740\u3002"'>及</span>兮，</span><span id="body_7_1" data="means_7_1">恐年岁之<span class='body-zhushi-span' data='"\u5bbe\u8bed\u524d\u7f6e\uff0c\u5373\u201c\u4e0d\u4e0e\u543e\u201d\uff0c\u4e0d\u7b49\u5f85\u6211\u3002"'>不吾与</span>。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_7_0" data="body_7_0">光阴似箭我好像跟不上，</span><span id="means_7_1" data="body_7_1">岁月不等待人令我心慌。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_8_0" data="means_8_0">朝<span class='body-zhushi-span' data='"\u62d4\u53d6\u3002"'>搴</span>阰之木兰兮，</span><span id="body_8_1" data="means_8_1">夕<span class='body-zhushi-span' data='"\u91c7\u6458\u3002"'>揽</span>洲之<span class='body-zhushi-span' data='"\u8349\u540d\uff0c\u7ecf\u51ac\u4e0d\u6b7b\u3002"'>宿莽</span>。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_8_0" data="body_8_0">早晨我在大坡采集木兰，</span><span id="means_8_1" data="body_8_1">傍晚在小洲中摘取宿莽。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_9_0" data="means_9_0"><span class='body-zhushi-span' data='"\u5929\u5929\u3002"'>日</span>月忽其不淹兮，</span><span id="body_9_1" data="means_9_1">春与秋其<span class='body-zhushi-span' data='"\u6307\u4e0d\u65ad\u66f4\u8fed\u3002"'>代序</span>。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_9_0" data="body_9_0">时光迅速逝去不能久留，</span><span id="means_9_1" data="body_9_1">四季更相代谢变化有常。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_10_0" data="means_10_0">惟草木之零落兮，</span><span id="body_10_1" data="means_10_1">恐美人之<span class='body-zhushi-span' data='"\u8870\u8001\u3002"'>迟暮</span>。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_10_0" data="body_10_0">我想到草木已由盛到衰，</span><span id="means_10_1" data="body_10_1">恐怕自己身体逐渐衰老。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_11_0" data="means_11_0">不<span class='body-zhushi-span' data='"\u8d81\u3002"'>抚</span>壮而弃<span class='body-zhushi-span' data='"\u6c61\u79fd\u3002"'>秽</span>兮，</span><span id="body_11_1" data="means_11_1">何不改乎<span class='body-zhushi-span' data='"\u6307\u73b0\u884c\u7684\u653f\u6cbb\u6cd5\u5ea6\u3002"'>此度</span>？</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_11_0" data="body_11_0">何不利用盛时扬弃秽政，</span><span id="means_11_1" data="body_11_1">为何还不改变这些法度？</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_12_0" data="means_12_0">乘<span class='body-zhushi-span' data='"\u9a8f\u9a6c\u3002"'>骐骥</span>以驰骋兮，</span><span id="body_12_1" data="means_12_1">来吾<span class='body-zhushi-span' data='"\u901a\u201c\u5bfc\u201d\uff0c\u5f15\u5bfc\u3002"'>道</span>夫先路！</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_12_0" data="body_12_0">乘上千里马纵横驰骋吧，</span><span id="means_12_1" data="body_12_1">来呀，我在前引导开路！</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_13_0" data="means_13_0">昔<span class='body-zhushi-span' data='"\u590f\u79b9\u3001\u5546\u6c64\u3001\u5468\u6587\u738b\u3002"'>三后</span>之纯粹兮，</span><span id="body_13_1" data="means_13_1"><span class='body-zhushi-span' data='"\u672c\u6765\u3002"'>固</span>众<span class='body-zhushi-span' data='"\u6307\u82ac\u82b3\u4e4b\u7269\u3002"'>芳</span>之所在。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_13_0" data="body_13_0">从前三后公正德行完美，</span><span id="means_13_1" data="body_13_1">所以群贤都在那里聚会。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_14_0" data="means_14_0">杂<span class='body-zhushi-span' data='"\u91cd\u590d\u3002"'>申</span><span class='body-zhushi-span' data='"\u695a\u5927\u592b\u5b50\u6912\u3002"'>椒</span>与菌桂兮，</span><span id="body_14_1" data="means_14_1">岂惟纫夫蕙茝！</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_14_0" data="body_14_0">杂聚申椒菌桂似的人物，</span><span id="means_14_1" data="body_14_1">岂止联系优秀的茝和蕙！</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_15_0" data="means_15_0">彼尧、</span><span id="body_15_1" data="means_15_1">舜之<span class='body-zhushi-span' data='"\u5149\u660e\u6b63\u5927\u3002"'>耿介</span>兮，</span><span id="body_15_2" data="means_15_2">既<span class='body-zhushi-span' data='"\u9075\u5faa\u6b63\u9053\u3002"'>遵道</span>而<span class='body-zhushi-span' data='"\u80fd\u591f\u3002"'>得</span>路。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_15_0" data="body_15_0">之前的唐尧、</span><span id="means_15_1" data="body_15_1">虞舜多么光明正直，</span><span id="means_15_2" data="body_15_2">他们沿着正道登上坦途。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_16_0" data="means_16_0">何桀纣之昌披兮，</span><span id="body_16_1" data="means_16_1">夫唯<span class='body-zhushi-span' data='"\u90aa\u9053\u3002"'>捷径</span>以窘<span class='body-zhushi-span' data='"\u5f90\u884c\u3002"'>步</span>。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_16_0" data="body_16_0">夏桀殷纣多么狂妄邪恶，</span><span id="means_16_1" data="body_16_1">贪图捷径必然走投无路。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_17_0" data="means_17_0">惟夫党人之<span class='body-zhushi-span' data='"\u82df\u4e14\u4eab\u4e50\u3002"'>偷乐</span>兮，</span><span id="body_17_1" data="means_17_1">路<span class='body-zhushi-span' data='"\u9ed1\u6697\u3002"'>幽昧</span>以险隘。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_17_0" data="body_17_0">结党营私的人苟安享乐，</span><span id="means_17_1" data="body_17_1">他们的前途黑暗而险阻。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_18_0" data="means_18_0">岂余身之惮<span class='body-zhushi-span' data='"\u707e\u7978\u3002"'>殃</span>兮，</span><span id="body_18_1" data="means_18_1">恐皇舆之<span class='body-zhushi-span' data='"\u55bb\u6307\u541b\u56fd\u7684\u503e\u5371\u3002"'>败绩</span>。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_18_0" data="body_18_0">难道我害怕招灾惹祸吗，</span><span id="means_18_1" data="body_18_1">我只担心祖国为此覆没。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_19_0" data="means_19_0">忽奔走以先<span class='body-zhushi-span' data='"\u5728\u540e\u9762\u3002"'>后</span>兮，</span><span id="body_19_1" data="means_19_1">及前王之<span class='body-zhushi-span' data='"\u8db3\u8ff9\uff0c\u5373\u811a\u5370\u3002"'>踵武</span>。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_19_0" data="body_19_0">前前后后我奔走照料啊，</span><span id="means_19_1" data="body_19_1">希望君王赶上先王脚步。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_20_0" data="means_20_0"><span class='body-zhushi-span' data='"\u9999\u8349\u540d\uff0c\u55bb\u695a\u6000\u738b\u3002"'>荃</span>不查余之中情兮，</span><span id="body_20_1" data="means_20_1">反信谗而<span class='body-zhushi-span' data='"\u66b4\u6012\u3002"'>齌怒</span>。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_20_0" data="body_20_0">你不深入了解我的忠心，</span><span id="means_20_1" data="body_20_1">反而听信谗言对我发怒。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_21_0" data="means_21_0">余固知<span class='body-zhushi-span' data='"\u5f62\u5bb9\u5fe0\u8d1e\u76f4\u8a00\u7684\u6837\u5b50\u3002"'>謇謇</span>之为患兮，</span><span id="body_21_1" data="means_21_1">忍而不能舍也。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_21_0" data="body_21_0">我早知道忠言直谏有祸，</span><span id="means_21_1" data="body_21_1">原想忍耐却又控制不住。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_22_0" data="means_22_0">指<span class='body-zhushi-span' data='"\u53e4\u4eba\u8ba4\u4e3a\u5929\u6709\u4e5d\u91cd\uff0c\u6545\u8a00\u3002"'>九天</span>以为正兮，</span><span id="body_22_1" data="means_22_1">夫唯<span class='body-zhushi-span' data='"\u6307\u695a\u6000\u738b\u3002"'>灵修</span>之故也。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_22_0" data="body_22_0">上指苍天请它给我作证，</span><span id="means_22_1" data="body_22_1">一切都为了君王的缘故。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_23_0" data="means_23_0">曰黄昏以为<span class='body-zhushi-span' data='"\u7ea6\u5b9a\u3002"'>期</span>兮，</span><span id="body_23_1" data="means_23_1">羌中道而<span class='body-zhushi-span' data='"\u66f4\u6539\u3002"'>改</span>路。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_23_0" data="body_23_0">我们两个定好在黄昏成亲，</span><span id="means_23_1" data="body_23_1">你为什么在半途就改变心意了呢。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_24_0" data="means_24_0">初既与余<span class='body-zhushi-span' data='"\u8bda\u4fe1\u4e4b\u8a00\u3002"'>成言</span>兮，</span><span id="body_24_1" data="means_24_1">后<span class='body-zhushi-span' data='"\u6028\u6068\u3002"'>悔</span>遁而有他。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_24_0" data="body_24_0">你以前既然和我有成约，</span><span id="means_24_1" data="body_24_1">现另有打算又追悔当初。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_25_0" data="means_25_0">余<span class='body-zhushi-span' data='"\u672c\u6765\u3002"'>既</span>不难夫离别兮，</span><span id="body_25_1" data="means_25_1">伤灵修之<span class='body-zhushi-span' data='"\u591a\u6b21\u53d8\u5316\u3002"'>数化</span>。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_25_0" data="body_25_0">我并不难于与你别离啊，</span><span id="means_25_1" data="body_25_1">只是伤心你的反反复复。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_26_0" data="means_26_0">余既<span class='body-zhushi-span' data='"\u683d\u79cd\u3002"'>滋</span>兰之九畹兮，</span><span id="body_26_1" data="means_26_1">又<span class='body-zhushi-span' data='"\u79cd\u690d\u3002"'>树</span>蕙之百<span class='body-zhushi-span' data='"\u4e8c\u767e\u56db\u5341\u6b65\u4e3a\u4ea9\u3002"'>亩</span>。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_26_0" data="body_26_0">我已经栽培了很多春兰，</span><span id="means_26_1" data="body_26_1">又种植香草秋蕙一大片。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_27_0" data="means_27_0"><span class='body-zhushi-span' data='"\u4e94\u5341\u4ea9\u4e3a\u7566\u3002"'>畦</span>留夷与揭车兮，</span><span id="body_27_1" data="means_27_1">杂杜衡与芳芷。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_27_0" data="body_27_0">分垄培植了留夷和揭车，</span><span id="means_27_1" data="body_27_1">还把杜衡芳芷套种其间。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_28_0" data="means_28_0"><span class='body-zhushi-span' data='"\u5e0c\u671b\u3002"'>冀</span>枝叶之<span class='body-zhushi-span' data='"\u957f\u3002"'>峻</span>茂兮，</span><span id="body_28_1" data="means_28_1">愿俟时乎吾将<span class='body-zhushi-span' data='"\u6536\u83b7\u3002"'>刈</span>。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_28_0" data="body_28_0">我希望它们都枝繁叶茂，</span><span id="means_28_1" data="body_28_1">等待着我收割的那一天。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_29_0" data="means_29_0">虽<span class='body-zhushi-span' data='"\u67af\u840e\u3002"'>萎</span><span class='body-zhushi-span' data='"\u843d\u5c3d\u3002"'>绝</span>其亦何伤兮，</span><span id="body_29_1" data="means_29_1">哀众芳之<span class='body-zhushi-span' data='"\u8352\u829c\u3002"'>芜</span>秽。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_29_0" data="body_29_0">它们枯萎死绝有何伤害，</span><span id="means_29_1" data="body_29_1">使我痛心的是它们质变。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_30_0" data="means_30_0">众皆<span class='body-zhushi-span' data='"\u5e76\u3002"'>竞</span>进以贪婪兮，</span><span id="body_30_1" data="means_30_1">凭不厌乎求<span class='body-zhushi-span' data='"\u8349\u6709\u830e\u53f6\u53ef\u505a\u7ef3\u7d22\u3002\u6b64\u4f5c\u52a8\u8bcd\uff0c\u610f\u4e3a\u6413\u7ef3\u3002"'>索</span>。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_30_0" data="body_30_0">大家都拚命争着向上爬，</span><span id="means_30_1" data="body_30_1">利欲熏心而又贪得无厌。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_31_0" data="means_31_0">羌内恕己以<span class='body-zhushi-span' data='"\u5ea6\u3002"'>量</span>人兮，</span><span id="body_31_1" data="means_31_1">各<span class='body-zhushi-span' data='"\u751f\u3002"'>兴</span>心而嫉妒。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_31_0" data="body_31_0">他们猜疑别人宽恕自己，</span><span id="means_31_1" data="body_31_1">他们勾心斗角相互妒忌。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_32_0" data="means_32_0">忽<span class='body-zhushi-span' data='"\u4e71\u9a70\u3002"'>驰骛</span>以追逐兮，</span><span id="body_32_1" data="means_32_1">非余心之所急。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_32_0" data="body_32_0">急于奔走钻营争权夺利，</span><span id="means_32_1" data="body_32_1">这些不是我追求的东西。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_33_0" data="means_33_0">老<span class='body-zhushi-span' data='"\u6e10\u6e10\u3002"'>冉冉</span>其将至兮，</span><span id="body_33_1" data="means_33_1">恐修名之不立。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_33_0" data="body_33_0">只觉得老年在渐渐来临，</span><span id="means_33_1" data="body_33_1">担心美好名声不能树立。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_34_0" data="means_34_0">朝饮木兰之坠露兮，</span><span id="body_34_1" data="means_34_1">夕餐秋菊之落<span class='body-zhushi-span' data='"\u82b1\u3002"'>英</span>。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_34_0" data="body_34_0">早晨我饮木兰上的露滴，</span><span id="means_34_1" data="body_34_1">晚上我用菊花残瓣充饥。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_35_0" data="means_35_0">苟余情其<span class='body-zhushi-span' data='"\u8bda\u4fe1\u800c\u7f8e\u597d\u3002"'>信姱</span>以<span class='body-zhushi-span' data='"\u5fc3\u4e2d\u7b80\u7ec3\u5408\u4e8e\u8981\u9053\u3002"'>练要</span>兮，</span><span id="body_35_1" data="means_35_1">长顑颔亦何伤。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_35_0" data="body_35_0">只要我的情感坚贞不易，</span><span id="means_35_1" data="body_35_1">形销骨立又有什么关系。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_36_0" data="means_36_0"><span class='body-zhushi-span' data='"\u6301\u53d6\u3002"'>掔</span>木根以<span class='body-zhushi-span' data='"\u7f16\u7ed3\u3002"'>结</span>茝兮，</span><span id="body_36_1" data="means_36_1"><span class='body-zhushi-span' data='"\u62fe\u53d6\u3002"'>贯</span>薜荔之落蕊。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_36_0" data="body_36_0">我用树木的根编结茝草，</span><span id="means_36_1" data="body_36_1">再把薜荔花蕊穿在一起。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_37_0" data="means_37_0"><span class='body-zhushi-span' data='"\u4e3e\u8d77\u3002"'>矫</span>菌桂以纫蕙兮，</span><span id="body_37_1" data="means_37_1">索胡绳之<span class='body-zhushi-span' data='"\u7ef3\u7d22\u7f8e\u597d\u8c8c\u3002"'>纚纚</span>。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_37_0" data="body_37_0">我拿菌桂枝条联结蕙草，</span><span id="means_37_1" data="body_37_1">胡绳搓成绳索又长又好。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_38_0" data="means_38_0">謇吾<span class='body-zhushi-span' data='"\u6548\u6cd5\u3002"'>法</span>夫<span class='body-zhushi-span' data='"\u524d\u8d24\u3002"'>前修</span>兮，</span><span id="body_38_1" data="means_38_1">非世俗之所<span class='body-zhushi-span' data='"\u4f69\u7528\u3002"'>服</span>。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_38_0" data="body_38_0">我向古代的圣贤学习啊，</span><span id="means_38_1" data="body_38_1">不是世间俗人能够做到。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_39_0" data="means_39_0">虽不<span class='body-zhushi-span' data='"\u5408\u3002"'>周</span>于今之人兮，</span><span id="body_39_1" data="means_39_1">愿依<span class='body-zhushi-span' data='"\u6bb7\u8d24\u5927\u592b\uff0c\u8c0f\u5176\u541b\uff0c\u4e0d\u542c\uff0c\u6295\u6c5f\u800c\u6b7b\u3002"'>彭咸</span>之遗则。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_39_0" data="body_39_0">我与现在的人虽不相容，</span><span id="means_39_1" data="body_39_1">我却愿依照彭咸的遗教。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_40_0" data="means_40_0">长太息以掩涕兮，</span><span id="body_40_1" data="means_40_1">哀<span class='body-zhushi-span' data='"\u6307\u5929\u4e0b\u4f17\u4eba\u3002"'>民</span>生之多艰。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_40_0" data="body_40_0">我揩着眼泪啊声声长叹，</span><span id="means_40_1" data="body_40_1">可怜人生道路多么艰难。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_41_0" data="means_41_0">余虽好<span class='body-zhushi-span' data='"\u6d01\u51c0\u800c\u7f8e\u597d\u3002"'>修姱</span>以鞿羁兮，</span><span id="body_41_1" data="means_41_1">謇朝<span class='body-zhushi-span' data='"\u8fdb\u8c0f\u3002"'>谇</span>而夕<span class='body-zhushi-span' data='"\u5e9f\u3002"'>替</span>。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_41_0" data="body_41_0">我虽爱好修洁严于责己，</span><span id="means_41_1" data="body_41_1">早晨被辱骂晚上又丢官。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_42_0" data="means_42_0">既替余以蕙<span class='body-zhushi-span' data='"\u4f69\u5e26\u3002"'>纕</span>兮，</span><span id="body_42_1" data="means_42_1">又申之以揽茝。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_42_0" data="body_42_0">他们弹劾我佩带蕙草啊，</span><span id="means_42_1" data="body_42_1">又指责我爱好采集茝兰。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_43_0" data="means_43_0">亦余心之所善兮，</span><span id="body_43_1" data="means_43_1">虽九死其<span class='body-zhushi-span' data='"\u5c1a\u4e14\u3002"'>犹</span>未悔。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_43_0" data="body_43_0">这是我心中追求的东西，</span><span id="means_43_1" data="body_43_1">就是多次死亡也不后悔。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_44_0" data="means_44_0">怨灵修之浩荡兮，</span><span id="body_44_1" data="means_44_1">终不<span class='body-zhushi-span' data='"\u660e\u8fa8\u3002"'>察</span>夫民心。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_44_0" data="body_44_0">怨就怨楚王这样糊涂啊，</span><span id="means_44_1" data="body_44_1">他始终不体察别人心情。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_45_0" data="means_45_0"><span class='body-zhushi-span' data='"\u55bb\u7fa4\u81e3\u3002"'>众女</span>嫉余之蛾眉兮，</span><span id="body_45_1" data="means_45_1"><span class='body-zhushi-span' data='"\u8bcb\u6bc1\u3002"'>谣</span><span class='body-zhushi-span' data='"\u8bfd\u8c24\u3002"'>诼</span>谓余以善淫。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_45_0" data="body_45_0">那些女人妒忌我的丰姿，</span><span id="means_45_1" data="body_45_1">造谣诬蔑说我妖艳好淫。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_46_0" data="means_46_0">固时俗之工巧兮，</span><span id="body_46_1" data="means_46_1"><span class='body-zhushi-span' data='"\u8fdd\u80cc\u3002"'>偭</span>规矩而改错。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_46_0" data="body_46_0">庸人本来善于投机取巧，</span><span id="means_46_1" data="body_46_1">背弃规矩而又改变政策。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_47_0" data="means_47_0">背<span class='body-zhushi-span' data='"\u6b63\u66f2\u76f4\u4e4b\u5177\u3002"'>绳墨</span>以追<span class='body-zhushi-span' data='"\u659c\u66f2\u3002"'>曲</span>兮，</span><span id="body_47_1" data="means_47_1">竞<span class='body-zhushi-span' data='"\u82df\u5408\u53d6\u5bb9\uff0c\u6307\u4ee5\u6c42\u5bb9\u5a9a\u4e3a\u5e38\u6cd5\u3002"'>周容</span>以为度。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_47_0" data="body_47_0">违背是非标准追求邪曲，</span><span id="means_47_1" data="body_47_1">争着苟合取悦作为法则。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_48_0" data="means_48_0">忳郁邑余<span class='body-zhushi-span' data='"\u5931\u5fd7\u8c8c\u3002"'>侘傺</span>兮，</span><span id="body_48_1" data="means_48_1">吾独穷困乎此时也。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_48_0" data="body_48_0">忧愁烦闷啊我失意不安，</span><span id="means_48_1" data="body_48_1">现在孤独穷困多么艰难。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_49_0" data="means_49_0">宁溘死以<span class='body-zhushi-span' data='"\u968f\u6c34\u6f02\u6d41\u800c\u53bb\u3002"'>流亡</span>兮，</span><span id="body_49_1" data="means_49_1">余不忍为<span class='body-zhushi-span' data='"\u82df\u5408\u53d6\u5bb9\u4e4b\u6001\u3002"'>此态</span>也。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_49_0" data="body_49_0">宁可马上死去魂魄离散，</span><span id="means_49_1" data="body_49_1">媚俗取巧啊我坚决不干。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_50_0" data="means_50_0">鸷鸟之<span class='body-zhushi-span' data='"\u6307\u4e0d\u4e0e\u4f17\u9e1f\u540c\u7fa4\u3002"'>不群</span>兮，</span><span id="body_50_1" data="means_50_1">自<span class='body-zhushi-span' data='"\u53e4\u4ee3\u3002"'>前世</span>而固然。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_50_0" data="body_50_0">雄鹰不与那些燕雀同群，</span><span id="means_50_1" data="body_50_1">原本自古以来就是这般。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_51_0" data="means_51_0">何<span class='body-zhushi-span' data='"\u6b63\u3002"'>方</span>圜之能周兮，</span><span id="body_51_1" data="means_51_1">夫孰<span class='body-zhushi-span' data='"\u4e0d\u540c\u7684\u9053\u8def\u3002"'>异道</span>而相安？</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_51_0" data="body_51_0">方和圆怎能够互相配，</span><span id="means_51_1" data="body_51_1">志向不同何能彼此相安？</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_52_0" data="means_52_0"><span class='body-zhushi-span' data='"\u59d4\u5c48\u3002"'>屈</span>心而抑<span class='body-zhushi-span' data='"\u901a\u201c\u5e1c\u201d\uff0c\u65d7\u5e1c\u3002"'>志</span>兮，</span><span id="body_52_1" data="means_52_1">忍尤而<span class='body-zhushi-span' data='"\u9664\u53bb\u3002"'>攘</span><span class='body-zhushi-span' data='"\u803b\u8fb1\u3002"'>诟</span>。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_52_0" data="body_52_0">宁愿委曲心志压抑情感，</span><span id="means_52_1" data="body_52_1">宁把斥责咒骂统统承担。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_53_0" data="means_53_0"><span class='body-zhushi-span' data='"\u901a\u201c\u670d\u201d\uff0c\u4fdd\u6301\uff0c\u575a\u5b88\u3002"'>伏</span>清白以死<span class='body-zhushi-span' data='"\u6b63\u76f4\u3002"'>直</span>兮，</span><span id="body_53_1" data="means_53_1">固前圣之所<span class='body-zhushi-span' data='"\u539a\u5f85\u3002"'>厚</span>。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_53_0" data="body_53_0">保持清白节操死于直道，</span><span id="means_53_1" data="body_53_1">这本为古代圣贤所称赞。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_54_0" data="means_54_0">悔<span class='body-zhushi-span' data='"\u89c2\u770b\u3002"'>相道</span>之不察兮，</span><span id="body_54_1" data="means_54_1"><span class='body-zhushi-span' data='"\u957f\u3002"'>延</span>伫乎吾将反。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_54_0" data="body_54_0">后悔当初不曾看清前途，</span><span id="means_54_1" data="body_54_1">迟疑了一阵我又将回头。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_55_0" data="means_55_0"><span class='body-zhushi-span' data='"\u8c03\u8f6c\u3002"'>回</span>朕车以复路兮，</span><span id="body_55_1" data="means_55_1">及<span class='body-zhushi-span' data='"\u6307\u8ff7\u9014\u3002"'>行迷</span>之未远。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_55_0" data="body_55_0">调转我的车走回原路啊，</span><span id="means_55_1" data="body_55_1">趁着迷途未远赶快罢休。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_56_0" data="means_56_0">步余马于兰<span class='body-zhushi-span' data='"\u6c34\u8fb9\u9ad8\u5730\u3002"'>皋</span>兮，</span><span id="body_56_1" data="means_56_1">驰椒丘且焉<span class='body-zhushi-span' data='"\u4f11\u606f\u4e00\u4e0b\u3002"'>止息</span>。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_56_0" data="body_56_0">赶着我的马车缓缓的在兰草水边行走，</span><span id="means_56_1" data="body_56_1">跑上椒木小山暂且停留。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_57_0" data="means_57_0">进不入以离尤兮，</span><span id="body_57_1" data="means_57_1">退将复<span class='body-zhushi-span' data='"\u6307\u4fee\u8eab\u6d01\u884c\u3002"'>修吾初服</span>。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_57_0" data="body_57_0">既然进取不成反而获罪，</span><span id="means_57_1" data="body_57_1">那就回来把我旧服重修。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_58_0" data="means_58_0"><span class='body-zhushi-span' data='"\u88c1\u5236\u3002"'>制</span>芰荷以为衣兮，</span><span id="body_58_1" data="means_58_1">集<span class='body-zhushi-span' data='"\u83b2\u82b1\u3002"'>芙蓉</span>以为裳。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_58_0" data="body_58_0">我要把菱叶裁剪成上衣，</span><span id="means_58_1" data="body_58_1">我并用荷花把下裳织就。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_59_0" data="means_59_0"><span class='body-zhushi-span' data='"\u5bbe\u8bed\u524d\u7f6e\uff0c\u5373\u201c\u4e0d\u77e5\u543e\u201d\uff0c\u4e0d\u4e86\u89e3\u6211\u3002"'>不吾知</span>其亦已兮，</span><span id="body_59_1" data="means_59_1">苟余情其信芳。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_59_0" data="body_59_0">没有人了解我也就罢了，</span><span id="means_59_1" data="body_59_1">只要内心真正馥郁芳柔。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_60_0" data="means_60_0"><span class='body-zhushi-span' data='"\u6307\u5e3d\u9ad8\u3002"'>高</span>余冠之岌岌兮，</span><span id="body_60_1" data="means_60_1">长余佩之<span class='body-zhushi-span' data='"\u4fee\u957f\u800c\u7f8e\u597d\u7684\u6837\u5b50\u3002"'>陆离</span>。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_60_0" data="body_60_0">把我的帽子加得高高的，</span><span id="means_60_1" data="body_60_1">把我的佩带增得长悠悠。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_61_0" data="means_61_0">芳与泽其杂糅兮，</span><span id="body_61_1" data="means_61_1">唯昭质其犹未亏。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_61_0" data="body_61_0">虽然芳洁污垢混杂一起，</span><span id="means_61_1" data="body_61_1">只有纯洁品质不会腐朽。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_62_0" data="means_62_0">忽反顾以<span class='body-zhushi-span' data='"\u7eb5\u76ee\u77ad\u671b\u3002"'>游目</span>兮，</span><span id="body_62_1" data="means_62_1">将<span class='body-zhushi-span' data='"\u524d\u53bb\u89c2\u671b\u3002"'>往观</span>乎四荒。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_62_0" data="body_62_0">我忽然回头啊纵目远望，</span><span id="means_62_1" data="body_62_1">我将游观四面遥远地方。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_63_0" data="means_63_0">佩<span class='body-zhushi-span' data='"\u6781\u8a00\u591a\u3002"'>缤纷</span>其繁饰兮，</span><span id="body_63_1" data="means_63_1">芳菲菲其弥<span class='body-zhushi-span' data='"\u660e\u663e\u3002"'>章</span>。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_63_0" data="body_63_0">佩着五彩缤纷华丽装饰，</span><span id="means_63_1" data="body_63_1">散发出一阵阵浓郁清香。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_64_0" data="means_64_0">民生各有所乐兮，</span><span id="body_64_1" data="means_64_1">余独好修以为<span class='body-zhushi-span' data='"\u6052\u5e38\u4e4b\u6cd5\u3002"'>常</span>。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_64_0" data="body_64_0">人们各有自己的爱好啊，</span><span id="means_64_1" data="body_64_1">我独爱好修饰习以为常。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_65_0" data="means_65_0"><span class='body-zhushi-span' data='"\u8bda\u7136\u3002"'>虽</span>体解吾犹未变兮，</span><span id="body_65_1" data="means_65_1">岂余心之可<span class='body-zhushi-span' data='"\u60e7\u6015\u3002"'>惩</span>。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_65_0" data="body_65_0">即使粉身碎骨也不改变，</span><span id="means_65_1" data="body_65_1">难道我能受警戒而彷徨。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_66_0" data="means_66_0"><span class='body-zhushi-span' data='"\u5c48\u539f\u7684\u59d0\u59d0\u3002"'>女嬃</span>之<span class='body-zhushi-span' data='"\u7275\u6302\u3002"'>婵媛</span>兮，</span><span id="body_66_1" data="means_66_1"><span class='body-zhushi-span' data='"\u53cd\u53cd\u590d\u590d\u3002"'>申申</span>其詈予。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_66_0" data="body_66_0">姐姐对我遭遇十分关切，</span><span id="means_66_1" data="body_66_1">她曾经一再地向我告诫。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_67_0" data="means_67_0">曰：</span><span id="body_67_1" data="means_67_1">“鲧<span class='body-zhushi-span' data='"\u521a\u6b63\u3002"'>婞直</span>以亡身兮，</span><span id="body_67_2" data="means_67_2">终然夭乎<span class='body-zhushi-span' data='"\u7fbd\u5c71\u7684\u90ca\u91ce\u3002"'>羽之野</span>。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_67_0" data="body_67_0">说：</span><span id="means_67_1" data="body_67_1">“鲧太刚直（不顾性命）而身亡的,</span><span id="means_67_2" data="body_67_2">结果被杀死在羽山荒野。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_68_0" data="means_68_0">汝何<span class='body-zhushi-span' data='"\u8fc7\u4e8e\u521a\u76f4\u3002"'>博謇</span>而好修兮，</span><span id="body_68_1" data="means_68_1">纷独有此<span class='body-zhushi-span' data='"\u7f8e\u597d\u7684\u8282\u64cd\u3002"'>姱节</span>。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_68_0" data="body_68_0">你何忠言无忌爱好修饰，</span><span id="means_68_1" data="body_68_1">还独有很多美好的节操。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_69_0" data="means_69_0">薋菉葹以<span class='body-zhushi-span' data='"\u6ee1\u5c4b\u3002"'>盈室</span>兮，</span><span id="body_69_1" data="means_69_1"><span class='body-zhushi-span' data='"\u533a\u522b\u3002"'>判</span>独离而不服。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_69_0" data="body_69_0">满屋堆着都是普通花草，</span><span id="means_69_1" data="body_69_1">你却与众不同不肯佩服。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_70_0" data="means_70_0"><span class='body-zhushi-span' data='"\u4f17\u4eba\u3002"'>众</span>不可户说兮，</span><span id="body_70_1" data="means_70_1">孰<span class='body-zhushi-span' data='"\u52a9\u8bcd\uff0c\u65e0\u5b9e\u4e49\u3002"'>云</span>察余之中情。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_70_0" data="body_70_0">众人无法挨家挨户说明，</span><span id="means_70_1" data="body_70_1">谁会来详察我们的本心。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_71_0" data="means_71_0">世并举而好<span class='body-zhushi-span' data='"\u670b\u515a\u3002"'>朋</span>兮，</span><span id="body_71_1" data="means_71_1">夫何<span class='body-zhushi-span' data='"\u5b64\u72ec\u3002"'>茕</span>独而不予听？</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_71_0" data="body_71_0">世上的人都爱成群结伙，</span><span id="means_71_1" data="body_71_1">为何对我的话总是不听？</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_72_0" data="means_72_0">依<span class='body-zhushi-span' data='"\u524d\u4ee3\u5723\u8d24\u3002"'>前圣</span>以节中兮，</span><span id="body_72_1" data="means_72_1"><span class='body-zhushi-span' data='"\u53f9\u606f\u58f0\u3002"'>喟</span>凭心而<span class='body-zhushi-span' data='"\u5230\u5982\u4eca\u8fd9\u4e00\u5730\u6b65\u3002"'>历兹</span>。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_72_0" data="body_72_0">我以先圣行为节制性情，</span><span id="means_72_1" data="body_72_1">愤懑心情至今不能平静。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_73_0" data="means_73_0"><span class='body-zhushi-span' data='"\u6e21\u8fc7\u3002"'>济</span>沅、</span><span id="body_73_1" data="means_73_1">湘以南<span class='body-zhushi-span' data='"\u4e0a\u5929\u8fdc\u884c\u3002"'>征</span>兮，</span><span id="body_73_2" data="means_73_2"><span class='body-zhushi-span' data='"\u9760\u8fd1\u3002"'>就</span>重华而敶词：</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_73_0" data="body_73_0">渡过沅水、</span><span id="means_73_1" data="body_73_1">想将来向南求圣明之道，</span><span id="means_73_2" data="body_73_2">来接近极其（鲜丽）的花朵并且向舜帝陈述言词：</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_74_0" data="means_74_0"><span class='body-zhushi-span' data='"\u79b9\u4e4b\u5b50\u3002\u590f\u671d\u7684\u5f00\u56fd\u541b\u4e3b\u3002"'>启</span>《九辩》与《九歌》兮，</span><span id="body_74_1" data="means_74_1"><span class='body-zhushi-span' data='"\u542f\u5b50\u592a\u5eb7\u3002"'>夏康</span>娱以自纵。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_74_0" data="body_74_0">创作了《九辩》和《九歌》，</span><span id="means_74_1" data="body_74_1">他寻欢作乐而放纵忘情。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_75_0" data="means_75_0">不顾难以<span class='body-zhushi-span' data='"\u56fe\u8c0b\u3002"'>图</span>后兮，</span><span id="body_75_1" data="means_75_1"><span class='body-zhushi-span' data='"\u6307\u590f\u5eb7\u7b49\u5144\u5f1f\u4e94\u4eba\u3002"'>五子</span>用失乎家衖。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_75_0" data="body_75_0">不考虑将来看不到危难，</span><span id="means_75_1" data="body_75_1">因此武观得以酿成内乱。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_76_0" data="means_76_0"><span class='body-zhushi-span' data='"\u6307\u540e\u7fbf\u3002"'>羿</span><span class='body-zhushi-span' data='"\u8fc7\u5206\u7684\u6e38\u4e50\u3002"'>淫游</span>以佚畋兮，</span><span id="body_76_1" data="means_76_1">又好射夫<span class='body-zhushi-span' data='"\u5927\u72d0\u3002"'>封狐</span>。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_76_0" data="body_76_0">后羿爱好田猎溺于游乐，</span><span id="means_76_1" data="body_76_1">对射杀大狐狸特别喜欢。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_77_0" data="means_77_0">固乱流其<span class='body-zhushi-span' data='"\u5c11\u3002"'>鲜</span>终兮，</span><span id="body_77_1" data="means_77_1"><span class='body-zhushi-span' data='"\u5bd2\u6d5e\uff0c\u7fbf\u76f8\u3002"'>浞</span>又贪夫厥家。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_77_0" data="body_77_0">本来淫乱之徒无好结果，</span><span id="means_77_1" data="body_77_1">寒浞杀羿把他妻子霸占。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_78_0" data="means_78_0"><span class='body-zhushi-span' data='"\u5bd2\u6d5e\u4e4b\u5b50\u3002"'>浇</span>身被服<span class='body-zhushi-span' data='"\u5f3a\u58ee\u591a\u529b\u3002"'>强圉</span>兮，</span><span id="body_78_1" data="means_78_1">纵欲而<span class='body-zhushi-span' data='"\u4e0d\u80fd\u52a0\u4ee5\u514b\u5236\u3002"'>不忍</span>。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_78_0" data="body_78_0">寒浇自恃有强大的力气，</span><span id="means_78_1" data="body_78_1">放纵情欲不肯节制自己。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_79_0" data="means_79_0">日康娱而自忘兮，</span><span id="body_79_1" data="means_79_1">厥首<span class='body-zhushi-span' data='"\u56e0\u6b64\u3002"'>用夫</span>颠陨。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_79_0" data="body_79_0">天天寻欢作乐忘掉自身，</span><span id="means_79_1" data="body_79_1">因此他的脑袋终于落地。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_80_0" data="means_80_0"><span class='body-zhushi-span' data='"\u590f\u4e4b\u4ea1\u56fd\u4e4b\u541b\u3002"'>夏桀</span>之常违兮，</span><span id="body_80_1" data="means_80_1">乃遂焉而逢殃。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_80_0" data="body_80_0">夏桀行为总是违背常理，</span><span id="means_80_1" data="body_80_1">结果灾殃也就难以躲避。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_81_0" data="means_81_0">后<span class='body-zhushi-span' data='"\u6bb7\u7ea3\u738b\u4e4b\u540d\u3002"'>辛</span>之<span class='body-zhushi-span' data='"\u8089\u9171\uff0c\u540d\u8bcd\u52a8\u7528\uff0c\u6307\u5241\u6210\u8089\u9171\u3002"'>菹醢</span>兮，</span><span id="body_81_1" data="means_81_1">殷宗<span class='body-zhushi-span' data='"\u56e0\u800c\u3002"'>用而</span>不长。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_81_0" data="body_81_0">纣王把忠良剁成肉酱啊，</span><span id="means_81_1" data="body_81_1">殷朝天下因此不能久长。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_82_0" data="means_82_0">汤、</span><span id="body_82_1" data="means_82_1">禹<span class='body-zhushi-span' data='"\u5e84\u4e25\u3002"'>俨</span>而<span class='body-zhushi-span' data='"\u6563\u53d1\u3002"'>祗</span>敬兮，</span><span id="body_82_2" data="means_82_2">周论道而<span class='body-zhushi-span' data='"\u6ca1\u6709\u4e1d\u6beb\u5dee\u9519\u3002"'>莫差</span>。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_82_0" data="body_82_0">汤帝、</span><span id="means_82_1" data="body_82_1">大禹庄严并且恭敬，</span><span id="means_82_2" data="body_82_2">正确讲究道理还有文王。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_83_0" data="means_83_0">举贤才而<span class='body-zhushi-span' data='"\u4efb\u7528\u3002"'>授</span>能兮，</span><span id="body_83_1" data="means_83_1">循绳墨而不<span class='body-zhushi-span' data='"\u503e\u659c\u3002"'>颇</span>。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_83_0" data="body_83_0">他们都能选拔贤者能人，</span><span id="means_83_1" data="body_83_1">遵循一定准则不会走样。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_84_0" data="means_84_0">皇天无<span class='body-zhushi-span' data='"\u504f\u79c1\u3002"'>私阿</span>兮，</span><span id="body_84_1" data="means_84_1"><span class='body-zhushi-span' data='"\u53cd\u89c2\u3002"'>览</span>民德焉错辅。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_84_0" data="body_84_0">上天对一切都公正无私，</span><span id="means_84_1" data="body_84_1">见有德的人就给予扶持。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_85_0" data="means_85_0">夫维圣哲以<span class='body-zhushi-span' data='"\u7f8e\u597d\u7684\u5fb7\u884c\u3002"'>茂行</span>兮，</span><span id="body_85_1" data="means_85_1">苟得用此<span class='body-zhushi-span' data='"\u5929\u4e0b\u3002"'>下土</span>。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_85_0" data="body_85_0">只有古代圣王德行高尚，</span><span id="means_85_1" data="body_85_1">才能够享有天下的土地。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_86_0" data="means_86_0"><span class='body-zhushi-span' data='"\u89c2\u5bdf\u53e4\u5f80\u4eca\u6765\u7684\u6210\u8d25\u3002"'>瞻前而顾后</span>兮，</span><span id="body_86_1" data="means_86_1"><span class='body-zhushi-span' data='"\u89c2\u5bdf\u3002"'>相观</span>民之计极。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_86_0" data="body_86_0">回顾过去啊把将来瞻望，</span><span id="means_86_1" data="body_86_1">看到了做人的根本道理。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_87_0" data="means_87_0">夫孰<span class='body-zhushi-span' data='"\u4e0d\u884c\u4ec1\u4e49\u3002"'>非义</span>而可用兮？</span><span id="body_87_1" data="means_87_1">孰<span class='body-zhushi-span' data='"\u4e0d\u884c\u5584\u4e8b\u3002"'>非善</span>而可服？</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_87_0" data="body_87_0">哪有不义的事可以去干，</span><span id="means_87_1" data="body_87_1">哪有不善的事应该担当。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_88_0" data="means_88_0"><span class='body-zhushi-span' data='"\u4e34\u5371\uff0c\u9047\u5230\u5371\u9669\u3002"'>阽</span>余身而危死兮，</span><span id="body_88_1" data="means_88_1">览余初其犹未悔。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_88_0" data="body_88_0">我虽然面临死亡的危险，</span><span id="means_88_1" data="body_88_1">毫不后悔自己当初志向。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_89_0" data="means_89_0">不量凿而正枘兮，</span><span id="body_89_1" data="means_89_1">固<span class='body-zhushi-span' data='"\u5728\u524d\u9762\u3002"'>前</span>修以菹醢。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_89_0" data="body_89_0">不度量凿眼就削正榫头，</span><span id="means_89_1" data="body_89_1">前代的贤人正因此遭殃。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_90_0" data="means_90_0"><span class='body-zhushi-span' data='"\u5c61\u6b21\u3002"'>曾</span>歔欷余郁邑兮，</span><span id="body_90_1" data="means_90_1">哀朕时之不<span class='body-zhushi-span' data='"\u9047\u3002"'>当</span>。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_90_0" data="body_90_0">我泣声不绝啊烦恼悲伤，</span><span id="means_90_1" data="body_90_1">哀叹自己未逢美好时光。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_91_0" data="means_91_0">揽<span class='body-zhushi-span' data='"\u67d4\u8f6f\u3002"'>茹</span>蕙以掩涕兮，</span><span id="body_91_1" data="means_91_1">沾余襟之<span class='body-zhushi-span' data='"\u6cea\u6d41\u4e0d\u6b62\u7684\u6837\u5b50\u3002"'>浪浪</span>。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_91_0" data="body_91_0">拿着柔软蕙草揩抹眼泪，</span><span id="means_91_1" data="body_91_1">热泪滚滚沾湿我的衣裳。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_92_0" data="means_92_0">跪<span class='body-zhushi-span' data='"\u94fa\u5f00\u3002"'>敷</span>衽以陈辞兮，</span><span id="body_92_1" data="means_92_1">耿吾既得此<span class='body-zhushi-span' data='"\u6cbb\u56fd\u4e4b\u9053\u3002"'>中正</span>。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_92_0" data="body_92_0">铺开衣襟跪着慢慢细讲，</span><span id="means_92_1" data="body_92_1">我已获得正道心里亮堂。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_93_0" data="means_93_0"><span class='body-zhushi-span' data='"\u9a7e\u8f66\u3002"'>驷</span>玉虬以桀鹥兮，</span><span id="body_93_1" data="means_93_1">溘埃风余上征。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_93_0" data="body_93_0">驾驭着玉虬啊乘着凤车，</span><span id="means_93_1" data="body_93_1">在风尘掩翳中飞到天上。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_94_0" data="means_94_0">朝<span class='body-zhushi-span' data='"\u51fa\u53d1\u3002"'>发轫</span>于<span class='body-zhushi-span' data='"\u821c\u6240\u846c\u4e4b\u5730\u3002"'>苍梧</span>兮，</span><span id="body_94_1" data="means_94_1">夕余至乎<span class='body-zhushi-span' data='"\u795e\u5c71\uff0c\u5728\u6606\u4ed1\u5c71\u4e4b\u4e0a\u3002"'>县圃</span>。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_94_0" data="body_94_0">早晨从南方的苍梧出发，</span><span id="means_94_1" data="body_94_1">傍晚就到达了昆仑山上。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_95_0" data="means_95_0">欲少留此<span class='body-zhushi-span' data='"\u795e\u4e4b\u6240\u5728\u5904\u3002"'>灵琐</span>兮，</span><span id="body_95_1" data="means_95_1">日忽忽其将暮。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_95_0" data="body_95_0">我本想在灵琐稍事逗留，</span><span id="means_95_1" data="body_95_1">夕阳西下已经暮色苍茫。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_96_0" data="means_96_0">吾<span class='body-zhushi-span' data='"\u547d\u4ee4\u3002"'>令</span><span class='body-zhushi-span' data='"\u795e\u8bdd\u4e2d\u7684\u592a\u9633\u795e\u3002"'>羲和</span>弭节兮，</span><span id="body_96_1" data="means_96_1">望<span class='body-zhushi-span' data='"\u795e\u8bdd\u4e2d\u65e5\u6240\u5165\u4e4b\u5c71\u3002"'>崦嵫</span>而勿迫。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_96_0" data="body_96_0">我命令羲和停鞭慢行啊，</span><span id="means_96_1" data="body_96_1">莫叫太阳迫近崦嵫山旁。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_97_0" data="means_97_0">路<span class='body-zhushi-span' data='"\u8def\u9065\u8fdc\u7684\u6837\u5b50\u3002"'>漫漫</span>其<span class='body-zhushi-span' data='"\u957f\u8fdc\u3002"'>修远</span>兮，</span><span id="body_97_1" data="means_97_1">吾将<span class='body-zhushi-span' data='"\u5230\u5904\u3002"'>上下</span>而求索。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_97_0" data="body_97_0">前面的道路啊又远又长，</span><span id="means_97_1" data="body_97_1">我将上上下下追求理想。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_98_0" data="means_98_0">饮余马于<span class='body-zhushi-span' data='"\u65e5\u6d74\u5904\u3002"'>咸池</span>兮，</span><span id="body_98_1" data="means_98_1">总余辔乎<span class='body-zhushi-span' data='"\u65e5\u6240\u62c2\u4e4b\u6728\u3002"'>扶桑</span>。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_98_0" data="body_98_0">让我的马在咸池里饮水，</span><span id="means_98_1" data="body_98_1">把马缰绳拴在扶桑树上。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_99_0" data="means_99_0">折<span class='body-zhushi-span' data='"\u65e5\u6240\u5165\u4e4b\u5904\u7684\u6811\u6728\u3002"'>若木</span>以拂日兮，</span><span id="body_99_1" data="means_99_1">聊<span class='body-zhushi-span' data='"\u81ea\u7531\u81ea\u5728\u7684\u6837\u5b50\u3002"'>逍遥</span>以<span class='body-zhushi-span' data='"\u5f98\u5f8a\u3002"'>相羊</span>。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_99_0" data="body_99_0">折下若木枝来挡住太阳，</span><span id="means_99_1" data="body_99_1">我可以暂且从容地徜徉。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_100_0" data="means_100_0">前望舒使先驱兮，</span><span id="body_100_1" data="means_100_1">后飞廉使奔属。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_100_0" data="body_100_0">叫前面的望舒作为先驱，</span><span id="means_100_1" data="body_100_1">让后面的飞廉紧紧跟上。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_101_0" data="means_101_0">鸾皇为余<span class='body-zhushi-span' data='"\u5728\u524d\u9762\u8b66\u6212\u3002"'>先戒</span>兮，</span><span id="body_101_1" data="means_101_1"><span class='body-zhushi-span' data='"\u96f7\u795e\u3002"'>雷师</span>告余以未具。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_101_0" data="body_101_0">鸾乌凤凰为我在前戒备，</span><span id="means_101_1" data="body_101_1">雷师却说还没安排停当。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_102_0" data="means_102_0">吾令凤鸟<span class='body-zhushi-span' data='"\u817e\u7a7a\u800c\u98de\u3002"'>飞腾</span>兮，</span><span id="body_102_1" data="means_102_1">继之以<span class='body-zhushi-span' data='"\u6307\u65e5\u591c\u517c\u7a0b\u3002"'>日夜</span>。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_102_0" data="body_102_0">我命令凤凰展翅飞腾啊，</span><span id="means_102_1" data="body_102_1">要日以继夜地不停飞翔。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_103_0" data="means_103_0"><span class='body-zhushi-span' data='"\u65cb\u98ce\u3002"'>飘风</span><span class='body-zhushi-span' data='"\u805a\u96c6\u3002"'>屯</span>其相离兮，</span><span id="body_103_1" data="means_103_1"><span class='body-zhushi-span' data='"\u7387\u9886\u3002"'>帅</span>云霓而来御。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_103_0" data="body_103_0">旋风结聚起来互相靠拢，</span><span id="means_103_1" data="body_103_1">它率领着云霓向我迎上。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_104_0" data="means_104_0">纷总总其离<span class='body-zhushi-span' data='"\u5fd7\u540c\u9053\u5408\u7684\u4eba\u3002"'>合</span>兮，</span><span id="body_104_1" data="means_104_1"><span class='body-zhushi-span' data='"\u6587\u5f69\u6742\u4e71\uff0c\u4e94\u5f69\u7f24\u7eb7\u3002"'>斑</span>陆离其上下。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_104_0" data="body_104_0">云霓纷纷簇集忽离忽合，</span><span id="means_104_1" data="body_104_1">五光十色上下飘浮荡漾。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_105_0" data="means_105_0">吾令<span class='body-zhushi-span' data='"\u5929\u5e1d\u3002"'>帝</span>阍开关兮，</span><span id="body_105_1" data="means_105_1">倚<span class='body-zhushi-span' data='"\u5929\u95e8\u3002"'>阊阖</span>而望予。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_105_0" data="body_105_0">我叫天门守卫把门打开，</span><span id="means_105_1" data="body_105_1">他却倚靠天门把我呆望。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_106_0" data="means_106_0">时<span class='body-zhushi-span' data='"\u660f\u6697\u7684\u6837\u5b50\u3002"'>暧暧</span>其将罢兮，</span><span id="body_106_1" data="means_106_1">结幽兰而延伫。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_106_0" data="body_106_0">日色渐暗时间已经晚了，</span><span id="means_106_1" data="body_106_1">我纽结着幽兰久久徜徉。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_107_0" data="means_107_0">世<span class='body-zhushi-span' data='"\u6df7\u4e71\u6c61\u6d4a\u3002"'>溷浊</span>而不分兮，</span><span id="body_107_1" data="means_107_1">好<span class='body-zhushi-span' data='"\u63a9\u76d6\u3002"'>蔽</span>美而嫉妒。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_107_0" data="body_107_0">这个世道混浊善恶不分，</span><span id="means_107_1" data="body_107_1">喜欢嫉妒别人抹煞所长。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_108_0" data="means_108_0">朝吾将济于<span class='body-zhushi-span' data='"\u795e\u8bdd\u4e2d\u7684\u6c34\u540d\u3002"'>白水</span>兮，</span><span id="body_108_1" data="means_108_1">登阆风而<span class='body-zhushi-span' data='"\u62f4\uff0c\u7cfb\u3002"'>绁</span>马。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_108_0" data="body_108_0">清晨我将要渡过白水河，</span><span id="means_108_1" data="body_108_1">登上阆风山把马儿系着。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_109_0" data="means_109_0">忽<span class='body-zhushi-span' data='"\u56de\u5934\u671b\u3002"'>反顾</span>以流涕兮，</span><span id="body_109_1" data="means_109_1">哀<span class='body-zhushi-span' data='"\u9ad8\u5c71\u3002"'>高丘</span>之无<span class='body-zhushi-span' data='"\u7f8e\u5973\u3002"'>女</span>。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_109_0" data="body_109_0">忽然回头眺望涕泪淋漓，</span><span id="means_109_1" data="body_109_1">哀叹高丘竟然没有美女。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_110_0" data="means_110_0">溘吾游此<span class='body-zhushi-span' data='"\u4e1c\u65b9\u9752\u5e1d\u7684\u5c45\u820d\u3002"'>春宫</span>兮，</span><span id="body_110_1" data="means_110_1">折<span class='body-zhushi-span' data='"\u7389\u6811\u7684\u82b1\u679d\u3002"'>琼枝</span>以继佩。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_110_0" data="body_110_0">我飘忽地来到春宫一游，</span><span id="means_110_1" data="body_110_1">折下玉树枝条增添佩饰。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_111_0" data="means_111_0">及<span class='body-zhushi-span' data='"\u82b1\u6735\u3002"'>荣华</span>之未落兮，</span><span id="body_111_1" data="means_111_1">相下女之<span class='body-zhushi-span' data='"\u53ef\u4ee5\u8d60\u9001\u3002"'>可诒</span>。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_111_0" data="body_111_0">趁琼枝上花朵还未凋零，</span><span id="means_111_1" data="body_111_1">把能受馈赠的美女找寻。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_112_0" data="means_112_0">吾令<span class='body-zhushi-span' data='"\u4e91\u795e\u3002"'>丰隆</span>乘云兮，</span><span id="body_112_1" data="means_112_1">求<span class='body-zhushi-span' data='"\u795e\u5973\uff0c\u4f0f\u7fb2\u6c0f\u4e4b\u5973\u3002"'>宓妃</span>之所在。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_112_0" data="body_112_0">我命令云师把云车驾起，</span><span id="means_112_1" data="body_112_1">我去寻找宓妃住在何处。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_113_0" data="means_113_0">解佩纕以<span class='body-zhushi-span' data='"\u7ea6\u597d\u4e4b\u8a00\u3002"'>结言</span>兮，</span><span id="body_113_1" data="means_113_1">吾令<span class='body-zhushi-span' data='"\u4f0f\u7fb2\u6c0f\u4e4b\u81e3\u3002"'>謇修</span>以为理。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_113_0" data="body_113_0">解下佩带束好求婚书信，</span><span id="means_113_1" data="body_113_1">我请蹇修前去给我做媒。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_114_0" data="means_114_0">纷总总其离合兮，</span><span id="body_114_1" data="means_114_1">忽<span class='body-zhushi-span' data='"\u4e0d\u76f8\u6295\u5408\u3002"'>纬繣</span>其难迁。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_114_0" data="body_114_0">云霓纷纷簇集忽离忽合，</span><span id="means_114_1" data="body_114_1">很快知道事情乖戾难成。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_115_0" data="means_115_0">夕归<span class='body-zhushi-span' data='"\u4f4f\u5bbf\u3002"'>次</span>于穷石兮，</span><span id="body_115_1" data="means_115_1">朝<span class='body-zhushi-span' data='"\u6d17\u5934\u53d1\u3002"'>濯发</span>乎洧盘。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_115_0" data="body_115_0">晚上宓妃回到穷石住宿，</span><span id="means_115_1" data="body_115_1">清晨到洧盘把头发洗濯。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_116_0" data="means_116_0"><span class='body-zhushi-span' data='"\u4f9d\u4ed7\u3002"'>保</span>厥美以骄傲兮，</span><span id="body_116_1" data="means_116_1">日康娱以淫游。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_116_0" data="body_116_0">宓妃仗着貌美骄傲自大，</span><span id="means_116_1" data="body_116_1">成天放荡不羁寻欢作乐。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_117_0" data="means_117_0">虽信美而无礼兮，</span><span id="body_117_1" data="means_117_1">来违弃而<span class='body-zhushi-span' data='"\u53e6\u5916\u5bfb\u6c42\u3002"'>改求</span>。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_117_0" data="body_117_0">她虽然美丽但不守礼法，</span><span id="means_117_1" data="body_117_1">算了吧放弃她另外求索。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_118_0" data="means_118_0"><span class='body-zhushi-span' data='"\u7ec6\u7ec6\u89c2\u5bdf\u3002"'>览相观</span>于四极兮，</span><span id="body_118_1" data="means_118_1"><span class='body-zhushi-span' data='"\u5468\u6e38\u3002"'>周流</span>乎天余乃下。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_118_0" data="body_118_0">我在天上观察四面八方，</span><span id="means_118_1" data="body_118_1">周游一遍后我从天而降。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_119_0" data="means_119_0">望<span class='body-zhushi-span' data='"\u4ee5\u7389\u780c\u6210\u7684\u53f0\u3002"'>瑶台</span>之<span class='body-zhushi-span' data='"\u76db\u591a\u7f8e\u4e3d\u7684\u6837\u5b50\u3002"'>偃蹇</span>兮，</span><span id="body_119_1" data="means_119_1">见<span class='body-zhushi-span' data='"\u4f20\u8bf4\u4e2d\u7684\u4e0a\u53e4\u56fd\u540d\u3002"'>有娀</span>之佚女。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_119_0" data="body_119_0">遥望华丽巍峨的玉台啊，</span><span id="means_119_1" data="body_119_1">见有娀氏美女住在台上。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_120_0" data="means_120_0">吾令<span class='body-zhushi-span' data='"\u9e1f\u540d\u3002"'>鸩</span>为媒兮，</span><span id="body_120_1" data="means_120_1">鸩告余以不好。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_120_0" data="body_120_0">我请鸩鸟前去给我做媒，</span><span id="means_120_1" data="body_120_1">鸩鸟却说那个美女不好。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_121_0" data="means_121_0">雄鸠之<span class='body-zhushi-span' data='"\u8fb9\u53eb\u8fb9\u98de\u3002"'>鸣逝</span>兮，</span><span id="body_121_1" data="means_121_1">余犹恶其<span class='body-zhushi-span' data='"\u8f7b\u6d6e\u3002"'>佻</span>巧。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_121_0" data="body_121_0">雄鸠叫唤着飞去说媒啊，</span><span id="means_121_1" data="body_121_1">我又嫌它过分诡诈轻佻。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_122_0" data="means_122_0">心<span class='body-zhushi-span' data='"\u62ff\u4e0d\u5b9a\u4e3b\u610f\u3002"'>犹豫</span>而狐疑兮，</span><span id="body_122_1" data="means_122_1">欲<span class='body-zhushi-span' data='"\u4eb2\u81ea\u53bb\u3002"'>自适</span>而不可。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_122_0" data="body_122_0">我心中犹豫而疑惑不定，</span><span id="means_122_1" data="body_122_1">想自己去吧又觉得不妙。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_123_0" data="means_123_0">凤皇既<span class='body-zhushi-span' data='"\u6307\u5b8c\u6210\u8058\u793c\u4e4b\u4e8b\u3002"'>受诒</span>兮，</span><span id="body_123_1" data="means_123_1">恐高辛之先我。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_123_0" data="body_123_0">凤凰已接受托付的聘礼，</span><span id="means_123_1" data="body_123_1">恐怕高辛赶在我前面了。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_124_0" data="means_124_0">欲<span class='body-zhushi-span' data='"\u8fdc\u6b62\u3002"'>远集</span>而无所止兮，</span><span id="body_124_1" data="means_124_1">聊<span class='body-zhushi-span' data='"\u6f2b\u6e38\u3002"'>浮游</span>以逍遥。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_124_0" data="body_124_0">到远方去又无处安居，</span><span id="means_124_1" data="body_124_1">只好四处游荡流浪逍遥。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_125_0" data="means_125_0">及少康之未家兮，</span><span id="body_125_1" data="means_125_1">留<span class='body-zhushi-span' data='"\u4f20\u8bf4\u4e2d\u7684\u4e0a\u53e4\u56fd\u540d\u3002"'>有虞</span>之二姚。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_125_0" data="body_125_0">趁少康还未结婚的时节，</span><span id="means_125_1" data="body_125_1">还留着有虞国两位阿娇。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_126_0" data="means_126_0"><span class='body-zhushi-span' data='"\u6307\u5a92\u4eba\u8f6f\u5f31\u3002"'>理弱</span>而媒拙兮，</span><span id="body_126_1" data="means_126_1">恐<span class='body-zhushi-span' data='"\u5a92\u4eba\u64ae\u5408\u7684\u8a00\u8f9e\u3002"'>导言</span>之不固。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_126_0" data="body_126_0">媒人无能没有灵牙利齿，</span><span id="means_126_1" data="body_126_1">恐怕能说合的希望很小。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_127_0" data="means_127_0">世溷浊而<span class='body-zhushi-span' data='"\u5ac9\u5992\u8d24\u80fd\u3002"'>嫉贤</span>兮，</span><span id="body_127_1" data="means_127_1">好蔽美而<span class='body-zhushi-span' data='"\u79f0\u8d5e\u90aa\u6076\u3002"'>称恶</span>。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_127_0" data="body_127_0">世间混乱污浊嫉贤妒能，</span><span id="means_127_1" data="body_127_1">爱障蔽美德把恶事称道。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_128_0" data="means_128_0"><span class='body-zhushi-span' data='"\u5973\u5b50\u5c45\u4f4f\u7684\u5185\u5ba4\u3002"'>闺中</span>既以邃远兮，</span><span id="body_128_1" data="means_128_1"><span class='body-zhushi-span' data='"\u660e\u667a\u7684\u541b\u738b\u3002"'>哲王</span>又不寤。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_128_0" data="body_128_0">闺中美女既然难以接近，</span><span id="means_128_1" data="body_128_1">贤智君王始终又不醒觉。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_129_0" data="means_129_0">怀朕情而不发兮，</span><span id="body_129_1" data="means_129_1">余焉能忍而与此<span class='body-zhushi-span' data='"\u6c38\u4e45\u3002"'>终古</span>？</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_129_0" data="body_129_0">满腔忠贞激情无处倾诉，</span><span id="means_129_1" data="body_129_1">我怎么能永远忍耐下去！</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_130_0" data="means_130_0">索<span class='body-zhushi-span' data='"\u7075\u8349\u3002"'>琼茅</span>以<span class='body-zhushi-span' data='"\u5c0f\u7af9\u7247\u3002"'>筳</span>篿兮，</span><span id="body_130_1" data="means_130_1">命<span class='body-zhushi-span' data='"\u4f20\u8bf4\u4e2d\u7684\u4e0a\u53e4\u795e\u5deb\u3002"'>灵氛</span>为余占之。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_130_0" data="body_130_0">我找来了灵草和细竹片，</span><span id="means_130_1" data="body_130_1">请求神巫灵氛为我占卜。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_131_0" data="means_131_0">曰：</span><span id="body_131_1" data="means_131_1">“两美其必合兮，</span><span id="body_131_2" data="means_131_2">孰<span class='body-zhushi-span' data='"\u8bda\u7136\u7f8e\u597d\u3002"'>信修</span>而慕之？</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_131_0" data="body_131_0">说：</span><span id="means_131_2" data="body_131_2">听说双方美好必将结合，看谁真正好修必然爱慕。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_132_0" data="means_132_0">思<span class='body-zhushi-span' data='"\u6cdb\u6307\u5929\u4e0b\u3002"'>九州</span>之博大兮，</span><span id="body_132_1" data="means_132_1">岂惟是其有女？”</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_132_0" data="body_132_0">想到天下多么辽阔广大，</span><span id="means_132_1" data="body_132_1">难道只在这里才有娇女？”</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_133_0" data="means_133_0">曰：</span><span id="body_133_1" data="means_133_1">“<span class='body-zhushi-span' data='"\u52aa\u529b\u3002"'>勉</span><span class='body-zhushi-span' data='"\u8fdc\u53bb\u3002"'>远逝</span>而无狐疑兮，</span><span id="body_133_2" data="means_133_2">孰求美而<span class='body-zhushi-span' data='"\u820d\u5f03\u3002"'>释</span>女？</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_133_0" data="body_133_0">说：</span><span id="means_133_2" data="body_133_2">谁寻求美人会把你放弃？</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_134_0" data="means_134_0"><span class='body-zhushi-span' data='"\u4f55\u5904\u3002"'>何所</span>独无芳草兮，</span><span id="body_134_1" data="means_134_1">尔何怀乎<span class='body-zhushi-span' data='"\u6545\u56fd\u3002"'>故宇</span>？”</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_134_0" data="body_134_0">世间什么地方没有芳草，</span><span id="means_134_1" data="body_134_1">你又何必苦苦怀恋故地？”</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_135_0" data="means_135_0">世幽昧以<span class='body-zhushi-span' data='"\u60d1\u4e71\u6d51\u6d4a\u3002"'>昡曜</span>兮，</span><span id="body_135_1" data="means_135_1">孰云察余之善恶？</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_135_1" data="body_135_1">谁又能够了解我们底细？</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_136_0" data="means_136_0">民好恶其不同兮，</span><span id="body_136_1" data="means_136_1">惟此<span class='body-zhushi-span' data='"\u670b\u515a\u4e4b\u4eba\u3002"'>党人</span>其独异！</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_136_0" data="body_136_0">人们的好恶本来不相同，</span><span id="means_136_1" data="body_136_1">只是这邦小人更加怪异。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_137_0" data="means_137_0">户服艾以盈要兮，</span><span id="body_137_1" data="means_137_1">谓幽兰其不可佩。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_137_0" data="body_137_0">人人都把艾草挂满腰间，</span><span id="means_137_1" data="body_137_1">说幽兰是不可佩的东西。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_138_0" data="means_138_0"><span class='body-zhushi-span' data='"\u5bdf\u770b\u3002"'>览察</span>草木其犹未得兮，</span><span id="body_138_1" data="means_138_1">岂<span class='body-zhushi-span' data='"\u5373\u201c\u7f8e\u73f5\u201d\uff0c\u7f8e\u7389\u3002"'>珵美</span>之能当？</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_138_0" data="body_138_0">对草木好坏还分辨不清，</span><span id="means_138_1" data="body_138_1">怎么能够正确评价玉器？</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_139_0" data="means_139_0">苏<span class='body-zhushi-span' data='"\u7caa\u571f\u3002"'>粪壤</span>以充祎兮，</span><span id="body_139_1" data="means_139_1">谓<span class='body-zhushi-span' data='"\u7533\u5730\u4e4b\u6912\u3002"'>申椒</span>其不芳。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_139_0" data="body_139_0">用粪土塞满自己的香袋，</span><span id="means_139_1" data="body_139_1">反说佩的申椒没有香气。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_140_0" data="means_140_0">欲从灵氛之<span class='body-zhushi-span' data='"\u6307\u4e24\u7f8e\u5fc5\u5408\u800c\u8a00\u3002"'>吉占</span>兮，</span><span id="body_140_1" data="means_140_1">心犹豫而狐疑。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_140_0" data="body_140_0">想听从灵氛占卜的好卦，</span><span id="means_140_1" data="body_140_1">我心中犹豫而疑惑不定，</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_141_0" data="means_141_0"><span class='body-zhushi-span' data='"\u53e4\u795e\u5deb\u3002"'>巫咸</span>将<span class='body-zhushi-span' data='"\u508d\u665a\u4ece\u5929\u800c\u964d\u3002"'>夕降</span>兮，</span><span id="body_141_1" data="means_141_1">怀椒糈而要之。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_141_0" data="body_141_0">听说巫咸今晚将要降神，</span><span id="means_141_1" data="body_141_1">我带着花椒精米去接他。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_142_0" data="means_142_0"><span class='body-zhushi-span' data='"\u6307\u5929\u4e0a\u7684\u4f17\u795e\u3002"'>百神</span>翳其备降兮，</span><span id="body_142_1" data="means_142_1">九疑缤其<span class='body-zhushi-span' data='"\u4e00\u8d77\u6765\u8fce\u63a5\u3002"'>并迎</span>。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_142_0" data="body_142_0">天上诸神遮天蔽日齐降，</span><span id="means_142_1" data="body_142_1">九疑山的众神纷纷迎迓。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_143_0" data="means_143_0">皇剡剡其扬灵兮，</span><span id="body_143_1" data="means_143_1">告余以<span class='body-zhushi-span' data='"\u660e\u541b\u9047\u8d24\u81e3\u7684\u5409\u7965\u6545\u4e8b\u3002"'>吉故</span>。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_143_0" data="body_143_0">他们灵光闪闪显示神灵，</span><span id="means_143_1" data="body_143_1">巫咸又告诉我不少佳话。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_144_0" data="means_144_0">曰：</span><span id="body_144_1" data="means_144_1">“勉升降以上下兮，</span><span id="body_144_2" data="means_144_2">求矩<span class='body-zhushi-span' data='"\u5ea6\u3002"'>矱</span>之所同。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_144_0" data="body_144_0">说：</span><span id="means_144_2" data="body_144_2">去寻求意气相投的同道。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_145_0" data="means_145_0">汤、</span><span id="body_145_1" data="means_145_1">禹俨而求合兮，</span><span id="body_145_2" data="means_145_2"><span class='body-zhushi-span' data='"\u4f0a\u5c39\u540d\u3002"'>挚</span>、</span><span id="body_145_3" data="means_145_3"><span class='body-zhushi-span' data='"\u590f\u79b9\u4e4b\u81e3\u3002"'>咎繇</span>而能调。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_145_0" data="body_145_0">汤帝、</span><span id="means_145_1" data="body_145_1">大禹庄严并且谋求志同道合的人，</span><span id="means_145_2" data="body_145_2">得到伊尹、</span><span id="means_145_3" data="body_145_3">皋陶君臣协调。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_146_0" data="means_146_0">苟中情其好修兮，</span><span id="body_146_1" data="means_146_1">又何必用夫行媒？</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_146_0" data="body_146_0">只要内心善良爱好修洁，</span><span id="means_146_1" data="body_146_1">又何必一定要媒人介绍？</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_147_0" data="means_147_0">说<span class='body-zhushi-span' data='"\u6301\uff0c\u62ff\u3002"'>操</span>筑于傅岩兮，</span><span id="body_147_1" data="means_147_1">武丁用而不疑。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_147_0" data="body_147_0">傅说拿祷杵在傅岩筑墙，</span><span id="means_147_1" data="body_147_1">武丁毫不犹豫用他为相。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_148_0" data="means_148_0"><span class='body-zhushi-span' data='"\u6307\u5415\u5c1a\u3002"'>吕望</span>之鼓刀兮，</span><span id="body_148_1" data="means_148_1">遭周文而得<span class='body-zhushi-span' data='"\u4e3e\u7528\u3002"'>举</span>。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_148_0" data="body_148_0">太公吕望曾经做过屠夫，</span><span id="means_148_1" data="body_148_1">他被任用是遇到周文王。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_149_0" data="means_149_0"><span class='body-zhushi-span' data='"\u6625\u79cb\u65f6\u536b\u4eba\uff0c\u9f50\u6853\u516c\u8ba4\u4e3a\u8d24\u4eba\uff0c\u4ee5\u4ed6\u4e3a\u537f\u3002"'>宁戚</span>之讴歌兮，</span><span id="body_149_1" data="means_149_1">齐桓闻以<span class='body-zhushi-span' data='"\u5468\u8be6\u3002"'>该</span>辅。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_149_0" data="body_149_0">宁戚喂牛敲着牛角歌唱，</span><span id="means_149_1" data="body_149_1">齐桓公听见后任为大夫。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_150_0" data="means_150_0">及年岁之未<span class='body-zhushi-span' data='"\u665a\u3002"'>晏</span>兮，</span><span id="body_150_1" data="means_150_1">时亦犹其<span class='body-zhushi-span' data='"\u672a\u5c3d\u3002"'>未央</span>。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_150_0" data="body_150_0">趁现在年轻大有作为啊，</span><span id="means_150_1" data="body_150_1">施展才能还有大好时光。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_151_0" data="means_151_0">恐鹈鴃之先<span class='body-zhushi-span' data='"\u54cd\u8d77\u3002"'>鸣</span>兮，</span><span id="body_151_1" data="means_151_1">使夫百草<span class='body-zhushi-span' data='"\u56e0\u6b64\u3002"'>为之</span>不芳。”</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_151_0" data="body_151_0">只怕杜鹃它叫得太早啊，</span><span id="means_151_1" data="body_151_1">使得百草因此不再芳香。”</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_152_0" data="means_152_0">何琼佩之偃蹇兮，</span><span id="body_152_1" data="means_152_1">众<span class='body-zhushi-span' data='"\u906e\u853d\u3002"'>薆</span>然而蔽之。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_152_0" data="body_152_0">“为什么这样美好的琼佩，</span><span id="means_152_1" data="body_152_1">人们却要掩盖它的光辉。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_153_0" data="means_153_0">惟此党人之不<span class='body-zhushi-span' data='"\u4fe1\u3002"'>谅</span>兮，</span><span id="body_153_1" data="means_153_1">恐嫉妒而<span class='body-zhushi-span' data='"\u6467\u6bc1\u3002"'>折</span>之。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_153_0" data="body_153_0">想到这帮小人不讲信义，</span><span id="means_153_1" data="body_153_1">唯恐我嫉妒我便诋毁我。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_154_0" data="means_154_0">时缤纷其<span class='body-zhushi-span' data='"\u53d8\u5316\u3002"'>变易</span>兮，</span><span id="body_154_1" data="means_154_1">又何可以淹留？</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_154_0" data="body_154_0">时世纷乱而变化无常啊，</span><span id="means_154_1" data="body_154_1">我怎么可以在这里久留。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_155_0" data="means_155_0">兰芷变而不芳兮，</span><span id="body_155_1" data="means_155_1">荃蕙化而为<span class='body-zhushi-span' data='"\u6bd4\u55bb\u5df2\u7ecf\u8715\u5316\u53d8\u8d28\u7684\u8c17\u4f5e\u4e4b\u4eba\u3002"'>茅</span>。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_155_0" data="body_155_0">兰草和芷草失掉了芬芳，</span><span id="means_155_1" data="body_155_1">荃草和惠草也变成茅莠。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_156_0" data="means_156_0">何昔日之芳草兮，</span><span id="body_156_1" data="means_156_1">今直为此萧艾也？</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_156_0" data="body_156_0">为什么从前的这些香草，</span><span id="means_156_1" data="body_156_1">今天全都成为荒蒿野艾。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_157_0" data="means_157_0">岂其有<span class='body-zhushi-span' data='"\u5176\u4ed6\u7684\u7406\u7531\u3002"'>他故</span>兮，</span><span id="body_157_1" data="means_157_1">莫好修之<span class='body-zhushi-span' data='"\u5f0a\u7aef\u3002"'>害</span>也！</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_157_0" data="body_157_0">难道还有什么别的理由，</span><span id="means_157_1" data="body_157_1">不爱好修洁造成的祸害。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_158_0" data="means_158_0">余以兰为可恃兮，</span><span id="body_158_1" data="means_158_1">羌<span class='body-zhushi-span' data='"\u4e0d\u7ed3\u679c\u5b9e\u3002"'>无实</span>而容长。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_158_0" data="body_158_0">我还以为兰草最可依靠，</span><span id="means_158_1" data="body_158_1">谁知华而不实虚有其表。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_159_0" data="means_159_0"><span class='body-zhushi-span' data='"\u4e22\u5f03\u3002"'>委</span>厥美以从俗兮，</span><span id="body_159_1" data="means_159_1">苟得列乎众芳。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_159_0" data="body_159_0">兰草抛弃美质追随世俗，</span><span id="means_159_1" data="body_159_1">勉强列入众芳辱没香草。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_160_0" data="means_160_0">椒专佞以慢慆兮，</span><span id="body_160_1" data="means_160_1"><span class='body-zhushi-span' data='"\u8331\u8438\u3002"'>樧</span>又欲充夫佩帏。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_160_0" data="body_160_0">花椒专横谄媚十分傲慢，</span><span id="means_160_1" data="body_160_1">茱萸想进香袋冒充香草。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_161_0" data="means_161_0">既<span class='body-zhushi-span' data='"\u6c42\u8fdb\u3002"'>干进</span>而<span class='body-zhushi-span' data='"\u94bb\u8425\u3002"'>务入</span>兮，</span><span id="body_161_1" data="means_161_1">又何芳之能祗？</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_161_0" data="body_161_0">它们既然这么热心钻营，</span><span id="means_161_1" data="body_161_1">又有什么香草重吐芳馨。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_162_0" data="means_162_0">固时俗之流从兮，</span><span id="body_162_1" data="means_162_1">又孰能无变化？</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_162_0" data="body_162_0">本来世态习俗随波逐流，</span><span id="means_162_1" data="body_162_1">又还有谁能够意志坚定？</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_163_0" data="means_163_0">览椒兰其若兹兮，</span><span id="body_163_1" data="means_163_1">又况<span class='body-zhushi-span' data='"\u6bd4\u55bb\u81ea\u5df1\u57f9\u80b2\u7684\u4e00\u822c\u4eba\u624d\u3002"'>揭车与江离</span>？</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_163_0" data="body_163_0">看到香椒兰草变成这样，</span><span id="means_163_1" data="body_163_1">何况揭车江离能不变心？</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_164_0" data="means_164_0">惟<span class='body-zhushi-span' data='"\u55bb\u6307\u5c48\u539f\u7684\u5185\u7f8e\u4e0e\u8ffd\u6c42\u3002"'>兹佩</span>之可贵兮，</span><span id="body_164_1" data="means_164_1">委厥美而<span class='body-zhushi-span' data='"\u9009\u62e9\u3002"'>历</span>兹。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_164_0" data="body_164_0">只有我的佩饰最可贵啊，</span><span id="means_164_1" data="body_164_1">持它的美德直到如今。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_165_0" data="means_165_0"><span class='body-zhushi-span' data='"\u6307\u9999\u6c14\u6d53\u90c1\u3002"'>芳菲菲</span>而难亏兮，</span><span id="body_165_1" data="means_165_1">芬至今犹未<span class='body-zhushi-span' data='"\u6d88\u5931\u3002"'>沬</span>。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_165_0" data="body_165_0">浓郁的香气难以消散啊，</span><span id="means_165_1" data="body_165_1">到今天还在散发出芳馨。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_166_0" data="means_166_0"><span class='body-zhushi-span' data='"\u6307\u8c03\u8282\u81ea\u5df1\u7684\u5fc3\u6001\uff0c\u7f13\u548c\u81ea\u5df1\u7684\u5fc3\u60c5"'>和调度</span>以<span class='body-zhushi-span' data='"\u81ea\u4e50\u3002"'>自娱</span>兮，</span><span id="body_166_1" data="means_166_1"><span class='body-zhushi-span' data='"\u59d1\u4e14\u3002"'>聊</span>浮游而<span class='body-zhushi-span' data='"\u5bfb\u6c42\u7f8e\u5973\u3002"'>求女</span>。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_166_0" data="body_166_0">我调度和谐地自我欢娱，</span><span id="means_166_1" data="body_166_1">姑且飘游四方寻求美女。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_167_0" data="means_167_0">及余饰之方壮兮，</span><span id="body_167_1" data="means_167_1">周流观乎上下。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_167_0" data="body_167_0">趁着我的佩饰还很盛美，</span><span id="means_167_1" data="body_167_1">我要周游观访上天下地。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_168_0" data="means_168_0">灵氛既告余以吉占兮，</span><span id="body_168_1" data="means_168_1">历吉日乎吾将行。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_168_0" data="body_168_0">灵氛已告诉我占得吉卦，</span><span id="means_168_1" data="body_168_1">选个好日子我准备出发。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_169_0" data="means_169_0">折琼枝以为<span class='body-zhushi-span' data='"\u901a\u201c\u9990\u201d\uff0c\u6307\u7f8e\u98df\u3002"'>羞</span>兮，</span><span id="body_169_1" data="means_169_1">精<span class='body-zhushi-span' data='"\u7389\u5c51\u3002"'>琼爢</span>以为粻。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_169_0" data="body_169_0">折下玉树枝叶作为肉脯，</span><span id="means_169_1" data="body_169_1">我舀碎美玉把干粮备下。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_170_0" data="means_170_0">为余驾<span class='body-zhushi-span' data='"\u957f\u7fc5\u8180\u7684\u9f99\u3002"'>飞龙</span>兮，</span><span id="body_170_1" data="means_170_1">杂瑶<span class='body-zhushi-span' data='"\u8c61\u7259\u3002"'>象</span>以为车。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_170_0" data="body_170_0">给我驾车啊用飞龙为马，</span><span id="means_170_1" data="body_170_1">车上装饰着美玉和象牙。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_171_0" data="means_171_0">何<span class='body-zhushi-span' data='"\u4e0d\u540c\u7684\u53bb\u5411\u3002"'>离心</span>之可同兮？</span><span id="body_171_1" data="means_171_1">吾将远逝以自疏。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_171_0" data="body_171_0">彼此不同心怎能配合啊？</span><span id="means_171_1" data="body_171_1">我将要远去主动离开他。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_172_0" data="means_172_0"><span class='body-zhushi-span' data='"\u695a\u5730\u65b9\u8a00\uff0c\u8f6c\u5411\u3002"'>邅</span>吾道夫昆仑兮，</span><span id="body_172_1" data="means_172_1">路修远以周流。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_172_0" data="body_172_0">我把行程转向昆仑山下，</span><span id="means_172_1" data="body_172_1">路途遥远继续周游观察。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_173_0" data="means_173_0">扬云霓之<span class='body-zhushi-span' data='"\u65cc\u65d7\u853d\u65e5\u8c8c\u3002"'>晻蔼</span>兮，</span><span id="body_173_1" data="means_173_1">鸣玉鸾之啾啾。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_173_0" data="body_173_0">云霞虹霓飞扬遮住阳光，</span><span id="means_173_1" data="body_173_1">车上玉铃丁当响声错杂。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_174_0" data="means_174_0">朝发轫于<span class='body-zhushi-span' data='"\u5929\u6cb3\u7684\u6e21\u53e3\u3002\u5728\u4e1c\u6781\u8401\u3001\u6597\u4e4b\u95f4\u3002"'>天津</span>兮，</span><span id="body_174_1" data="means_174_1">夕余至乎<span class='body-zhushi-span' data='"\u897f\u65b9\u7684\u5c3d\u5934\u3002"'>西极</span>。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_174_0" data="body_174_0">清晨从天河的渡口出发，</span><span id="means_174_1" data="body_174_1">最远的西边我傍晚到达。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_175_0" data="means_175_0">凤皇<span class='body-zhushi-span' data='"\u53e4\u4ee3\u4e00\u79cd\u65d7\u5e1c\u3002"'>翼</span>其承旗兮，</span><span id="body_175_1" data="means_175_1">高翱翔之<span class='body-zhushi-span' data='"\u548c\u8c8c\u3002"'>翼翼</span>。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_175_0" data="body_175_0">凤凰展翅承托着旌旗啊，</span><span id="means_175_1" data="body_175_1">长空翱翔有节奏地上下。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_176_0" data="means_176_0">忽吾行此<span class='body-zhushi-span' data='"\u6307\u897f\u6781\uff0c\u5176\u5904\u6d41\u6c99\u5982\u6c34\u3002"'>流沙</span>兮，</span><span id="body_176_1" data="means_176_1">遵<span class='body-zhushi-span' data='"\u51fa\u6606\u4ed1\u5c71\u3002"'>赤水</span>而<span class='body-zhushi-span' data='"\u6e38\u620f\u8c8c\u3002"'>容与</span>。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_176_0" data="body_176_0">忽然我来到这流沙地段，</span><span id="means_176_1" data="body_176_1">只得沿着赤水行进缓缓。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_177_0" data="means_177_0"><span class='body-zhushi-span' data='"\u6307\u6325\u3002"'>麾</span>蛟龙使梁津兮，</span><span id="body_177_1" data="means_177_1">诏<span class='body-zhushi-span' data='"\u5e1d\u5c11\u55e5\u3002"'>西皇</span>使涉予。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_177_0" data="body_177_0">指挥蛟龙在渡口上架桥，</span><span id="means_177_1" data="body_177_1">命令西皇将我渡到对岸。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_178_0" data="means_178_0">路修远以多艰兮，</span><span id="body_178_1" data="means_178_1"><span class='body-zhushi-span' data='"\u98de\u9a70\u3002"'>腾</span>众车使径待。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_178_0" data="body_178_0">路途多么遥远又多艰险，</span><span id="means_178_1" data="body_178_1">我传令众车在路旁等待。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_179_0" data="means_179_0">路<span class='body-zhushi-span' data='"\u5c71\u540d\uff0c\u5728\u6606\u4ed1\u897f\u5317\u3002"'>不周</span>以左转兮，</span><span id="body_179_1" data="means_179_1">指<span class='body-zhushi-span' data='"\u795e\u8bdd\u4e2d\u897f\u65b9\u4e4b\u6d77\u3002"'>西海</span>以为期。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_179_0" data="body_179_0">经过不周山向左转去啊，</span><span id="means_179_1" data="body_179_1">我的目的地已指定西海。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_180_0" data="means_180_0">屯余车其千乘兮，</span><span id="body_180_1" data="means_180_1">齐玉<span class='body-zhushi-span' data='"\u8f66\u8f6e\u3002"'>轪</span>而并驰。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_180_0" data="body_180_0">我再把成千辆车子聚集，</span><span id="means_180_1" data="body_180_1">把玉轮对齐了并驾齐驱。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_181_0" data="means_181_0">驾八龙之<span class='body-zhushi-span' data='"\u5728\u524d\u8fdb\u65f6\u873f\u8712\u66f2\u6298\u7684\u6837\u5b50\u3002"'>婉婉</span>兮，</span><span id="body_181_1" data="means_181_1">载云旗之<span class='body-zhushi-span' data='"\u65d7\u5e1c\u98d8\u626c\u8212\u5377\u7684\u6837\u5b50\u3002"'>委蛇</span>。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_181_0" data="body_181_0">驾车的八龙蜿蜒地前进，</span><span id="means_181_1" data="body_181_1">载着云霓旗帜随风卷曲。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_182_0" data="means_182_0">抑志而<span class='body-zhushi-span' data='"\u653e\u4e0b\u8d76\u8f66\u7684\u9a6c\u97ad\uff0c\u4f7f\u8f66\u505c\u6b62\u3002"'>弭节</span>兮，</span><span id="body_182_1" data="means_182_1"><span class='body-zhushi-span' data='"\u795e\u601d\uff0c\u6307\u4eba\u7684\u7cbe\u795e\u3002"'>神</span>高驰之<span class='body-zhushi-span' data='"\u6d69\u6e3a\u65e0\u9645\u7684\u6837\u5b50\u3002"'>邈邈</span>。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_182_0" data="body_182_0">定下心来啊慢慢地前行，</span><span id="means_182_1" data="body_182_1">难控制飞得远远的思绪。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_183_0" data="means_183_0">奏《九歌》而舞《韶》兮，</span><span id="body_183_1" data="means_183_1">聊<span class='body-zhushi-span' data='"\u72b9\u8a00\u501f\u6b64\u65f6\u673a\u3002"'>假日</span>以偷乐。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_183_0" data="body_183_0">演奏着《九歌》跳起《韶》舞啊，</span><span id="means_183_1" data="body_183_1">且借大好时光寻求欢娱。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_184_0" data="means_184_0">陟升皇之<span class='body-zhushi-span' data='"\u5f62\u5bb9\u5149\u660e\u3002"'>赫戏</span>兮，</span><span id="body_184_1" data="means_184_1">忽临睨夫<span class='body-zhushi-span' data='"\u6307\u695a\u56fd\u3002"'>旧乡</span>。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_184_0" data="body_184_0">太阳东升照得一片明亮，</span><span id="means_184_1" data="body_184_1">忽然看见我思念的故乡。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_185_0" data="means_185_0"><span class='body-zhushi-span' data='"\u5fa1\u8005\u3002"'>仆</span>夫悲余马怀兮，</span><span id="body_185_1" data="means_185_1"><span class='body-zhushi-span' data='"\u5377\u5c48\u4e0d\u884c\u8c8c\u3002"'>蜷局</span>顾而不行。</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_185_0" data="body_185_0">我的仆从悲伤马也感怀，</span><span id="means_185_1" data="body_185_1">退缩回头不肯走向前方。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_186_0" data="means_186_0"><span class='body-zhushi-span' data='"\u7ec8\u7bc7\u7684\u7ed3\u8bed\u3002"'>乱</span>曰：</span><span id="body_186_1" data="means_186_1"><span class='body-zhushi-span' data='"\u7edd\u671b\u4e4b\u8bcd\uff0c\u8c13\u201c\u7b97\u4e86\u5427\u201d\u3002"'>已矣</span>哉！</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_186_0" data="body_186_0">尾声：</span><span id="means_186_1" data="body_186_1">算了吧！</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_187_0" data="means_187_0"><span class='body-zhushi-span' data='"\u56fd\u5bb6\u65e0\u4eba\u3002"'>国无人</span>莫我知兮，</span><span id="body_187_1" data="means_187_1">又何怀乎故都！</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_187_0" data="body_187_0">国内既然没有人了解我，</span><span id="means_187_1" data="body_187_1">我又何必怀念故国旧居。</span>                </p>
                                <p class="poem-detail-main-text" id="body_p">
                    <span id="body_188_0" data="means_188_0">既莫<span class='body-zhushi-span' data='"\u8db3\u4ee5\u3002"'>足</span>与为美政兮，</span><span id="body_188_1" data="means_188_1">吾将从彭咸之所<span class='body-zhushi-span' data='"\u4f4f\u6240\uff0c\u8fd9\u91cc\u662f\u6307\u4e00\u751f\u6240\u9009\u62e9\u7684\u9053\u8def\u548c\u5f52\u5bbf\u3002"'>居</span>！</span>                </p>
                <p id="means_p" class="poem-detail-main-text body-means-p">
                    <span id="means_188_0" data="body_188_0">既然不能实现理想政治，</span><span id="means_188_1" data="body_188_1">我将追随彭成安排自己！</span>                </p>
                            </div>

<hr>
<p style=text-align:center><em>假如生命只剩最后一天<br>我希望自己能留下些东西<br>能有所贡献能证明自己活过<br>在剩下的时间<br>能不违背自己的内心<br>如果留下来的是自己嫌弃厌恶的垃圾<br>我很痛苦<br><br>灌水 是我所厌恶的<br>我觉得弄脏了自己的双手和内心<br>现在我没有选择<br>我很讨厌这样的自己</em></p>

<hr>
<p>2022&#x2F;4&#x2F;7</p>
]]></content>
      <categories>
        <category>生活和诗歌</category>
      </categories>
  </entry>
  <entry>
    <title>杂谈</title>
    <url>/2022/04/28/Mo/</url>
    <content><![CDATA[<p>生活不可能像你想象得那么好，但也不会像你想象得那么糟。</p>
<span id="more"></span>

<p>莫泊桑《一生》里有一段话，这几年过来感悟越来越深。前些年一直刷新前半句的认知，最近重新理解了后半句。</p>
<blockquote>
<p>生活不可能像你想象得那么好，但也不会像你想象得那么糟。</p>
<p>我觉得人的脆弱和坚强都超乎自己的想象。</p>
<p>有时，我可能脆弱得一句话就泪流满面，有时，也发现自己咬着牙走了很长的路。</p>
</blockquote>
<hr>
<p>2022&#x2F;4&#x2F;28</p>
<p>西走菜菜</p>
]]></content>
      <categories>
        <category>生活和诗歌</category>
      </categories>
  </entry>
  <entry>
    <title>月报</title>
    <url>/2022/03/31/Monthly-reports/</url>
    <content><![CDATA[<p>这个帖子只谈自己的发展，注意力只集中在眼前和毕业找工作。</p>
<span id="more"></span>

<h2 id="2022-x2F-3-x2F-31"><a href="#2022-x2F-3-x2F-31" class="headerlink" title="2022&#x2F;3&#x2F;31"></a>2022&#x2F;3&#x2F;31</h2><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=298 height=52 src="//music.163.com/outchain/player?type=2&id=1354659540&auto=1&height=32"></iframe>

<p>转眼研二下了，时间所剩不多了，之前大把的时间画在碰壁，走弯路，和自己的调整上，回顾都觉得太苦了，苦到不敢回想。收获就是现在整个人更麻木，情绪很难有大的起伏（反正除了自己放弃怎么都能赖活着），更认清自己了，知道自己很脆弱，看到适合自己的路。</p>
<p>时间很紧，必须得开始追进度了。</p>
<p>也因为项目必须的实验和师兄们毕业的焦虑，只能放下了之前因被程过河拆桥被夺走论文而对DRL和论文产生的畏惧，下决心想想写几篇水一水，达到毕业条件，只有自己才能救自己啊。也因此，想写这篇月结看看进度，重新开始督促懒散成习惯的自己。</p>
<h3 id="未完成的目标："><a href="#未完成的目标：" class="headerlink" title="未完成的目标："></a>未完成的目标：</h3><ul>
<li>2022年7月，小论文；</li>
<li>项目论文；</li>
<li>毕业论文；</li>
<li>工作：力扣，八股文。</li>
</ul>
<hr>
<h3 id="回顾3月："><a href="#回顾3月：" class="headerlink" title="回顾3月："></a>回顾3月：</h3><ol>
<li>项目论文实验：过去几周，做出了实验，就到此为止，剩余实验工作：1实验图像美化，2论文图片重画，3细扣模型参数，实验设置合理性。</li>
<li>工作方面：草草过了1.5遍java，力扣刷了70来题，一轮都没完，刚刷完树层次遍历，费劲，不过能感觉到写代码的乐趣，不看题解自己写出来、提交后收到超过别人百分比鼓励、自己总结给别人写写题解想到可能能帮到别人，都挺快乐的，之前从未有过，还挺好的；八股文最近断断续续过了java基础，发现很多coding不理解的东西八股文里有写。</li>
<li>博客方面：目前的效果我很满意，每天的乐趣来源就是给博客加加新功能。从0到1，学了浅浅的前端和markdown，对了配了GitHub图床，或许会成为未来的铺垫吧。</li>
<li>毕业和论文方面：近度为0。</li>
<li>游戏和其它：日常封校，在地平线4里开开车挺好的，就是太累人了，想看看电影电视剧又没什么好看的，羽毛球现在提不起兴趣。给电脑升级了1t的固态和电池，跑代码，看视频，搭环境什么都很舒服，毕业前放心coding。</li>
<li>心理状态：恢复了，不迷茫了，忙点累点挺好的，我太闲了会出问题。变化的因为是，受了刺激，太想和莹莹走到一起，所以必须得靠自己克服异地这个巨大的困难，具体的解决路线(专注自身)：解决异地问题-&gt;赚钱余额支撑安全感-&gt;工作赚钱-&gt;毕业条件。所以现在满脑子都是毕业和工作，之前绕过的弯路太多了，所以现在时间特赶，对校园生活和社交完全失去了兴趣，也不想在实验室或者和导师的人际关系上消耗任何时间精力。只跑主线。效率！效率！效率！</li>
</ol>
<hr>
<h3 id="之后计划："><a href="#之后计划：" class="headerlink" title="之后计划："></a>之后计划：</h3><ol>
<li><strong>项目论文写作</strong>：没有参考的就东拼西凑硬着头皮写，项目的东西，收起自己的强迫症，一切以合理有说服力为标准，而不是让自己满意或者提升自己之类的。写出来完事！</li>
<li><strong>工作方面</strong>：力扣，八股文，一轮继续，暂时顾不上做java的项目，先不管了。</li>
<li>博客方面：看心情更新，可能还能给我充一段时间的电。</li>
<li>毕业和论文方面：小论文理论梳理一下，好好思考一年前的复杂优化到最后为什么会失败，克服恐惧的办法就是面对恐惧。试试实验，万一运气好出来了。应用背景方面，有些迷茫。<strong>思考一下也先水出一篇达到毕业条件。</strong></li>
<li>其它：没什么大问题，经常忘记吃饭不太好。还是每周重新一规划。</li>
</ol>
<hr>
<p>对了，博客评论，不知道是我手机运营商的问题还是什么，手机流量不加载评论，但是WiFi可以。</p>
]]></content>
      <categories>
        <category>生活和诗歌</category>
      </categories>
  </entry>
  <entry>
    <title>地球上的星星</title>
    <url>/2022/04/11/Movie-home-loneliness/</url>
    <content><![CDATA[<p>我看到孩子天生对世界充满了好奇心和探索欲，一个天真的生命原本就具有对其他生命的体察，对自然、对美的感知，他会非常专注地沉浸在自己看到的、觉察到的世界中，这些都是孩子十分可贵的品质。</p>
<span id="more"></span>

<p>他从不被条条框框束缚，尽情发挥自己的奇思妙想，拥有无穷的想象力和创造力，拥有一个丰富的、充盈的内心世界。</p>
<p>那么他是怎么变成大人眼中的“坏孩子”的呢？因为他从没有被理解、被尊重过，没有人去发现他的天赋和才能，只看到他不符合标准的部分，只用成绩衡量，只看结果，从来不寻找原因，一味指责、专制、武断，不断地否定他，指望自己的恐吓、暴力能成功教育好一个孩子，在流水线上用成功的模板打造他的样子，也不将孩子视为独立的生命体，而是作为自己生命的延伸，将自己的期望和想法强加到孩子身上。这样的行为并不是真正的关心和爱，要明白每个孩子都是特别的，都有自己的天分，都会按照自己的步调成长，不是大人以为的千篇一律，强行纠正只能扼杀孩子原本的天分、限制孩子的发展，我们要做的是真正的关爱、观察、耐心倾听、理解、尊重、引导、鼓励、肯定以及因材施教。我们需要在他人生的初始阶段，提供适宜他成长的环境，用积极的教育态度，激发他内在的生命力，这些时光是促进他的完整人格发展的基础，将成为他一生宝贵的精神财富，未来无论他处于何地，面对什么问题，他都能从中汲取勇气和动力，支撑着他渡过难关，最终能够自我发展、自我实现，过有价值的人生。</p>
<hr>
<p>Rosa:<br>地球上的星星</p>
<p>Rosa:<br>很让人感动的一个电影</p>
<p>Rosa:<br>我相信每一个人都会有自己触动的点，在这个电影里面</p>
<p>Rosa:<br>可以把这个电影的链接还有观后感放在你的那个网站</p>
<p>Rosa:<br>还有体检报告出来了，不容乐观</p>
<hr>
<p>–来自百度网盘超级会员V6的分享<br>hi，这是我用百度网盘分享的内容~复制这段内容打开「百度网盘」APP即可获取<br>链接:<a href="https://pan.baidu.com/s/1oiTtuta1xGx_fOBeTCZaBg?pwd=8841">https://pan.baidu.com/s/1oiTtuta1xGx_fOBeTCZaBg?pwd=8841</a><br>提取码:8841</p>
<hr>
<p>小伙伴Rosa被一个人隔离在广州了，真不容易。</p>
<p>2022&#x2F;4&#x2F;11</p>
]]></content>
      <categories>
        <category>小伙伴</category>
      </categories>
  </entry>
  <entry>
    <title>电影推荐</title>
    <url>/2022/03/21/Movie-recommendation/</url>
    <content><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203211728677.jpg" alt="bccb5d7c45d22efb3fa94de5401658a"></p>
<hr>
<span id="more"></span>

<p>这是我的好朋友，买手机找他，便宜且很靠谱~我和家人换新机都找他。</p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203211733922.jpg" alt="14452845a506cefc10220686ce97f8a"></p>
<hr>
<p>数码小王</p>
<p>2022&#x2F;3&#x2F;21</p>
]]></content>
      <categories>
        <category>小伙伴</category>
      </categories>
  </entry>
  <entry>
    <title>音乐贴(更)</title>
    <url>/2022/03/29/Music/</url>
    <content><![CDATA[<h2 id="来听歌吧"><a href="#来听歌吧" class="headerlink" title="来听歌吧~"></a>来听歌吧~</h2><p>在评论区留言音乐或者任何形式，随意点，我会把它加到帖子里并@你，<strong>如果有什么想说的，或者图片，那再好不过了，毕竟只有声音太干瘪了，灵魂是讲故事和听故事的人赋予的。</strong>我一定会一并贴上去。</p>
<span id="more"></span>

<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=450 src="//music.163.com/outchain/player?type=0&id=7357321749&auto=1&height=430"></iframe>

<p>突然意识到一件事，既然都是用网易云音乐外链，而且这篇帖子专门放出来一起分享取乐的，干嘛不直接外链个歌单呢？</p>
<p>另外新增了音乐的菜单栏，enjoy~</p>
<p>我创建了共享歌单《博客音乐贴》<a href="http://music.163.com/m/playlist?app_version=8.7.01&amp;id=7357321749&amp;userid=132004956&amp;creatorId=132004956&amp;&amp;sharedId=ha1ZWdKD4Rr4SAk78M18St%EF%BC%8C%E9%82%80%E8%AF%B7%E4%BD%A0%E4%B8%80%E8%B5%B7%E7%AE%A1%E7%90%86%E5%93%A6~%EF%BC%88@%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90%EF%BC%89">http://music.163.com/m/playlist?app_version=8.7.01&amp;id=7357321749&amp;userid=132004956&amp;creatorId=132004956&amp;&amp;sharedId=ha1ZWdKD4Rr4SAk78M18St，邀请你一起管理哦~（@网易云音乐）</a></p>
<p>需要手机点开，直接加入歌单编辑吧，目前暂不清楚人数上限。</p>
<p>也算是份回忆吧。</p>
<p>之后这个歌单。如果转化成博客背景音乐也方便很多。</p>
<hr>
<p>2022&#x2F;3&#x2F;30</p>
<p>如果博客留言的话，</p>
<p>注意直接留言音乐外链，不会成功。</p>
<p>需要不是VIP的音乐，再次谴责违背互联网开源精神。</p>
<p>实现方式可以参考<a href="https://yongtaiq.github.io/2022/03/28/Html/">Html拓展</a>中的网易云外链章节。</p>
<hr>
<p>@西走菜菜</p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=298 height=52 src="//music.163.com/outchain/player?type=2&id=3025139&auto=0&height=32"></iframe>

<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=298 height=52 src="//music.163.com/outchain/player?type=2&id=22656515&auto=0&height=32"></iframe>


<hr>
<p>2022&#x2F;3&#x2F;29</p>
<p>@Sherry </p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=298 height=52 src="//music.163.com/outchain/player?type=2&id=36199955&auto=0&height=32"></iframe>

<blockquote>
<p>马孔多的雨还在下</p>
</blockquote>
<p>@慕雪</p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=298 height=52 src="//music.163.com/outchain/player?type=2&id=1821805042&auto=0&height=32"></iframe>

<blockquote>
<p>要加油呀！要永远相信，美好的事情终将发生。<br>2:49开始，感觉，无论遇到什么，都要相信，一切都会有转机，向前看。<br>3:14开始又回归主旋律，但却要温柔很多。<br>愿所有温柔之人都能被这世界温柔以待。</p>
</blockquote>
<hr>
]]></content>
      <categories>
        <category>Markdown&amp;Blog</category>
      </categories>
  </entry>
  <entry>
    <title>如何优雅的学打羽毛球</title>
    <url>/2021/11/15/Play-badminton-gracefully/</url>
    <content><![CDATA[<h2 id="目前常用参数"><a href="#目前常用参数" class="headerlink" title="目前常用参数"></a>目前常用参数</h2><table>
<thead>
<tr>
<th>2021&#x2F;11磅数：</th>
</tr>
</thead>
<tbody><tr>
<td>66um24磅</td>
</tr>
<tr>
<td>63线23磅</td>
</tr>
</tbody></table>
<span id="more"></span>

<h2 id="打磨自己，逐项弱点突破："><a href="#打磨自己，逐项弱点突破：" class="headerlink" title="打磨自己，逐项弱点突破："></a>打磨自己，逐项弱点突破：</h2><ol>
<li><p>基本功之高远球，击球点太低，发力不协调，胳膊太多身体太少，可能和步伐不到位有很大关系</p>
</li>
<li><p>反手过渡回正手区</p>
</li>
<li><p>移动降低重心，前场后场移动重心起伏太大</p>
</li>
<li><p>网前抢高点，为了停顿放网、停顿推后场</p>
</li>
<li><p>头顶底线死穴</p>
</li>
</ol>
<table>
<thead>
<tr>
<th>序号</th>
<th>项目</th>
<th>应用及目的</th>
<th>问题</th>
<th>改进方法</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>基本功之<strong>高远球</strong></td>
<td>对抗，基础</td>
<td>1击球点太低&gt;2发力不协调胳膊太多身体太少&gt;3可能和步伐不到位有很大关系</td>
<td><strong>提高击球点</strong>，多练<strong>高</strong>球，积极<strong>移动</strong>到位</td>
</tr>
<tr>
<td>2</td>
<td><strong>反手过渡</strong></td>
<td><strong>回正手区</strong>&gt;反手区</td>
<td>只能回反手区，被人预判反手过渡节奏就崩了</td>
<td><strong>提高击球点</strong>，积极移动，练<strong>反手过渡正手区</strong></td>
</tr>
<tr>
<td>3</td>
<td>移动<strong>降低重心</strong></td>
<td>吊球接杀高远，减少<strong>二次启动</strong>成本</td>
<td>前场后场移动重心起伏太大，体能消耗大，而且跑不快不到位，二次启动完全失败</td>
<td><strong>提前架拍</strong>，<strong>降低重心</strong>，<strong>跑步</strong>练体能，<strong>启动步</strong></td>
</tr>
<tr>
<td>4</td>
<td><strong>网前抢高点</strong></td>
<td>停顿放网、<strong>停顿推后场</strong></td>
<td>网前只能根据球速被动选择放网或挑球，主动变被动，容易被预判</td>
<td><strong>提前架拍</strong>，预判，<strong>抢高击球点</strong></td>
</tr>
<tr>
<td>5</td>
<td><strong>头顶底线</strong></td>
<td>对抗，<strong>避免反手</strong></td>
<td>步伐乱，跑不到，死穴</td>
<td>专注练习<strong>马来步</strong>一种后退头顶底线步伐，跑步</td>
</tr>
</tbody></table>
<p><a href="https://www.bilibili.com/medialist/detail/ml762003005?type=1&spm_id_from=333.999.0.0">b站收藏夹《羽毛球》为主 (bilibili.com)</a></p>
<p>补充：</p>
<p>头顶后场：马来步</p>
<p><a href="https://zhuanlan.zhihu.com/p/234706812">李宗伟的马来步应该怎样跑？ - 知乎 (zhihu.com)</a></p>
<p><a href="https://www.jianshu.com/p/2b7afc7671ea">李宗伟的绝技马来步 - 简书 (jianshu.com)</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/132642348">头顶球是硬伤？跟着陈雨菲学“马来步”，掌握高吊杀的击球点 - 知乎 (zhihu.com)</a></p>
<hr>
<p>2021&#x2F;11&#x2F;15</p>
<hr>
<h2 id="一些启发："><a href="#一些启发：" class="headerlink" title="一些启发："></a>一些启发：</h2><table>
<thead>
<tr>
<th>马来步：</th>
<th>1启动打开左脚，2右脚蹬转（发力开始），3左脚垫补，4右脚落地并右脚起跳转体击球，5落地右脚先左脚后重心在前。</th>
</tr>
</thead>
<tbody><tr>
<td>上网步伐：</td>
<td>上网后回退，第一步是<strong>后跳</strong>，不是交叉或者并步，应对重复网前落点。</td>
</tr>
<tr>
<td>网前球手法：</td>
<td>持拍与手臂<strong>角度</strong>？为了勾对角，所以不应该是直线，120度左右。正手肩膀、手高，手肘排头低，反手肩膀、手肘、手高，拍头低。</td>
</tr>
<tr>
<td>反手扑球手法：</td>
<td><strong>立起</strong>球拍，反手平推。</td>
</tr>
<tr>
<td>启动步：</td>
<td>不是小跳，简单的把两个脚<strong>打开</strong>，重心<strong>自由落体</strong>。</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<hr>
<p>2021&#x2F;11&#x2F;16</p>
<p>上网步伐<br>问题：上网停不下来，停不稳，会往前冲；</p>
<p>根本问题：我上网启动和停止有问题；</p>
<p>原因：启动步发力太小，制动时候发力太多太重；</p>
<p>方法论：田儿贤一，启动圈内出声，落地无声；</p>
<p>关键；启动，重心。</p>
<hr>
<p>2021&#x2F;12&#x2F;8</p>
<p>滑板切球；</p>
<p>网前勾对角；</p>
<p>快抽底线。</p>
<hr>
<p>2021&#x2F;12&#x2F;17</p>
<h2 id="羽毛球一致性"><a href="#羽毛球一致性" class="headerlink" title="羽毛球一致性"></a>羽毛球一致性</h2><table>
<thead>
<tr>
<th>1. 正手后场（欠一致性练习）</th>
<th>高远</th>
<th>吊网前</th>
<th>杀球（直线斜线、劈杀）</th>
<th>滑板</th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>2. 反手后场过渡（基本功学习中）</td>
<td>直线</td>
<td>斜线</td>
<td>直线后场（做不到）</td>
<td></td>
<td></td>
</tr>
<tr>
<td>3. 网前（未统一练习）</td>
<td>回搓、展搓</td>
<td>放网</td>
<td>快推底线</td>
<td>勾对角</td>
<td>挑高球</td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<p>正手后场要点：</p>
<ol>
<li>挥拍动作必须规范标准</li>
<li>挥拍前动作必须充分舒展</li>
<li>触球前控制拍面与力量</li>
<li>顺势击球后续动作一致</li>
</ol>
<p>反手过渡要点：稍长</p>
<hr>
<p>2021&#x2F;12&#x2F;22</p>
<p>田儿贤一教学熟肉，是我看过最好最透彻的教学资料，帮助我理解了很多原理，非常推荐，**的真谛&#x2F;真意&#x2F;極意&#x2F;诀窍，一定要看哦：<a href="https://space.bilibili.com/28040154/favlist?fid=754194054&ftype=create">kito15的个人空间_哔哩哔哩_bilibili</a></p>
<p>如果你是初学者，想从头学起，也推荐你看看<a href="https://www.bilibili.com/video/BV12s411M7xB?spm_id_from=333.999.0.0">【上古教学视频】肖杰：学打羽毛球（45集全）_哔哩哔哩_bilibili</a></p>
<p>这个针对打惯野球想有突破的朋友<a href="https://www.bilibili.com/video/BV1Nb411W73x?spm_id_from=333.999.0.0">《专家把脉》羽毛球教学视频 (30全集)-赵建华【羽坛天王】&#x2F;肖杰【国际羽联世界羽毛球培训中心主教练】_哔哩哔哩_bilibili</a></p>
<hr>
<p>2022&#x2F;3&#x2F;20</p>
<hr>
<p>许久没打球啦，最近打了几次，发力发不明白，昨天有些领悟：</p>
<ol>
<li>移动到位；</li>
<li>大臂小臂，挥拍要轻，不能僵硬用蛮力生拉硬拽，打不远的；</li>
<li>正面击中甜区，另外打惯弓11，900i甜区真小，挥速太快，打不到球；</li>
<li>击球时，手指捏紧球拍拍柄，很关键，每次击球都尽可能的捏紧，真的太重要了。</li>
</ol>
<p>我这些年从20-32每个磅数都打过不短时间，能不能打的动，和不同球拍，不同线径也有一定关系，细细回想起来，打的动，其实对我来说就是有没有捏紧的能力，能不能打的远倒是其次。</p>
<p>总而言之，磅数越高，线、拍子越硬，击球时捏紧越困难，感受就是，打球打不动，球不走；虎口代偿太多，磨损很大；手腕手肘肩部，代偿太多，很大概率受伤。</p>
<p>在力量训练以外，正确握拍的前提下，想要更容易的捏紧球拍，你可以这样做：</p>
<ol>
<li>降低磅数</li>
<li>选择更细更不震手的高弹线</li>
<li>选择拍头稍沉、中杆较软，不木不震手的中杆，整体重量不能太轻的球拍，正常人4U最轻，极不推荐5U，若购买5U除非你像我一样给拍头加重量调平衡到4U，预算充足，选择更好的碳素材料</li>
<li>主动调节一下拍柄的软硬、粗细、手感；太粗没法捏，全程虎口代偿，连接部位快速磨损；太细捏的太累。</li>
</ol>
<p>羽毛球基本功以外的身体素质的增强，我推荐的顺序还是：</p>
<ol>
<li>心肺：慢跑</li>
<li>步伐弹性：跳绳</li>
<li>握力：尽可能长时间吊单杠，窝里器什么的</li>
</ol>
<p>挥拍力量，真的不重要，普通人已经足够了，只需要引导协调舒服的发出来，胯和腰腹的力量即可，手臂就是一个连接。</p>
<p>击球瞬间发力的量和重要性应该是：</p>
<ol>
<li>手指捏紧，拍面正向甜区击球，确保势能最终全部作用再球托的重心；业余球友很难做到，甚至，人类很难做到，提高这一项性价比最高</li>
<li>腰腹收紧，做弓的势能释放</li>
<li>击球前的势能储存，包括，移动到球后，180°面对对方，下沉，蹬、转跨、向前起跳</li>
<li>肩、手臂、手腕，自然外旋，尽量减少主动发力，做好势能释放的连接作用，不散即可；不要画蛇添足去主动加力，会让之前积累的势能散掉，只剩手臂在发力，而不是整个人。</li>
</ol>
<iframe src="//player.bilibili.com/player.html?aid=207298250&bvid=BV1vh411B7mR&cid=388835947&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>

<p>如果你已经达到了基本的动作框架的熟练，能做到协调的身体挥拍，下一步就试着尽可能把发力的注意力集中在手指上吧。</p>
<hr>
<p>2022&#x2F;5&#x2F;6</p>
<hr>
<iframe src="//player.bilibili.com/player.html?aid=339578547&bvid=BV12R4y1G7Kr&cid=541760107&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>

<p>江哥说我有些压腕，导致手腕疼：</p>
<ol>
<li>收拍当过程而不是主动发力，在击球点结束发力</li>
<li>减少手腕代偿，其他部位下意识参与协调发力</li>
</ol>
<hr>
<p>2022&#x2F;5&#x2F;11</p>
]]></content>
      <categories>
        <category>生活和诗歌</category>
      </categories>
  </entry>
  <entry>
    <title>如何优雅的和猫咪玩耍</title>
    <url>/2021/05/21/Play-with-cats-gracefully/</url>
    <content><![CDATA[<p>本来想起名为撸猫教程，想了想实在太自大了，我能教谁呢？能教什么内容呢？撸什么猫呢？</p>
<p>我自己不过是喜欢和不同的猫玩罢了，而且我23岁，人生中见过的猫其实很少，真要算的话，最多百十来只吧，这当然是不足以出个教程的。</p>
<p>但相比我见过的所有人，我似乎是最受猫咪喜爱的，我能感觉到身上有种东西在吸引着各种见过的、没见过的猫咪，尤其是我和她们正面接触的时候，很少会有不理我的情况出现。</p>
<p>我很难给不熟悉的人证明我上面这段话不是自恋，但事实就是这样，你看到了这些东西，就证明了我觉得你能理解。</p>
<p>熟悉的猫，大家已经是朋友了，当然是想撸就撸。本文针对更多是初次见面的猫咪。</p>
<span id="more"></span>

<h2 id="撸猫的心态和动作"><a href="#撸猫的心态和动作" class="headerlink" title="撸猫的心态和动作"></a>撸猫的心态和动作</h2><p>这个应该是读者最想看的会有实际收获的内容吧。</p>
<h3 id="心态"><a href="#心态" class="headerlink" title="心态"></a>心态</h3><p>首先撸猫的心态呢，不能是高高在上的，不能觉得自己是个人，就高猫一等，你得首先明白，你和她是平等的，你是想和她做朋友，想一起玩；她也是因为想和你一起玩，相信不会被你伤害而回应你的请求才同意被你撸的。</p>
<p>不养猫的我，撸猫基本都是初次见面的猫，也有可能是见过几次已经很熟悉的猫，相对而言初次见面的猫我觉得对想被猫咪喜欢的人更有参考意义。</p>
<p>就跟与人交往一样，你得友好，善良，平等，在一起就是为了开心，同时呢心中得有边界感，你得充分信任她，但是得做好被挠一下的心里和身体的准备，准备好在不对劲的时候随时逃跑。但是，相信我，猫的世界是很单纯的，相比于普通人，她们很容易信任别人。</p>
<p>初次撸猫与人交往一样，我们是抱着友好的态度和想要亲近和被信任的欲望去尝试交流的，但是得清楚，要不要亲近，要不要信任是猫咪自己说了算，这不是你能左右的。所以不要抱太高期望，被回应了会特别开心；但被拒绝了也不要太遗憾，是很正常的事。</p>
<p>猫咪很胆小，很调皮，喜欢亲近人啊狗啊其它猫啊，只要她觉得不会伤害她就好，她们内心很孤独的。当然，猫咪很爱面子的，最好不要让他觉得丢了面子，不然多半就不理你了。可以回忆一下，猫咪在摔倒或者撞到什么东西，或者恶作剧被无情揭穿，都会做的一件事就是舔爪子洗脸，掩饰尴尬。</p>
<h3 id="动作"><a href="#动作" class="headerlink" title="动作"></a>动作</h3><p>有了正确的心态后，这些动作会让猫咪觉得很舒服：</p>
<ol>
<li>初次尝试交流的时候，内心完全释放你的善意和友好，不要有任何顾忌，你的气味会是善意的气味。我一直都觉得，味道是一切交往发生的前提，与猫咪，与小狗，与人都一样。</li>
<li>完全释放善意，你脸部的表情和线条也会变得柔和，猫咪很喜欢这个，放松，自然发自内心的微笑，当然了，还有你没有任何警惕感的眼神，这个眼神可能需要练习，要温柔，要比平时对人的温柔时候睁得更小，相信我，有些猫咪甚至更希望你闭上眼睛。</li>
<li>充分表达你想要被回应的心情，猫咪很善良的，通常在感受到以后，会主动靠过来，就算不是完全乐意，也绝对不会拒绝你靠近她的。</li>
<li>尤其面对胆小的猫咪，要更有耐心一些，什么猫是想要和你玩但是不敢的，撸猫多了一眼就能看出来，面对他们，在她在回头看你，的时候，不妨多等等她，等她主动靠过来，只要她没有跑掉，都是可以等的。</li>
<li>引起猫咪的注意有很多种方法，用嘴发出啧啧声，拍手，都可以，但不要太用力了，猫咪普遍很胆小，别吓到他们。只要她们的眼神注意到了你，就够了。</li>
<li>猫咪很胆小的，理所当然，我们都会害怕比我们大得多的生物，所以如果可以的话，趴在地上是最好的，做得到的话，蹲下，然后尽量把头和身体放松，越低越好，在撸猫的时候，你的眼里应该只有他，没有别的路人的眼光，我觉得这是很容易做到的一件事，但或许对你来说不一定。</li>
<li>不该摸猫咪的哪儿呢？首先不要逆着毛摸她，不要太用力了，当然了，面对初次认识的猫咪，也要避免触摸敏感部位，比如鼻子，耳朵，胸，腹部，生殖器附近，太不礼貌了。摸爪子和尾巴，猫咪一般会觉得你失礼，她会轻轻咬你一下，让你知道这样不礼貌，但是因为你不是猫咪所以就原谅你了，但被警告就不要继续了。</li>
<li>怎么样的手法会让猫咪舒服呢?正常人的思路都是顺着毛摸脑袋和身体背部，因为这是猫咪直接暴露给你的，也是小时候经常被妈妈舔的地方。但是有个部位可以让你们关系迅速升温，就是脖子，下巴的哪个凹槽，有经验的人会直接顺着纹理从脖子到下巴撸这儿，猫咪会舒服的把头伸到最远，闭上眼睛，充分享受，甚至会发出呼噜声。</li>
</ol>
<h2 id="什么样的猫咪可以做朋友"><a href="#什么样的猫咪可以做朋友" class="headerlink" title="什么样的猫咪可以做朋友"></a>什么样的猫咪可以做朋友</h2><p>答案当然是什么样的都可以。</p>
<p>不要因为她是流浪猫或者在翻垃圾就嫌弃她，人人都有自己的难处，如果我是一只猫，会不会也有流浪，被生活所迫，每天找不到吃的而去翻垃圾呢？很有可能吧。交朋友不该考虑那么多的，结束以后记得洗手就好啦。当然了也不要因为对方身份高贵，或者对方主人身份高贵而自卑，但我猜大多数人不会有这个问题吧。</p>
<p>非常警惕的猫，或者心情不好的猫，自然是没有交流的机会的。</p>
<p>只要他无所事事晒太阳，或者在闲逛，或者和别的猫一起玩，都可以试试。</p>
<hr>
<p>2021&#x2F;5&#x2F;21</p>
<p>西走菜菜</p>
]]></content>
      <categories>
        <category>生活和诗歌</category>
      </categories>
  </entry>
  <entry>
    <title>谈谈项目经历</title>
    <url>/2022/04/01/Project-experience/</url>
    <content><![CDATA[<blockquote>
<p>请你此时此刻造一枚火箭，并以最快的速度建成投入使用吧</p>
</blockquote>
<span id="more"></span>

<p>什么？你说我在扯淡？</p>
<p>那如果我把要求换成，请你此时此刻微信发条朋友圈；或者请你去食堂买饭？是不是完全可行，只是你愿不愿意动的问题？</p>
<p>不妨稍微思考一下，造火箭和后者有什么区别，其实差不多的。</p>
<p>请你思考一下，然后带着这个问题，读接下来的文章。</p>
<p>我完全主观的谈谈我这些年对项目经历的认知变化。</p>
<hr>
<h2 id="Where"><a href="#Where" class="headerlink" title="Where"></a>Where</h2><p>一份简历，由四部分构成：</p>
<ul>
<li>个人信息</li>
<li>技能清单</li>
<li>项目经历</li>
<li>工作经历</li>
</ul>
<p>注：这里把教育经历包含在个人信息中，获奖与证书用来支撑。</p>
<p>其它都很好理解，但是项目经历是个啥呢？作为一个中国人，第一次听到的时候着实被吓到了。</p>
<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>项目经历这四个字完完全全是外来词汇，被骗了太多年了，这些是我对它的认识变化。</p>
<h3 id="重大国家战略或科研项目"><a href="#重大国家战略或科研项目" class="headerlink" title="重大国家战略或科研项目"></a>重大国家战略或科研项目</h3><p>第一次接触到项目经历这个词，是在本科准备找实习的时候，发现简历需要写项目经历？？？第一反应，这也太牛了，一定是作为负责人或者重要角色，参与过什么重大国家战略或科研项目，然后写出来作为加分项的吧。但这门槛也太高了，项目数量太少了吧，然后心灰意冷觉得和自己这种普通人没什么关系了。</p>
<h3 id="商业产品落地项目"><a href="#商业产品落地项目" class="headerlink" title="商业产品落地项目"></a>商业产品落地项目</h3><p>转变是因为大家都在写，他们咋那么厉害？自卑死我了，正好开始牵头负责开展一个大创项目，既然都有了项目这两个字，国家主办的怎么着也算项目经历了吧，名称是”乒乓球测评赛与积分的智能化管理平台”，哦，原来项目经历可以是商业(或非商业)产品落地。</p>
<blockquote>
<p>附：心里想着项目就是产品，我们一群人费老大劲真的搞了个系统出来，从0到1，在学校推广使用广受好评，结题前顺手写了个一般论文和软著，然而名次不是国家优秀，都备受打击。后来知道搞错重点了，官方比赛，没人在意是否有实际产品，是否有实际效果，没人在意能否推广使用，只看论文专利软著授权。后来教务处邀请去参加同年的上海工业博览会，还安慰我们教务处优秀作品展示之类的。我们太傻了。</p>
</blockquote>
<h3 id="Program-experience"><a href="#Program-experience" class="headerlink" title="Program experience"></a>Program experience</h3><p>本科安全专业毕业，自己也玩的开心，做了太多攻防练习，软件倒是下了一大堆。</p>
<blockquote>
<p>说起来去我家玩过的朋友如果留意观察，应该会发现WiFi是两个路由器桥接，全覆盖、无缝切换、网速很快，从头到尾的配置认证什么都是我一个人摸摸索索搞出来的，蹭网？不存在的，就算你是联通管理员最多也只能切断。配置的那段时间家里经常断网，爸妈刚开始疯狂抱怨，后面都习惯了。</p>
</blockquote>
<p>题外话又说多了。但是看别人投开发简历项目经历写的都是做过什么Program，我看看我空空的代码库，课程设计中只有师生管理系统之类的，太low了吧，其它的各种算法实现的代码，倒是一堆，但太小太细，不够系统，感觉称不上是program。</p>
<p>好在研究生上岸了，这个问题被搁置了。</p>
<p>研究生了，想着应该能接触到我以为的重大国家战略或科研项目或者产品落地了吧，结果做的我也不知道算不算，说成是program experience，可能更恰当吧。到目前为止，军方的，国网的，江西电网的，四个，国自然一个参与人，NEAC’21 web chair。发现，除了最后一个都是在写论文或者专利，和产品落地没什么关系，放在简历中的(相关)项目经历，去互联网还没法写。着急了，这毕业后可咋办呢。</p>
<h3 id="Project-experience"><a href="#Project-experience" class="headerlink" title="Project experience"></a>Project experience</h3><p>于是江湖救急，看别人咋写的，咋做的项目，发现大家都去找一些开源项目(代码)，pull下来，看一看跑一跑，能回答这几个问题，就是项目经历了。</p>
<blockquote>
<p>使用到的技术</p>
<p>主要功能</p>
<p>自己在其中的角色</p>
<p>解决了什么问题</p>
<p>用的什么方法</p>
<p>优势</p>
</blockquote>
<p>我？？？</p>
<p>所以你们的项目经历就是把别人的代码跑明白吗，有种被骗了很多年，一个高大上词汇泡沫被戳破的感觉，这么说我本科那些，自己写完就觉得太简单而看不上的代码，叫成是项目经历也完全ok，就是没什么竞争力而已。</p>
<p>得，项目经历就是Project。</p>
<p>因为实验室一直在给老师做项目，或者摸摸索索云计算、DRL相关的东西，系统开发无，赶紧去pull几个JAVA的Project跑一跑抄抄改改研究研究。</p>
<p>按理说到这儿就该完了。</p>
<p>但是明白了项目经历是外来词汇Project experience的翻译，那它的目的何在？意义又是什么呢？以及它真的是想表达项目经历吗？公司看中它那它的本意是什么？</p>
<p>No，好戏才要登场，这以后才是我写这篇文章初衷，我还没解释怎么造火箭呢。</p>
<hr>
<h2 id="怎么造火箭"><a href="#怎么造火箭" class="headerlink" title="怎么造火箭"></a>怎么造火箭</h2><p><strong>很简单，把每个部分交给专业的公司、专业的人、专业的工具来做！</strong></p>
<p>具体来说，我有了造火箭的想法：</p>
<ol>
<li>武器生产许可-&gt;寻找靠山</li>
<li>条文审批-&gt;单位A</li>
<li>火箭使用-&gt;下游买家A</li>
<li>火箭设计组装-&gt;设计院||工程师||某开源工具</li>
<li>原料采集-&gt;招标ABCD</li>
<li>弹头制造-&gt;A场</li>
<li>弹体制造-&gt;B场</li>
<li>动力总成-&gt;C场</li>
<li>辅助瞄准系统-&gt;D场</li>
<li>控制软件设计-&gt;E场</li>
<li>图像识别等辅助软件设计-&gt;F场</li>
</ol>
<p>……</p>
<p>发现了吗？其实什么都不需要干，我们需要的只有一件事，想造火箭-How-&gt;造出火箭，说更直白一些，<strong>如何找到合适的人、公司、工具</strong>……</p>
<p>类比发条朋友圈：</p>
<ol>
<li>用什么-&gt;手机</li>
<li>在哪儿-&gt;手摸摸索索找到</li>
<li>点亮手机-&gt;拇指电源键解锁</li>
<li>打开微信和朋友圈-&gt;点点按钮</li>
<li>发朋友圈-&gt;在规定的文本框内编辑想说的话</li>
</ol>
<p>很相似吧？大脑在发出发朋友圈的指令后便不再作为甲方参与，交给你的机械记忆，交给封装好的按键，按钮，功能。而且比造火箭更复杂一步，最后一步大脑重新承担乙方的角色写文案，就像构造方法一样。</p>
<p>你不需要了解任何底层原理，你不需要造手机，了解怎么电路通电，了解怎么实现功能的细节，通信原理等等，交给专业的人吧。</p>
<p>再看看造火箭那个例子，无论哪一环节，不需要我们去关心底层原理，懂，当然会少走很多弯路，不懂也无所谓，专业的事交给专业的人做。是不是和你发朋友圈，修电脑，打饭，都没什么区别？</p>
<hr>
<h2 id="How"><a href="#How" class="headerlink" title="How"></a>How</h2><p>所以我们明白了，作为提出造火箭的人，我们只用关心，how，如何造出火箭，而不是怎么才能靠自己造出火箭。</p>
<p>说白了，<strong>怎么找到，以及怎么使用</strong>专业的公司、专业的人、专业的工具。努力成为自己项目的甲方而不是乙方。</p>
<p>重大国家战略或科研项目，如果是更靠关系的话，你需要提高自己的信誉，疏通绝大多数的关系，了解最多的信息，最大程度避免利益冲突，找到合适的乙方。</p>
<p>商业产品落地项目，如果更靠技术，其实也是同理，疏通关系少了，对市场的敏感性多了。</p>
<p>每一步都有专业的人、专业的工具。</p>
<p>但是怎么才能找到呢？</p>
<p>如果没有现成的经验，就算你想破脑袋，也不可能想得出来。</p>
<p><strong>最简单有效的办法：不是想明白该怎么办，而是去做！去找！</strong></p>
<p>自己亲自做的过程中，如果真的是有难度的任务，为了完成，只靠自己已有的经验必然是不够的，东找西找，发帖问人翻文档书籍视频文献等所有能利用到的资源。用尽一切手段，题外话，面子这种东西我觉得是最没有必要的。</p>
<p>从0到1的过程必然是艰难的，完成后，收获的成果可能会觉得，远远不及自己的付出，因为你花了大量的经历去完成项目流程的建设，此时的你已经轻车熟路，第二次承接类似的项目时候，你不需要碰壁，甚至你会去寻找更好的工具、更靠谱的乙方去迭代，你已经完成了项目流程的建设，每一个节点可能需要优化而已。</p>
<p>所以项目经历，想表达的意思，我觉得，更像是，尝试的经历，试错的经历，探索的经历，之类的，Trying experience可能更恰当一些，不过听起来有些low，中国人必然是不喜欢的。</p>
<h3 id="Trying-experience"><a href="#Trying-experience" class="headerlink" title="Trying experience"></a>Trying experience</h3><blockquote>
<p>你会使用电脑吗？怎么证明呢？无非是，你会用的软件，常用的网站。至于孰不熟练，有多精通，这不是0到1。</p>
<p>你会拉赞助吗？需要哪些环节，找那些人呢？怎么找呢？</p>
<p>你会做饭吗？</p>
</blockquote>
<p>好好总结你每次Trying experience的经验吧，任何事情，不单单是记录心得，不要瞧不起它觉得太简单或者网上有大量的教程而觉得没必要，这是专属于你的存活证明。画图总结成具体成一个一个离散的流程结点，总结成有序列表，或者流程图的形式都可以。</p>
<p>把你的人生列成一个时间序列，节点上都是不断更新的issue，每条issue就是你无数次迭代过的Trying experience。你从出生到现在，都是在更新你的issue，把它写出来，找什么类型的工作，交什么样朋友，就写什么Trying experience。</p>
<p>每个人(人生阅历)，公司(开源项目经历)，实验室(论文经历)，机关单位(基层工作经历)，对于项目流程都是无比看重的，他们的流程经验，也是靠着从创始人开始一代一代迭代积累起来的，所以最想要的人，要么是能带来新的流程经验的人，一个人就是一个新项目，要么是能给公司旧的项目经验有所迭代的人，这能给团体带来最实际的建设。</p>
<hr>
<h2 id="疯言疯语"><a href="#疯言疯语" class="headerlink" title="疯言疯语"></a>疯言疯语</h2><p><del>还是人间清醒？</del></p>
<p>以下纯主观论断，2022年的中国甚至世界，普通人最高性价比的投资是对自己或者领导团体实用技术的投资，变现和增值能力最强。(纯粹的空想)基础理论，房产，股票，学历，编制的投资相比之下投入产出比太低了。</p>
<p>在这方面，中国的市场还是个大水坑，机会多的是，只要学明白了，干了，就有钱赚，根本不需要多精通。</p>
<p>恭喜你能看到这里，那我说的更明白一点，这是我看到的时代红利，愿不愿意抓，完全看个人，当然不止我看到了，大量的人和公司都在灌水，内卷，水坑越来越小但还是水坑，加上国土面积巨大，人口特多，都是荒地，十年不可能填的满。放心灌水，这是为数不多能在国家经济平稳发展(倒退)的情况下，还能赚的盆满钵满的方法。</p>
<p>不要传播，不过成功学太多了，这估计也击不起什么浪花。</p>
<p>实用技术，是我凑出来的一个四字词语，指的是，一切能制造你看得见摸得着的东西的技术，让它在你的issue中比例更大些吧。</p>
<p>毕竟纵览现在人类几乎还是什么都没有，农业工业电力革命，每个阶段看自己都觉得飞跃巨大，过了这个阶段再看真的区别不大。</p>
<p>甚至和光着身子区别不大，普通人仅仅有个衣服，锤子，沙发，灯泡，没有好节目的低像素电视，没有软件和网页的手机电脑，没有覆盖全的街道，最原始的汽车。还有什么呢？太空了，空空如也。眼界打开，think different，什么少需要什么，哪儿人多钱多，就做什么，最容易见成效。</p>
<p>我自知水平很低，在已经被灌的差不多的水坑里，无论是自己的还是别人的，注定没法和资本或者集体或者更优秀的人竞争，所以灌水，开坑，甩手掌柜，投入产出比最高。</p>
<p>任何时代，从过去看现在总是觉得发展已经到头了，从未来看现在总觉得太原始了，太空了。</p>
<p>人类历史、你来到世上的日子，说长不长说短不短，不要被自己或者人类已经取得的成果蒙蔽双眼，那说明你还在过去那个阶段。</p>
<p>人口基数、国土面积大、经济低迷，是竞争也是没有开发的(下沉)市场，不要被内卷的压力压得喘不过气，打开眼界，荒地多着呢，去勇敢的碰壁开坑吧。</p>
<hr>
<p>2022&#x2F;4&#x2F;1</p>
<p>西走菜菜</p>
]]></content>
      <categories>
        <category>生活和诗歌</category>
      </categories>
  </entry>
  <entry>
    <title>我们真的有自己想象的那样了解现实吗</title>
    <url>/2022/03/27/Recognizing-reality/</url>
    <content><![CDATA[<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>读《博闻强记的富内斯》</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>

<p>这个小短篇出自博尔赫斯的《虚构集》，博尔赫斯是最近发现的一位宝藏作家，作品短小精美，一般都是把一些哲学方面的思考和奇思妙想结合起来，有我以前看《苏菲的世界》那味了。目前读过的三篇短篇小说都是以无限为主题，读完第一感觉就是人是有限的，偶然的。</p>
<span id="more"></span>

<p>《博文强记的富内斯》的剧情是这样的，“我”是一个家境殷实的知识分子，在和表哥去乡下探亲时认识了不看钟表就能准确报时的年轻人富内斯，虽然只是短短一面，但是却给我留下了一些印象。后来富内斯在骑马时不小心从马背上摔下来瘫痪了，此时正赶上我在学习拉丁文，富内斯听说后，写一封信想让我给他一本拉丁文写的书和辞典，他想自学拉丁文，我当时觉得就靠一本字典学拉丁文太自大了，所以寄去了两本比较晦涩的拉丁文以及一本字典，之后我就忘了这事了。一段时间后，我的父亲病重，我回乡看父亲，偶然想起给富内斯借去的两本书便去了富内斯家，没想到这一晚的见面闲聊震撼了我的认知。刚去时富内斯在大声背诵其中一本拉丁文的一个章节，我却没怎么听出来，富内斯告诉我，自从他从马背摔下来后，理解力和记忆力好得不能再好了，无论以前再遥远，再细小的事情他都记得十分清晰。</p>
<blockquote>
<p>我们一眼望去，可以看到放在桌子上的三个酒杯；富内斯却能看到一株葡萄藤所有的枝条、一串串的果实和每一颗葡萄。他记得1882年4月30日黎明时南面朝霞的形状，并且在记忆中同他只见过一次的一本皮面精装书的纹理比较，同凯布拉卓暴乱前夕船桨在内格罗河激起的涟漪比较。那些并不是单纯的回忆；每一个视觉形象都和肌肉、寒暖等等的感觉有联系。他能够再现所有的梦境。他曾经两三次再现一整天的情况；从不含糊，但每次都需要一整天时间。他对我说：我一个人的回忆抵得上开天辟地以来所有人的回忆的总和。又说：我睡觉时就像你们清醒时一样。天将亮时，他说：我的记忆正如垃圾倾倒场。我们能够充分直感的形象是黑板上的一个圆圈、一个直角三角形、一个菱形；伊雷内奥却能直感马匹飞扬的鬃毛、山同上牲口的后腿直立、千变万化的火焰和无数的灰烬，以及长时间守灵时死者的种种面貌。我不知道他看到天上有多少星星。</p>
</blockquote>
<p>听完富内斯描述的一切，我看着清晨阳光照亮他的脸庞，觉得他像一尊青铜雕像，比埃及更古老。之后富内斯便因为肺部充血去世了。就是这么一个故事。</p>
<p>富内斯的世界感受与普通人截然不同，他应该没有时间分隔的概念。普通人有过去，现在，未来的感受，富内斯那里过去和现在一样清晰可见。如今的我想想昨天发生的事情，或者很久没见的一个人，我知道是什么，但是总体来说很模糊，大部分细节都无可辨别。如今我坐在桌前，能清晰看到电脑左下角边框的蓝色颜料渍，或者玻璃水杯内壁那细小的气泡。清晰可辨的是现在，模糊的是过去，对富内斯而言，一切都是清晰可见的。从这个角度来看，在富内斯眼里我们也许是怪物，因为我们认为过去已经消逝，世界只存在于现在。</p>
<p>这让我想起哲学上的第二大问题，世界是可知的吗？毕竟普通人头脑太弱记不住东西，假如普通人的感知更接近现实，那么真理也就不妨说是人的真理。爱因斯坦和泰戈尔曾经有关这个问题进行过辩论。</p>
<blockquote>
<p>泰戈尔：我们称之为真理的那个东西，存在于实在的主观和客观这两者的和谐之中，你会看到，决定这两者的，是我们万能的人。</p>
<p>爱因斯坦：然而，从我们的日常生活经验中可以看到，即便人离开了，我们用的那些物品也依旧存在。举个例子来说，某个房间中空无一人，却有一张桌子，莫非这张桌子就因为人的不存在而不存在？我们之所以有这种想法，就是想找到一种合理的方式，对我们感官所提供的各种材料之间的相互关系加以确定。</p>
<p>泰戈尔：不错，即便人不在了，那张桌子依旧存在。然而，你把万能的精神忽略了，对我所感受的那个桌子有所感受的人，必然有着跟我一样的精神，他必然知道桌子的存在。</p>
</blockquote>
<p>我觉得泰戈尔的意思是真理有一定的人为色彩，但是这并不违背客观实际，就像泰勒公式一样，它是对现实的一种极限逼近。人不可能理解宇宙中所有的客观存在，那些不在我们经验范畴，和人毫无关系的东西不会被人表达出来，最后也不在真理的范畴了。感觉这么一想自己好像成了主观唯心的人了。</p>
<blockquote>
<p>泰戈尔：桌子是一种外观，实际上就是一堆木头。也就是说，一种认为是桌子的那种东西存在于人的精神之中，人类若是消失了，人的精神若是没有了，显然它也就会随之消失。科学已经证实了这一点。并且，就物理实在性（物理属性）而言，桌子仅仅是众多单独的、旋转着的引力中心，而这些中心也一样在人的精神中存在着。</p>
</blockquote>
<p>是的，桌子的概念存在于人类的精神之中，现在在我桌上蹦蹦跳跳的小飞虫肯定不会把桌子之类的当真理了。</p>
<p>另外一个小说里我觉得有意思的点是下面这段：</p>
<blockquote>
<p>我们能够充分直感的形象是黑板上的一个圆圈、一个直角三角形、一个菱形；富内斯却能直感马匹飞扬的鬃毛、山同上牲口的后腿直立、千变万化的火焰和无数的灰烬，以及长时间守灵时死者的种种面貌。我不知道他看到天上有多少星星。</p>
</blockquote>
<p>这该是一种什么奇特的感觉，我拿起笔能在纸上精确画出三角形，锐角的，钝角的，直角的，细节分明准确。但让我同样精确描摹火焰，马的鬃毛根本不可能，这些东西都太复杂了，变化多到数不胜数，富内斯却能像普通人描绘三角形一样描绘出来，普通人只能采用简笔画的形式描出大概。这里我感受到了人的有限性，仔细想想，人的认知都是由简化的概念组成的，文学，数学，艺术的复杂性都是简单细节的有序组合。富内斯是直接简单粗暴得理解复杂性，他的大脑是一根大水管，一股脑得把所有得信息收归其中，普通人是小吸管，只能接受很小很小的一部分信息量，所以需要抽象概括。人，实在是太有限了。</p>
<p>我觉得富内斯像一台计算机，他没有抽象能力，计算机看到一个图像，需要借助灰度值和像素值来编号记忆，说到底就是基于统计，和人看世界的感觉截然不同。富内斯没法理解狗的概念，他不理解可以用一个词指代那么多千变万化的个体。人类的认识与认知真偶然，可见光波长，文化倾向，脑容量大小这些好多好多制约决定了我们看到的世界的样子，跳出这些制约的世界我们无从得知，再想想自己身边这些枷锁，又怎么能说是理所当然，一旦制约条件有所变化，所谓正确的知识也会变化。</p>
<p>要说想成为富内斯那样的人我是完全不敢的，我觉得他丢失了对世界基本的理解性。但是要达到可理解性又是以丢失细节为代价的，世界上的许多概念有些简单粗暴，大家不如说都在框架之内。</p>
<hr>
<p>Sherry</p>
<p>2022&#x2F;3&#x2F;27</p>
]]></content>
      <categories>
        <category>Sherry</category>
      </categories>
  </entry>
  <entry>
    <title>软件定义-虚拟化-云计算（更）</title>
    <url>/2022/04/29/SDMP/</url>
    <content><![CDATA[<ol>
<li><strong>软件定义</strong>网络及其他架构中<strong>虚拟化</strong>是怎么进行的？</li>
<li>对于SDMP软件定义安全中台，虚拟化作用于那一层？</li>
<li>和虚拟机什么关系？软件定义和虚拟化是同一个意思吗？</li>
<li>虚拟化与云计算有关系吗？没有的话可能产生什么样的联系？</li>
</ol>
<span id="more"></span>

<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202204291643944.jpg" alt="68415f1bc400f2f08455b171f5642e2"></p>
<hr>
<p>西走菜菜</p>
<p>2022-4-29</p>
]]></content>
      <categories>
        <category>DRL</category>
      </categories>
  </entry>
  <entry>
    <title>牡丹园盛开了</title>
    <url>/2022/04/24/School/</url>
    <content><![CDATA[<blockquote>
<p>北京的花开了一茬又一茬；</p>
<p>学校还在封校；</p>
<p>和我又有什么关系呢？</p>
</blockquote>
<span id="more"></span>

<p>剪了一下，还挺方便的。</p>
<iframe src="//player.bilibili.com/player.html?aid=640981386&bvid=BV1EY4y187ZD&cid=583782195&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>

<hr>
<p>2022&#x2F;4&#x2F;24</p>
<p>西走菜菜</p>
]]></content>
      <categories>
        <category>生活和诗歌</category>
      </categories>
  </entry>
  <entry>
    <title>分红合同</title>
    <url>/2021/03/27/Shares/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试，格式0101哦~." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">
  <script id="hbeData" type="hbeData" data-hmacdigest="39c155809188357793ba709fc126d19274c5cd94c98c149fe296ba95de5cd0b9">2a1fcbdcb7eb03b565a95d6de79a00028a36b8b1c5aaa935fdbb222768ee8109adbced5bb7c4d59e2bf8a0923471171d2a75a5049cdd44c0cb39ca07d8266900f126343c02bec7505abe10b88c09860dd6b29df243fe114ee7e686f2a5fcf9a3f807056fc6ea2e0ff82c7e65bbebdbef754643a103b893f4f07ee908b66c10846ad0f8ff5663307ef7754d13e0747b38079aa4aec1beaa7aaf1d86b37eea6530b8b6a8f66ffdfdb5454204cc4685c6b53280edb7bb2e2ca2ff137cde9a56492aaeea5bb7b97e58db285713f246c0947f033078c2155bd4596d655a4fa857435e541a5b442a98b250534f1a476f7abe926ced62e4a203ae244665e02d6c88264f313946f67d79ce09f2e69ca990118b220c37337c0c8563e093da16ea441881f9aece2507bb436d7f65fbe295e6e65dab5513bad63e730c63f6301581e7abb1b32c96b3af9805e0b8ed30f175e72c911f5712e860b2c2b66f0fec1e1a74335e7763ce618eaa0f126af8dd1042876953f212a62820c352dfd66237909ed03ff523c8406d828cd006aa420e59567b4140bb2069d2ba8724046fa60cb753a75be00bb06ce0196d50bd39f430990b6bdb7167e74e48c6276e584b7597e0a8477ae1d62c8d3d2b0e4dd8783f274106157102c47504170eb52139bace7665b3b4d60d26b434f207e34b1d8e341ce77ad080ba8b6a3f762bf892d170bf1e592760f5e633cc95e3a04517203b0f3d7b5ad3ffdba6032901902726764d113f7f94b846005ffe588c1833c335cff16e8a4c3c07fb05241ec0c6e3229146cb718de80c7d520c94721e58a9d9e36e8cf3404c61faeb584b3a139f521b67a37033028a4d316ab3f34ede2e8c751a2feafe600b5fa6060c</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-surge">
      <input class="hbe hbe-input-field hbe-input-field-surge" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-surge" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-surge" data-content="还记得我的生日吗？如101(对应1月1号)">还记得我的生日吗？如101(对应1月1号)</span>
      </label>
      <svg class="hbe hbe-graphic hbe-graphic-surge" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">
        <path d="M1200,9c0,0-305.005,0-401.001,0C733,9,675.327,4.969,598,4.969C514.994,4.969,449.336,9,400.333,9C299.666,9,0,9,0,9v43c0,0,299.666,0,400.333,0c49.002,0,114.66,3.484,197.667,3.484c77.327,0,135-3.484,200.999-3.484C894.995,52,1200,52,1200,52V9z"></path>
      </svg>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>日期</category>
      </categories>
  </entry>
  <entry>
    <title>The Hadoop Distributed File System</title>
    <url>/2021/07/26/The-Hadoop-Distributed-File-System/</url>
    <content><![CDATA[<p>Hadoop的重要特点是数据在数千节点上分区存储和计算，并行执行应用程序的计算。</p>
<p>HDFS和其他分布式文件系统(PVFS、Lustre、GFS)一样，分开存储文件系统元信息(NameNode)和应用程序数据(DataNodes)，服务器之间通过基于TCP的协议通信。</p>
<p>DataNodes没有和PVFS一样使用数据保护机制(如RAID)来使文件持久存放，而是像GFS一样在多个DataNode冗余存放文件内容来实现可靠性。保证持久存放的同时也可以加速传输数据。</p>
<span id="more"></span>

<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203211550034" alt="img"></p>
<p>HDFS总体上采用了master&#x2F;slave架构，主要由以下几个组件构成：Client、NameNode、Secondary NameNode和DataNode。<br>NameNode管理文件系统的命名空间，维护文件系统树及整棵树内所有的文件和目录。这些信息以两个文件形式永久保存在本地磁盘上：命名空间镜像文件fsimage和编辑日志edits文件。NameNode也记录着每个文件中各个块所在的数据节点信息，但它并不永久保存块的位置信息，因为这些信息会在系统启动时由数据节点重建。<br>Secondary NameNode最重要的任务并不是为NameNode元数据进行热备份，而是定期合并fsimage和edits日志，并传输给NameNode。这里需要注意的是，为了减少NameNode的压力，NameNode并不会自己合并fsimage和edits，而是将文件存储到磁盘上，交由Secondary NameNode完成。<br>DataNode是文件系统的工作节点。它们根据需要存储并检索数据块(受客户端或NameNode调度)，并且定期向NameNode发送它们所存储的块的列表。<br>客户端(client)代表用户通过与NameNode和DataNode交互来访问整个文件系统。客户端提供一个类似于POSIX的文件系统接口，因此用户在编程时无需知道NameNode和DataNode也可以实现其功能。</p>
<h3 id="NameNode"><a href="#NameNode" class="headerlink" title="NameNode"></a>NameNode</h3><p>HDFS命名空间是文件和目录的层级结构。文件和目录在NameNode上通过inodes表示，inodes记录了各种属性如：权限、修改和访问次数、命名空间、磁盘空间配额。</p>
<h3 id="DataNodes"><a href="#DataNodes" class="headerlink" title="DataNodes"></a>DataNodes</h3><p>DataNode中的每个块副本通过两个原生文件来表示，一个包含数据本身，另一个是文件元数据(包括块数据校验和、块生成戳 generation stamp)。数据文件的大小等于实际块长度，不需要额外空间舍入到传统文件系统中的名义块大小，因此如果块是半满的，就在本地占一半的空间。</p>
<h3 id="HDFS-Client"><a href="#HDFS-Client" class="headerlink" title="HDFS Client"></a>HDFS Client</h3><p>用户应用程序通过HDFS客户端访问文件系统，这是一个程序库，开放了HDFS文件系统接口。</p>
<h3 id="Image-and-Journal"><a href="#Image-and-Journal" class="headerlink" title="Image and Journal"></a>Image and Journal</h3><p>命名空间的image就是文件系统的元数据，将应用数据以目录和文件的形式组织。一条被写入的image持久化记录叫做checkpoint。journal是提前写入的提交日志，是必须被持久化的文件系统修改情况。对于每个客户端启动的事务，所做的修改被记录在journal中，journal文件会在更改提交到HDFS客户端前刷新和同步。</p>
<h3 id="CheckpointNode"><a href="#CheckpointNode" class="headerlink" title="CheckpointNode"></a>CheckpointNode</h3><p>HDFS的NameNode除了服务客户端之外，还可以扮演另外两个角色之一，即CheckpointNode或BackupNode，这在启动时指定。</p>
<h3 id="BackupNode"><a href="#BackupNode" class="headerlink" title="BackupNode"></a>BackupNode</h3><p>和CHeckpointNode类似，BackupNode也有能力创建定期检查点，但除此之外还在内存中维护文件系统命名空间最新的image，这总是和NameNode的状态一起同步</p>
<h3 id="Upgrades-File-System-Snapshots"><a href="#Upgrades-File-System-Snapshots" class="headerlink" title="Upgrades, File System Snapshots"></a>Upgrades, File System Snapshots</h3><p>在软件升级的时候，由于软件bug或人犯错导致系统崩溃的可能性会增加。在HDFS中创建快照的目的就是在升级期间，使对保存在系统中数据的潜在损伤最小化。</p>
<h2 id="2-2-论文核心算法"><a href="#2-2-论文核心算法" class="headerlink" title="2.2 论文核心算法"></a>2.2 论文核心算法</h2><h4 id="The-Hadoop-Distributed-File-System-Yahoo-笔记-知乎"><a href="#The-Hadoop-Distributed-File-System-Yahoo-笔记-知乎" class="headerlink" title="The Hadoop Distributed File System (Yahoo!)笔记 - 知乎"></a><a href="https://www.baidu.com/link?url=zBpkij4sYNFP99V5k41zkLgAe9Wmz7B3pQWmKkRXXus2p_MxCO_UjL5iDo96zw_G&wd=&eqid=f23dd73f000b5b380000000360c7162a"><em>The</em> <em>Hadoop</em> <em>Distributed</em> <em>File</em> <em>System</em> (Yahoo!)笔记 - 知乎</a></h4><h4 id="HDFS-Hadoop-Distributed-File-System-简介-Bob-Liu的…-…"><a href="#HDFS-Hadoop-Distributed-File-System-简介-Bob-Liu的…-…" class="headerlink" title="HDFS(Hadoop Distributed File System)简介_Bob Liu的…_…"></a><a href="https://www.baidu.com/link?url=qdR7pYI7y85J3TqZwpB-UJFWfYABEGYypIuLmTtNmqsInxbtgnVKrQCfoUIHFDXKa3O0iKzkiOl7YNr37YeMaONRoCaRJXX5Ryz_MMH-P73&wd=&eqid=f23dd73f000b5b380000000360c7162a">HDFS(<em>Hadoop</em> <em>Distributed</em> <em>File</em> <em>System</em>)简介_Bob Liu的…_…</a></h4><p>这两个笔记我觉得写的挺好的，可以看看。</p>
<p>当应用程序读一个文件：</p>
<ol>
<li>HDFS客户端要求NameNode提供托管文件块副本的DataNode列表，</li>
<li>直接联系DataNode，并请求需要传送的块</li>
</ol>
<p>当客户端写文件：</p>
<ol>
<li>要求NameNode选择几个DataNode托管第一个文件块的副本</li>
<li>客户端组织node-to-node流水线，并传送数据</li>
<li>当第一个块填入后，客户端要求新的DataNodes来托管下一个块的副本</li>
<li>组织新的流水线，传送数据，每次倾向选择不同的DataNodes</li>
</ol>
<p>客户端、NameNode、DataNodes的交互如下图：</p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203211600459.jpeg" alt="img"></p>
<p>客户端通过把路径传给NameNode来创建一个新文件，NameNode为文件的每个块返回DataNode列表来托管块的副本。客户端然后通过流水线把数据传给选定的DataNodes，这些DataNodes最终将创建块副本的确认信息告诉NameNode。</p>
<p>一个HDFS文件是由块组成的。需要新块时，NameNode会分配一个具有unique block ID的块，并且决策出一个DataNodes列表来处理块副本。DataNodes组成一个管道，其顺序使客户端到最后一个DataNode的总网络距离最小。字节作为分组序列（sequence of packets）被推入流水线。应用程序在客户端写入第一个缓冲区，填充完一个缓冲区（通常64KB）后，数据被推送到流水线。在接收到先前数据包的确认信息之前，可以将下一个分组推送到流水线。未完成分组的数量受客户端未完成分组的窗口大小的限制。</p>
<p>在数据被写入HDFS文件后，HDFS不保证数据对新reader可见，直到文件被关闭。如果用户应用需要这种可见性保证，可以显式调用 <em>hflush</em> 操作。这样当前的分组会立即推送到流水线，hflush操作会等待所有的DataNode确认已经成功传输了分组。所有之前写入的数据就会理所应当地对reader可见。</p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203211600752.jpeg" alt="img"></p>
<p>如果没有错误发生，block construction会像上图一样发生。图2展示了一个有三个DataNodes的管道和5个分组的块。粗线表示数据分组，虚线表示确认信息，细线表示设置和关闭流水线的控制信息。垂直线表示客户端和三个DataNode的活动，时间从上到下依次进行。t0到t1是流水线设置阶段。t1到t2是数据流阶段，t1是首次传输分组的时间，t2是收到最后一个分组确认信息的时间。这里hflush操作将传输第二个分组。hflush指示数据分组传输不是一个分离的操作。t2到t3是流水线关闭阶段。</p>
<hr>
<p>2021&#x2F;7</p>
]]></content>
      <categories>
        <category>Cloud Computing</category>
      </categories>
  </entry>
  <entry>
    <title>小王子</title>
    <url>/2021/01/12/The-Little-Prince/</url>
    <content><![CDATA[<p>阅读原文请点击<a href="https://www.ppzuowen.com/book/xiaowangzi/">小王子</a> .</p>
<p>之前看过几遍《小王子》，虽然每一遍都自以为看的很深入，果然因为人生体验不足，之后随着年龄变大，每次看都仍有不一样的感觉。</p>
<p>这倒使我好奇起来了，我的那本或许现在已经破烂不堪的精美的《小王子》绘本在哪里？如果恰好我把这篇啰啰嗦嗦的文字发给了你，而且那本书恰好在你的手里，你要肯还给我或者借给我，让你给我看看里面的字迹我会非常开心。因为里面夹着我高中每次看过后的读后感，以及莹莹，斌哥留在里面当时关于我问题的解答。其实也不能算作读后感，我这种读者是不招作者喜欢的，我没有能力读懂别人的故事，而是喜欢在看别人东西的时候带入自己的情绪和故事，企图从中找到一些共鸣或者用别人的思路解决自己当下的问题。</p>
<span id="more"></span>

<p>我不太能记得清当时的问题是什么了，但是如果是关于如何证明自己存在，换句话，<strong>找不到活着的感觉</strong>，或许，这篇文章，是对当时问题的一个解答，是划上问题的句号。毕竟我已经找到了答案，也利用这个答案，帮助了自己和最好的朋友。</p>
<p>写下这篇还有个原因，就是隐约感觉或许能帮到还有着同样疑惑的朋友，哪怕一点点，我都觉得挺开心。</p>
<p>这可能是些很冒犯的文字，我只针对我自己，如果触怒了你，希望能得到你的原谅。</p>
<p>这一遍，是因为我想读和小狐狸<strong>驯服</strong>的故事，所以其它都是不太重要的部分，但我仍然按照顺序简单随手记录一下好了。</p>
<h1 id="2-那些不太重要的部分"><a href="#2-那些不太重要的部分" class="headerlink" title="2 那些不太重要的部分"></a>2 那些不太重要的部分</h1><h2 id="2-1-初遇小王子"><a href="#2-1-初遇小王子" class="headerlink" title="2.1 初遇小王子"></a>2.1 初遇小王子</h2><blockquote>
<p>要是你对他们说：“小王子存在的证据就是他非常漂亮，他笑着，想要一只羊。他想要一只小羊，这就证明他的存在。”他们一定会耸耸肩膀，把你当作孩子看待！但是，如果你对他们说：“小王子来自的星球就是小行星B612”，那么 他们就十分信服，他们就不会提出一大堆问题来和你纠缠。他们就是这样的。小 孩子们对大人们应该宽厚些，不要埋怨他们。</p>
<p>……</p>
</blockquote>
<p>人们对未知事物价值的认识，往往容易忽视事物本身，因为不相信自己的判断等原因；转而通过外界的评价来确认事物或者人的价值。对于认清自我来说也是这样。</p>
<blockquote>
<p>“一天，我看见过四十三次日落。”</p>
</blockquote>
<p>一句话就能表达清楚孤独和忧伤，越琢磨，越能感同身受的人，越能体会到感情的厚重，我喜欢这种含蓄的，隐藏其中的简单易读的侧面描写，可惜我的文字为了易读易懂太直白了，显得很粗鲁，有时候让我自己讨厌。</p>
<blockquote>
<p>她<strong>已经精细地做了那么长的准备工作</strong>，却打着哈欠说道：</p>
<p>“我刚刚睡醒，真对不起，瞧我的头发还是乱蓬蓬的……”</p>
<p>……</p>
</blockquote>
<p>真让我喜欢，我喜欢这朵 漂亮的、内心想法太多、言不由衷的、敏感的、傲娇的、可爱的小花<span class="github-emoji" alias="cherry_blossom" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f338.png?v8">&amp;#x1f338;</span>。</p>
<blockquote>
<p>……</p>
</blockquote>
<p>离别真让人伤感，小王子还没有意识到小花有多爱他，他就是小花的全部，没了他，小花还剩下什么？但她又不能挽留，因为这样太自私了，她不能要求小王子像自己，植物，一样陪着自己，静静的活着。她那么脆弱，尽管自己不愿意承认；没有手脚无法移动；花期很短，注定一别就永远不可能相见了。所以不再需要玻璃罩子也就很好懂了，难过，她是不会说出来的。</p>
<hr>
<h2 id="2-2-不同的人"><a href="#2-2-不同的人" class="headerlink" title="2.2 不同的人"></a>2.2 不同的人</h2><p>小王子遇到的各个星球上的大人，他觉得都很古怪，因为他们有着自己觉得重要的、在意的事，他们把一些本不重要的东西看得太重，他们太自以为是了。人嘛，想得简单点，或者说假装想得简单点，骗骗自己，才能更好的享受这个世界。</p>
<blockquote>
<p>“因为花卉是短暂的。”</p>
<p>“什么叫短暂？”</p>
<p>……</p>
</blockquote>
<p>小王子和地理学家的对话，以及对短暂的追问，证实了，他果然不知道离别是什么意思。</p>
<p>我想我和小王子的不同可能是，他铁了心要回去，有回去的办法，虽然不知道是不是成功了；我一直在旅途上，未来的路我有各种选择，我不知道该怎么停下来，也没办法向后转，只能回头看看来时的路。我相信自己会遇上更多的花，那时我应该还是会照顾这些普通又独特的小花，因为这是哪个时候的、<strong>此时此刻</strong>的我，发自内心想<strong>要做</strong>的事。 </p>
<blockquote>
<p>“这颗行星真奇怪！它上面全是干巴巴的，而且又尖利又咸涩， 人们一点想象力都没有。他们只是重复别人对他们说的话……在我的家乡，我有一 朵花。她总是自己先说话……”</p>
</blockquote>
<p>他们总是重复别人对他们说的话，他们总是重复别人做过的事，然后渴望得到一句，<strong>学的真像</strong>（做得真好，你真棒，真厉害），他们总是活在别人的影子里面，沉迷于别人的夸奖，甚至忘记自己喜欢什么，想要什么。连自己喜欢什么都搞不清楚，更别提其它东西了，以房子为例吧。</p>
<blockquote>
<p>如果你对大人们说：“我看到一幢用玫瑰色的砖盖成的漂亮的房子，它的窗户上 有天竺葵，屋顶上还有鸽子……”他们怎么也想象不出这种房子有多么好。必须对 他们说：“我看见了一幢价值十万法郎的房子。”那么他们就惊叫道：“多么漂亮的房子啊！”</p>
</blockquote>
<hr>
<blockquote>
<p>“他们什么也不追随。”扳道工说，“他们在里面睡觉，或是在打哈欠。只 有孩子们把鼻子贴在玻璃窗上往外看。”</p>
<p>“只有孩子知道他们自己在寻找什么。”小王子说，“他们为一个布娃娃花 费不少时间，这个布娃娃就成了很重要的东西，如果有人夺走的他们的布娃娃， 他们就哭泣……”</p>
<p>“他们真幸运。”扳道工说。</p>
</blockquote>
<hr>
<blockquote>
<p>“为什么？”</p>
<p>“因为这就要渴死人了。”</p>
<p>他不理解我的思路，他回答我道：</p>
<p>“<strong>即使快要死了，有过一个朋友也好么！我就为我有过一个狐狸朋友而感到很高兴……</strong>”</p>
<p>“他不顾危险。”我自己思量着，“他从来不知道饥渴。只要有点阳光，他 就满足了……”</p>
</blockquote>
<p>我从来都不指望能有人理解这个，因为确实是自己有问题。说白了，大家更在意的点不一样罢了。</p>
<h1 id="3-正文-驯服"><a href="#3-正文-驯服" class="headerlink" title="3 正文 驯服"></a>3 正文 驯服</h1><h2 id="3-1-第二十章"><a href="#3-1-第二十章" class="headerlink" title="3.1 第二十章"></a>3.1 第二十章</h2><blockquote>
<p>在沙漠、岩石、雪地上行走了很长的时间以后，小王子终于发现了一条大路。 所有的大路都是通往人住的地方的。</p>
<p>“你们好。”小王子说。</p>
<p>这是一个玫瑰盛开的花园。</p>
<p>“你好。”玫瑰花说道。</p>
<p>小王子瞅着这些花，它们全都和他的那朵花一样。</p>
<p>“你们是什么花？”小王子惊奇地问。</p>
<p>“我们是玫瑰花。”花儿们说道。</p>
<p>“啊！”小王子说……。</p>
<p>他感到自己非常不幸。<strong>他的那朵花曾对他说她是整个宇宙中独一无二的一种花</strong>。可是，仅在这一座花园里就有五千朵完全一样的这种花朵！</p>
<p><strong>小王子自言自语地说：“如果她看到这些，她是一定会很恼火……她会咳嗽得 更厉害，并且为避免让人耻笑，她会佯装死去。那么，我还得装着去护理她，因为如果不这样的话，她为了使我难堪，她可能会真的死去……”</strong></p>
<p>接着他又说道：“我还以为我有一朵独一无二的花呢，我有的仅是一朵普通 的花。这朵花，再加上三座只有我膝盖那么高的火山，而且其中一座还可能是永 远熄灭了的，这一切不会使我成为一个了不起的王子……”于是，他躺在草丛中哭 泣起来。</p>
</blockquote>
<p>小王子意识到了自己离开的爱的花并不独特，还是会先从她的视角思考，让我觉得很有爱，<strong>很心动</strong>。</p>
<p>我遗憾的是，小花确实没有骗他，她确实是整个宇宙中独一无二的一种花，因为他们相遇相爱产生了<strong>强烈的联系</strong>，没有任何一朵花，或者任何其它事物和她一样。</p>
<p>尽管小花在他离开已经说过了：</p>
<blockquote>
<p>她终于对他说道：“我方才真蠢。请你原谅我。希望你能幸福。” 花儿对他毫不抱怨，他感到很惊讶。他举着罩子，不知所措地伫立在那里。 他不明白她为什么会这样温柔恬静。</p>
<p>“的确，我爱你。”花儿对他说道：“但由于我的过错，你一点也没有理会。 这丝毫不重要。不过，你也和我一样的蠢。希望你今后能幸福。把罩子放在一边 吧，我用不着它了。”</p>
</blockquote>
<p>小王子此时仍然只看到了花的普通，没有意识到她的独特。他从一开始的相遇，到照顾，到离开，直到现在遇上其它的花们，都完全没有意识到这种独特有多么难得。这让我觉得很遗憾。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">我的叙述被这一段第九章的话打断了，这段小花离别前的花让我动容，我终于还是，要插入小花的几个章节了，这虽然不是我想讨论的主题，但也很重要。但是请注意，原本第二十章和第二十一章是连在一起的。纠结了一下，决定坠在文末了，当作一个补充吧。也不影响读者本来的思路。</span><br></pre></td></tr></table></figure>


<hr>
<h2 id="3-2-第二十一章"><a href="#3-2-第二十一章" class="headerlink" title="3.2 第二十一章"></a>3.2 第二十一章</h2><h3 id="核心，就不加其它格式了，写这么多就是为了这一章节"><a href="#核心，就不加其它格式了，写这么多就是为了这一章节" class="headerlink" title="核心，就不加其它格式了，写这么多就是为了这一章节"></a>核心，就不加其它格式了，写这么多就是为了这一章节</h3><p>就在这当儿，跑来了一只狐狸。</p>
<p>“你好。”狐狸说。</p>
<p>“你好。”小王子很有礼貌地回答道。他转过身来，但什么也没有看到。</p>
<p>“我在这儿，在苹果树下。”那声音说。</p>
<p>“你是谁？”小王子说，“你很漂亮。”</p>
<p>“我是一只狐狸。”狐狸说。</p>
<p>“来和我一起玩吧，”小王子建议道，“我很苦恼……”</p>
<p>“我不能和你一起玩，”狐狸说，“我还没有被<strong>驯服</strong>呢。”</p>
<p>“啊！真对不起。”小王子说。</p>
<p>思索了一会儿，他又说道：</p>
<p>“<strong>什么叫‘驯服’呀？</strong>”</p>
<p>“你不是此地人。”狐狸说，“你来寻找什么？”</p>
<p>“我来找人。”小王子说，“<strong>什么叫‘驯服’呢？</strong>”</p>
<p>“人，”狐狸说，“他们有枪，他们还打猎，这真碍事！他们唯一的可取之 处就是他们也养鸡，你是来寻找鸡的吗？”</p>
<p>“不，”小王子说，“我是来找朋友的。<strong>什么叫‘驯服’呢？</strong>”</p>
<p>“<strong>这是已经早就被人遗忘了的事情，</strong>”狐狸说，“<strong>它的意思就是建立联系</strong>。”</p>
<p>“<strong>建立联系？</strong>”</p>
<p><strong>“一点不错，”狐狸说。“对我来说，你还只是一个小男孩，就像其他千万个小男孩一样。我不需要你。你也同样用不着我。对你来说，我也不过是一只狐 狸，和其他千万只狐狸一样。但是，如果你驯服了我，我们就互相不可缺少了。 对我来说，你就是世界上唯一的了；我对你来说，也是世界上唯一的了。”</strong></p>
<p>“我有点明白了。”小王子说，“有一朵花……，我想，她把我驯服了……”</p>
<p>“这是可能的。”狐狸说，“世界上什么样的事都可能看到……”</p>
<p>“啊，这不是在地球上的事。”小王子说。</p>
<p>狐狸感到十分蹊跷。</p>
<p>“在另一个星球上？”</p>
<p>“是的。”</p>
<p>“在那个星球上，有猎人吗？”</p>
<p>“没有。”</p>
<p>“这很有意思。那么，有鸡吗？”</p>
<p>“没有。”</p>
<p>“没有十全十美的。”狐狸叹息地说道。</p>
<p>可是，狐狸又把话题拉回来：</p>
<p><strong>“我的生活很单调。我捕捉鸡，而人又捕捉我。所有的鸡全都一样，所有的 人也全都一样。因此，我感到有些厌烦了。但是，如果你要是驯服了我，我的生 活就一定会是欢快的。我会辨认出一种与众不同的脚步声。其他的脚步声会使我躲到地下去，而你的脚步声就会象音乐一样让我从洞里走出来。再说，你看！你 看到那边的麦田没有？我不吃面包，麦子对我来说，一点用也没有。我对麦田无动于衷。而这，真使人扫兴。但是，你有着金黄色的头发。那么，一旦你驯服了 我，这就会十分美妙。麦子，是金黄色的，它就会使我想起你。而且，我甚至会喜欢那风吹麦浪的声音……”</strong></p>
<p>狐狸沉默不语，久久地看着小王子。</p>
<p>“请你驯服我吧！”他说。</p>
<p>“我是很愿意的。”小王子回答道，“可我的时间不多了。我还要去寻找朋友，还有许多事物要了解。”</p>
<p>“<strong>只有被驯服了的事物，才会被了解。</strong>”狐狸说，“<strong>人不会再有时间去了解 任何东西的。</strong>他们总是到商人那里去购买现成的东西。因为世界上还没有购买朋友的商店，所以人也就没有朋友。如果你想要一个朋友，那就驯服我吧！”</p>
<p>“那么应当做些什么呢？”小王子说。</p>
<p><strong>“应当非常耐心。”狐狸回答道，“开始你就这样坐在草丛中，坐得离我稍 微远些。我用眼角瞅着你，你什么也不要说。话语是误会的根源。但是，每天，你坐得靠我更近些……”</strong></p>
<p>第二天，小王子又来了。</p>
<p><strong>“最好还是在原来的那个时间来。”狐狸说道，“比如说，你下午四点钟来， 那么从三点钟起，我就开始感到幸福。时间越临近，我就越感到幸福。到了四点 钟的时候，我就会坐立不安；我就会发现幸福的代价。但是，如果你随便什么时 候来，我就不知道在什么时候该准备好我的心情……应当有一定的仪式。”</strong></p>
<p>“仪式是什么？”小王子问道。</p>
<p>“这也是一种早已被人忘却了的事。”狐狸说，“它就是使某一天与其他日 子不同，使某一时刻与其他时刻不同。比如说，我的那些猎人就有一种仪式。他 们每星期四都和村子里的姑娘们跳舞。于是，星期四就是一个美好的日子！我可 以一直散步到葡萄园去。如果猎人们什么时候都跳舞，天天又全都一样，那么我 也就没有假日了。”</p>
<p>就这样，小王子驯服了狐狸。当<strong>出发的时刻就快要来到时</strong>：</p>
<p>“啊！”狐狸说，“<strong>我一定会哭的</strong>。”</p>
<p>“<strong>这是你的过错，</strong>”小王子说，“<strong>我本来并不想给你任何痛苦，可你却要我驯服你……</strong>”</p>
<p>“<strong>是这样的。</strong>”狐狸说。</p>
<p>“你可就要哭了！”小王子说。</p>
<p>“<strong>当然罗</strong>。”狐狸说。</p>
<p>“<strong>那么你什么好处也没得到。</strong>”</p>
<p>“<strong>由于麦子颜色的缘故，我还是得到了好处。</strong>”狐狸说。</p>
<p>然后，他又接着说。</p>
<p>“<strong>再去看看那些玫瑰花吧。你一定会明白，你的那朵是世界上独一无二的玫 瑰。你回来和我告别时，我再赠送给你一个秘密。</strong>”</p>
<p>于是小王子又去看那些玫瑰。</p>
<p>“<strong>你们一点也不象我的那朵玫瑰，你们还什么都不是呢！”小王子对她们说。 “没有人驯服过你们，你们也没有驯服过任何人。你们就象我的狐狸过去那样， 它那时只是和千万只别的狐狸一样的一只狐狸。但是，我现在已经把它当成了我 的朋友，于是它现在就是世界上独一无二的了。</strong>”</p>
<p>这时，那些玫瑰花显得十分难堪。</p>
<p>“你们很美，但你们是空虚的。”小王子仍然在对她们说，“<strong>没有人能为你们去死。当然罗，我的那朵玫瑰花，一个普通的过路人以为她和你们一样。可是， 她单独一朵就比你们全体更重要，因为她是我浇灌的。因为她是我放在花罩中的。 因为她是我用屏风保护起来的。因为她身上的毛虫（除了留下两三只为了变蝴蝶 而外）是我除灭的。因为我倾听过她的怨艾和自诩，甚至有时我聆听着她的沉默。 因为她是我的玫瑰。</strong>”</p>
<p>他又回到了狐狸身边。</p>
<p>“再见了。”小王子说道。</p>
<p>“再见。”狐狸说。“喏，这就是我的秘密。<strong>很简单：只有用心才能看得清。 实质性的东西，用眼睛是看不见的。</strong>”</p>
<p>“实质性的东西，用眼睛是看不见的。”小王子重复着这句话，以便能把它<strong>记在心间</strong>。</p>
<p>“<strong>正因为你为你的玫瑰花费了时间，这才使你的玫瑰变得如此重要。</strong>”</p>
<p>“正因为你为你的玫瑰花费了时间……”小王子又重复着，<strong>要使自己记住这些</strong>。</p>
<p>“<strong>人们已经忘记了这个道理，”狐狸说，“可是，你不应该忘记它。你现在要对你驯服过的一切负责到底。你要对你的玫瑰负责……</strong>”</p>
<p>“我要对我的玫瑰负责……”小王子又重复着……</p>
<hr>
<p>我读的汗毛战栗，甚至热泪盈眶（以及之后作者和小王子的离别），反复读了几遍，还是写不出什么东西，文章交代的已经够直白了。</p>
<p>驯养过的东西，就是你的全部，<strong>活着的证据</strong>就是和<strong>世界建立的无数的千丝万缕的联系</strong>，联系越多越密切，你越能接近世界原本的样子，客观全面的认识，才能克服来自未知的恐惧。而这联系，简单的可以分为，喜欢的事情和喜欢的人。</p>
<p>喜欢的事，如果不以外界评价，仅靠自己来判断，就像之前2.2中交代的那样，对于现在这个阶段的我来说，变难了，搞不清自己喜欢什么确实有点烦。</p>
<p>喜欢的人，对应着自己付出了时间精力的驯服，这使得，我能把你和万千普通的丑陋的人类中区分出来，成为那个珍贵的、宝石一样闪闪发光的独特唯一的你。</p>
<blockquote>
<p>“啊！”狐狸说，“<strong>我一定会哭的</strong>。”</p>
<p>“<strong>这是你的过错，</strong>”小王子说，“<strong>我本来并不想给你任何痛苦，可你却要我驯服你……</strong>”</p>
<p>“<strong>是这样的。</strong>”狐狸说。</p>
<p>“你可就要哭了！”小王子说。</p>
<p>“<strong>当然罗</strong>。”狐狸说。</p>
<p>“<strong>那么你什么好处也没得到。</strong>”</p>
<p>“<strong>由于麦子颜色的缘故，我还是得到了好处。</strong>”狐狸说。</p>
</blockquote>
<p>倘若你投入的感情越多，你的收获就越多，这是很浪漫的，也是痛苦的，但是于我来说，更多的是快乐的。这收获指的并不是简单的来自对方的好感或者依赖，甚至极端一点，和对方都没有什么关系，而是更加唯心一些的联系：<strong>你觉得</strong>对方成为了你生命的一部分，就像小麦能让狐狸想起小王子一样。</p>
<blockquote>
<p>我对麦田无动于衷。而这，真使人扫兴。但是，你有着金黄色的头发。那么，一旦你驯服了 我，这就会十分美妙。麦子，是金黄色的，它就会使我想起你。而且，我甚至会喜欢那风吹麦浪的声音……</p>
</blockquote>
<p>假若，对方也一样，也同你有了一样的收获，互相成了彼此的联系，那真的要恭喜你，因为这种概率实在太小了。你们从此成了<strong>强相关</strong>，彼此的命运线从毫不相关，变成交织在一起。你们在一起的时候，会忘记原来自己在这个世界中是那么的孤独，你们会觉得世界真的很美好，希望在一起的时间越长越好，即便无所事事，一起消磨时间也是快乐的。这时你就会发自内心的感叹：<strong>活着真好！</strong>也就是一开头想说的活着的感觉。</p>
<p>要对自己驯服过的负责到底，因为你是他们存在的强有力的证明，这不能简单理解为负担，也请不要轻易的不负责任想单方面的抹去，因为对两个人来说<strong>都一样</strong>。</p>
<p>而提到的仪式感，我现在的解读，更多是快速形成习惯的方式，让对方融入进自己的生活中。</p>
<p>喜欢的事和喜欢的人，两者<strong>互为基础，相辅相成</strong>。通过发掘爱好，你可以找到更多喜欢的人；通过和喜欢的人建立更密切的联系，你能获得更多爱好，或者加深某些爱好。</p>
<hr>
<h1 id="4-赘述-小花"><a href="#4-赘述-小花" class="headerlink" title="4 赘述 小花"></a>4 赘述 小花</h1><blockquote>
<h2 id="第七章部分"><a href="#第七章部分" class="headerlink" title="第七章部分"></a>第七章部分</h2><p>小王子当时气得脸色发白。</p>
<p>“几百万年以来花儿都在制造着刺，几百万年以来羊仍然在吃花。要搞清楚 为什么花儿费那么大劲给自己制造没有什么用的刺，这难道不是正经事？难道羊 和花之间的战争不重要？这难道不比那个大胖子红脸先生的帐目更重要？如果我 认识一朵人世间唯一的花，只有我的星球上有它，别的地方都不存在，而一只小 羊胡里胡涂就这样把它一下子毁掉了，这难道不重要？”</p>
<p>他的脸气得发红，然后又接着说道：</p>
<p>“如果有人爱上了在这亿万颗星星中独一无二的一株花，当他看着这些星星 的时候，这就足以使他感到幸福。他可以自言自语地说：‘我的那朵花就在其中 的一颗星星上……’，但是如果羊吃掉了这朵花，对他来说，好象所有的星星<strong>一下子全都熄灭了一样</strong>！这难道也不重要吗？！”</p>
<p>他无法再说下去了，突然泣不成声。夜幕已经降临。我放下手中的工具。我 把锤子、螺钉、饥渴、死亡，全都抛在脑后。<strong>在一颗星球上，在一颗行星上，在 我的行星上，在地球上有一个小王子需要安慰</strong>！我把他抱在怀里。我摇着他，对他说：“你爱的那朵花没有危险……我给你的小羊画一个罩子……我给你的花画一副盔甲……我……”我也不太知道该说些什么。我觉得自己太笨拙。我不知道怎样才能 达到他的境界，怎样才能再进入他的境界……唉，泪水的世界是多么神秘啊！</p>
<h2 id="第八章"><a href="#第八章" class="headerlink" title="第八章"></a>第八章</h2><p>很快我就进一步了解了这朵花儿。在小王子的星球上，过去一直都生长着一 些只有一层花瓣的很简单的花。这些花非常小，一点也不占地方，从来也不会去 打搅任何人。她们早晨在草丛中开放，晚上就凋谢了。不知从哪里来了一颗种子， 忽然一天这种子发了芽。小王子特别仔细地监视着这棵与众不同的小苗：这玩艺 说不定是一种新的猴面包树。但是，这小苗不久就不再长了，而且开始孕育着一 个花朵。看到在这棵苗上长出了一个很大很大的花蕾，小王子感觉到从这个花苞 中一定会出现一个奇迹。然而这朵花藏在它那绿茵茵的房间中用了很长的时间来 打扮自己。她精心选择着她将来的颜色，慢慢腾腾地妆饰着，一片片地搭配着她 的花瓣，她不愿象虞美人那样一出世就满脸皱纹。她要让自己带着光艳夺目的丽 姿来到世间。是的，<strong>她是非常爱俏的</strong>。她用好些好些日子天仙般地梳妆打扮。然 后，在一天的早晨，恰好在太阳升起的时候，她开放了。</p>
<p>她已经精细地做了那么长的准备工作，却打着哈欠说道：</p>
<p>“<strong>我刚刚睡醒，真对不起，瞧我的头发还是乱蓬蓬的……</strong>”</p>
<p>小王子这时再也控制不住自己的爱慕心情：<br>“你是多么美丽啊！”</p>
<p>花儿<strong>悠然自得</strong>地说：</p>
<p>“是吧，我是与太阳同时出生的……”</p>
<p>小王子看出了这花儿<strong>不太谦虚</strong>，可是她确实丽姿动人。</p>
<p>她随后又说道：“现在该是吃早点的时候了吧，请你也想着给我准备一点……”</p>
<p>小王子很有些不好意思，于是就拿着喷壶，打来了一壶清清的凉水，浇灌着 花儿。</p>
<p>于是，就这样，这朵花儿就<strong>以她那有点敏感多疑的虚荣心折磨着</strong>小王子。例 如，有一天，她向小王子讲起她身上长的四根刺：</p>
<p>“老虎，让它张着爪子来吧！”</p>
<p>小王子顶了她一句：“在我这个星球上没有老虎，而且，老虎是不会吃草的”。</p>
<p>花儿轻声说道：“我并不是草。”</p>
<p>“真对不起。”</p>
<p>“我并不怕什么老虎，可我<strong>讨厌穿堂风</strong>。你没有屏风？”</p>
<p>小王子思忖着：“讨厌穿堂风……这对一株植物来说，真不走运，这朵花儿真 不大好伺候……”</p>
<p>“晚上您得把我保护好。你这地方太冷。在这里住得不好，我<strong>原来</strong>住的那个地方……”</p>
<p>但她没有说下去。她来的时候是粒种子。她<strong>哪里见过什么别的世界</strong>。她叫人 发现她是在凑一个如此不太高明的谎话，她有点<strong>羞怒</strong>，<strong>咳嗽</strong>了两三声。她的这一 招是<strong>要小王子处于有过失的地位</strong>，她说道：<br>“屏风呢？”</p>
<p>“我这就去拿。可你刚才说的是……”</p>
<p>于是花儿<strong>放开嗓门咳嗽了几声</strong>，依然要使小王子后悔自己的过失。</p>
<p>尽管小王子本来诚心诚意地喜欢这朵花，可是，这一来，却使他马上对她<strong>产 生了怀疑</strong>。小王子对一些<strong>无关紧要的话看得太认真，结果使自己很苦恼</strong>。</p>
<p>有一天他告诉我说：“我不该听信她的话，绝不该听信那些花儿的话，看看 花，闻闻它就得了。我的那朵花使我的星球芳香四溢，可我不会享受它。关于老虎爪子的事，本应该使我产生同情，却反而使我恼火……”</p>
<p>他还告诉我说：</p>
<p>“我那时什么也不懂！<strong>我应该根据她的行为，而不是根据她的话来判断她</strong>。 她使我的生活芬芳多彩，我真不该离开她跑出来。我本应该猜出在她那令人爱怜 的花招后面所隐藏的温情。花是多么自相矛盾！我当时太年青，还不懂得爱她。”</p>
<h2 id="第九章"><a href="#第九章" class="headerlink" title="第九章"></a>第九章</h2><p>我想小王子大概是利用一群候鸟迁徙的机会跑出来的。在他出发的那天早上， 他把他的星球收拾得整整齐齐，把它上头的活火山打扫得干干净净。——他有两 个活火山，早上热早点很方便。他还有一座死火山，他也把它打扫干净。他想， 说不定它还会活动呢！打扫干净了，它们就可以慢慢地有规律地燃烧，而不会突 然爆发。火山爆发就象烟囱里的火焰一样。当然，在我们地球上我们人太小，不 能打扫火山，所以火山给我们带来很多很多麻烦。</p>
<p>小王子还把剩下的最后几颗猴面包树苗全拔了。他有点忧伤。他以为他再也 不会回来了。这天，这些家常活使他感到特别亲切。当他最后一次浇花时，准备把她好好珍藏起来。他发觉自己要哭出来。</p>
<p>“再见了。”他对花儿说道。</p>
<p><strong>可是花儿没有回答他。</strong></p>
<p>“再见了。”他又说了一遍。</p>
<p><strong>花儿咳嗽了一阵。但并不是由于感冒。</strong></p>
<p><strong>她终于对他说道：“我方才真蠢。请你原谅我。希望你能幸福。” 花儿对他毫不抱怨，他感到很惊讶。他举着罩子，不知所措地伫立在那里。 他不明白她为什么会这样温柔恬静。</strong></p>
<p><strong>“的确，我爱你。”花儿对他说道：“但由于我的过错，你一点也没有理会。 这丝毫不重要。不过，你也和我一样的蠢。希望你今后能幸福。把罩子放在一边 吧，我用不着它了。</strong>”</p>
<p>“要是风来了怎么办？”</p>
<p>“我的<strong>感冒并不那么重</strong>……夜晚的凉风对我倒有好处。我是一朵花。”</p>
<p>“要是有虫子野兽呢？……”</p>
<p>“我要是想认识蝴蝶，经不起两三只尺蠖是不行的。据说这是很美的。<strong>不然还有谁来看我呢？你就要到远处去了。</strong>至于说大动物，我并不怕，我有爪子。”</p>
<p>于是，她天真地显露出她那四根刺，随后又说道：<br>“别这么磨蹭了。<strong>真烦人！</strong>你既然决定离开这儿，那么，快走吧！”</p>
<p>她是怕小王子看见她在哭。她是一朵非常骄傲的花……</p>
</blockquote>
<hr>
<p>关于这儿的心路历程看一开头好了。</p>
<hr>
<p>2021&#x2F;1&#x2F;12</p>
<h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><h2 id="和卓琳的讨论"><a href="#和卓琳的讨论" class="headerlink" title="和卓琳的讨论"></a>和卓琳的讨论</h2><p>能有和自己通感的人真好啊，这篇文章写的故事就是我和她过去的互相救赎，能被一眼看出来写的就是自己，坦诚地说出来，一点都不怕我会觉得自作多情什么的，还能零零碎碎，啰啰嗦嗦说一大堆身边的琐事，真好啊。</p>
<h2 id="和莹莹的讨论"><a href="#和莹莹的讨论" class="headerlink" title="和莹莹的讨论"></a>和莹莹的讨论</h2><p>让我对这篇文章有了更多的认识，她说她姐说玫瑰是初恋，狐狸是现任。</p>
<p>我觉得太局限了。</p>
<p>玫瑰和狐狸，只是两个符号而已，它们可以都不存在，也可以存在在一个人身上。</p>
<p>作者写玫瑰，重在指出，<strong>唯一性，是对于主观的唯一，而不是客观的唯一</strong>。</p>
<p>而狐狸呢，更像是一种方法论了，驯服就是投入时间和精力，驯服别人，更重要是驯服了自己。</p>
<p>喜欢风吹麦浪的声音，实在是太浪漫了。</p>
<blockquote>
<p>我对麦田无动于衷。而这，真使人扫兴。但是，你有着金黄色的头发。那么，一旦你驯服了 我，这就会十分美妙。麦子，是金黄色的，它就会使我想起你。而且，我甚至会喜欢那风吹麦浪的声音……</p>
</blockquote>
<p>忍不住想粘贴一首之前写的小诗，异曲同工。<strong>身上竟都是好闻的味道了</strong>，太浪漫了。</p>
<blockquote>
<p>当一个人喜欢你，</p>
<p>她眼中便有了光，</p>
<p>脸庞便有了温热，</p>
<p>嘴唇便有了湿滑，</p>
<p><strong>身上竟都是好闻的味道了。</strong></p>
<p>所有这一切，</p>
<p>都恰到好处。</p>
<p>这光显得特别明亮，</p>
<p>泛出她眼眸边缘的湿润，</p>
<p>误以为她在哭泣。</p>
<p>原来这光，</p>
<p>是我眼中的光。</p>
</blockquote>
<p>注解看《写点小诗吧》。</p>
<hr>
<p>2021&#x2F;3&#x2F;15</p>
]]></content>
      <categories>
        <category>生活和诗歌</category>
      </categories>
  </entry>
  <entry>
    <title>高声大嗓</title>
    <url>/2021/03/15/The-farmer/</url>
    <content><![CDATA[<p>有这么一个农民，外号叫”高声大嗓”，这个外号，是爸妈取的。</p>
<p>他从来没有进过我们家门，每次要不用自行车驮着纤维袋子鼓鼓囊囊装满的洋芋，要不洋芋拉在三轮车上，到了家门口，大声吆喝”取洋芋咯！”他从不担心我们会听不到，因为他的声音能轻松响彻巷子里所有的街坊邻居，轻松盖过各自家里的电视节目声音。这是已经搬迁了的巷子邻居的共同记忆。</p>
<p>20多年前，他胃溃疡萎缩性胃炎严重，看了很多大夫都没用，生命垂危，我爸治好了他。但他只是我爸看无数病人中的一位普通病人。</p>
<span id="more"></span>

<p>因为感激爸爸的救命之恩，20多年来，每年自己种的洋芋成熟的时候，都会留一袋子比较好的用最低廉的价格给我们家送来，从来都没间断过，按我爸妈的话来说，他送的洋芋和市场上卖的区别很大，一点都不麻，又大又好吃。</p>
<p>近些年年，”高声大嗓”说自己年龄大了，60多了，自行车骑不动了，三轮没上牌，城里管的很严去不了。但洋芋每年都给我们留着，要不就找人带，要不就我们自己去取。</p>
<p>之前对此人的了解，只是停留在爸妈口中的人真的很好，现在这样的病人再也没有了，以及每年不用买的洋芋，因为自己在家几乎不做饭，而且从没见过，所以其实印象很浅。</p>
<p>今年因为我回学校晚，为了练练车技，我们全家今天下午开车去他家，甘肃省定西市临洮县龙门镇大宅子村林家嘴，取洋芋。</p>
<h2 id="路上"><a href="#路上" class="headerlink" title="路上"></a>路上</h2><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/image-20210315213535525.png" alt="image-20210315213535525" style="zoom: 50%;" />

<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/image-20210315213608787.png" alt="image-20210315213608787"></p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203150950687.png" alt="image-20210315213626300"></p>
<p>这路，是真的难走，走完盘旋山路，就是更难走的水泥硬化路，全程只能勉强两辆车通过，一侧山体一侧悬崖。再后来，从山上到山脚，索性连路都没有了，导航完全没用，只有拖拉机压出来的黄土，和土墙山坳，全程只允许我的一辆小型车勉强通过，坑洼不平，还有松软的泥泞。我尽可能防止挂到车辆底盘，仍在走错路田间掉头时，陷入了松土中，轮胎空转，爸妈下车推车，再上车时我们三个被轮胎的焦糊味熏得眼睛难受。到了以后，刹车片发烫。</p>
<p>期间因为实在找不到路在哪儿，边走边问路，问了好多村民，最后因为遇上了放学的小学生，恰好也是去林家嘴的，载着她，这才找到庄子。</p>
<p>趟着厚厚的黄土，迎着大风，摸摸索索终于找到了人家。</p>
<p>面朝黄土背朝天，太贴切了。我妈说，如果她有女儿，绝不肯嫁到这种地方来，太苦了。</p>
<h2 id="到了"><a href="#到了" class="headerlink" title="到了"></a>到了</h2><p>我昨晚喝了酒，早上没胃口，中午吃的有点少，开山路集中精力搞得我疲倦，我确实是又累又饿，有点低血糖头晕。</p>
<p>到了以后，风很大土很大，我们三个蓬头垢面，嘴里都沙碌碌的。家里没人，果然去下地干活了，我和我妈都在埋怨为什么我爸不提前打电话。打了电话告知我们已经到了家门口，大爷大娘了然，大娘从山脚一路跑步到了我们面前，气喘吁吁，随后大爷的三轮也回来了。</p>
<p>他们精瘦的体格，黝黑的，深深刻印了皱纹的干枯的皮肤，诉说着地地道道庄稼汉的苦。</p>
<p>进去以后，房屋十分简单，养鸡种地，客厅堆了药材，所以只能去厨房一座。一进门，便是久违的，熟悉的，昏暗潮湿的霉味和炕味。</p>
<p>大娘大爷显然没有料到我们会来，手足无措，按照他们的习惯应该劳作一天，天黑再回家做饭。此时竟不知道该拿什么来招待我们。想擀面做饭，想煮自己家的鸡肉，被爸妈拼命拦下，一来不想麻烦他们，二来太晚天黑了路太难走，太危险，回不去。</p>
<p>所以只泡了茶，因为外出没有生火，当然也没有热水，就用电磁炉烧了敞口的壶。没有小块的冰糖，大块的用手掰不动，大娘只能用菜刀刀背在案板上敲开，结果碎的到处都是，取完整的小块冰糖和放在柜子里的铁罐里的碎茶叶泡了茶。</p>
<p>一进门大娘就开始找所有能让我们带走的东西，找来找去，只找到了之前杀的鸡，和没吃的肉，全装袋子了。</p>
<p>拿出自己种的粮食做的馍，就着这满是土腥味儿的茶，比普洱没洗的味道还要浓好多倍，我吃的十分香甜，真真切切能尝到粮食的香味。估计是看我吃的太投入，饿了。大娘用自己家的鸡蛋做点喝的，根本拦不住，切点小葱，飘在表面，我和我爸一人盛了三个荷包蛋。我觉得小葱很好吃，于是无所事事的我妈在案板下面帮我找了一根。</p>
<p>大娘看到后，说喜欢葱的话还有更新鲜的！二话不说跑去近处的田里，摘了一把，回来洗净一根推搡给我，我已经吃完了，我这样吃不习惯葱的人只吃葱怎么可能吃得下啊。剩下没洗的说什么都要让装走，说吃不完种在盆里也行。看我吃饼吃的很香，又摸出今天带去田里干活还没来及吃的饼，也带走。盛情难却啊。</p>
<p>我终于理解了为什么我爸不肯提前打电话告知了。</p>
<p>天色渐晚，稍微果腹后，我们打算带着洋芋回去。大娘风风火火，不到半个小时庄子的人们都知道秦大夫来了，纷纷围了过来，在村头的路口，一个个都希望看看自己家里的病，其实都是些小病，很快开完药方后，被全庄一起簇拥着，热热闹闹各自说着家长里短，来到了停车的麦场。离开的时候，大爷大娘对我说爷爷死了没叫他们太遗憾了，我结婚的时候一定要叫啊。</p>
<h2 id="离开了"><a href="#离开了" class="headerlink" title="离开了"></a>离开了</h2><p>吃饭的时候，吃完站在院子里逗猫的时候，我看着我爸在村头路上给大家看病的时候，我的眼睛湿润了很多次，尤其是经历过之前一段时间，我对人与人的信任感降到过最低，没想到我这辈子能亲眼见到，亲自感受到如此淳朴善良亲切的人们，没想到这样的人真的存在。我感觉到了从未有过的脚踏实地甚至深深扎根在黄土中的真实，心贴心的开心和感动，即便都是初次相见。我对我的追求产生了深深的动摇，金钱和地位应该可以给我虚荣的快感，更好的生活，更容易交到的朋友，但能给我这种感觉吗，不能。我非常心动，我想，如果纯粹为了这种感觉，而不是为了造福大众这种虚伪的理由，我真的愿意回来做个乡土干部。</p>
<p>但是想了想，太不现实了，我已经出去了，想回来太难了。我能快乐感动一段时间，但是时间长了，我终究做不到没有物欲，此外太不方便和城市化导致住户一直在减少，只有剩下的老人在种田，这样的可爱的偏远的庄子最终还是会消失的，而且或许用不了多少年了。</p>
<p>中国还有无数个这种小村庄，只有在自己最擅长的领域发光发热，为祖国的强大供能，才能最大限度帮助脱贫吧。</p>
<p>多想以后和”人”相处累了，我还能在某个不知道是哪儿的地方找到这种感觉。</p>
<hr>
<p>2021&#x2F;3&#x2F;15</p>
]]></content>
      <categories>
        <category>生活和诗歌</category>
      </categories>
  </entry>
  <entry>
    <title>Typora PicGo GitHub云图床(四)</title>
    <url>/2022/03/21/Typora+PicGo+GitHub/</url>
    <content><![CDATA[<p>前文已经讲述了<a href="https://yongtaiq.github.io/2020/12/03/Code-Markdown-gracefully/">如何优雅的编写Markdown(Markdown&amp;Blog笔记一) </a>，<a href="https://yongtaiq.github.io/2022/03/20/Win10-shortcut-key/">win快捷键 </a>，<a href="https://yongtaiq.github.io/2022/03/21/Typora-Setting/">Typora的设置(Markdown&amp;Blog笔记三) </a>。但是本地图床仍有遗失风险和难以跨设备查看的不足，为了避免图片遗失，增强分享和多端查看的便利性，本文将进一步增强网络图床的配置，实现更进一步的自动化，只需要简单的拖拽或者复制粘贴，一切都很优雅。</p>
<span id="more"></span>

<h2 id="1-GitHub"><a href="#1-GitHub" class="headerlink" title="1.GitHub"></a>1.GitHub</h2><h2 id="1-1创建仓库"><a href="#1-1创建仓库" class="headerlink" title="1.1创建仓库"></a>1.1创建仓库</h2><p>首先选择一个仓库，什么都可以，我选择GitHub。</p>
<p>注册GitHub，<a href="https://github.com/">https://github.com/</a> 创建public仓库，New Repository</p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203211443301.png" alt="image-20220321144313086"></p>
<p>起个名字，我写的是MarkdownPicture选择Public类型，使用“Add a README file”初始化仓库。注意仓库要是public的，不然上传的图片还是无法使用的。Create repository创建就好了。</p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203211448966.png" alt="image-20220321144803632"></p>
<h2 id="1-2在GitHub生成一个token"><a href="#1-2在GitHub生成一个token" class="headerlink" title="1.2在GitHub生成一个token"></a>1.2在GitHub生成一个token</h2><p>点击Settings</p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203211450893.png" alt="image-20220321145015693"></p>
<p>选择”developer settings”</p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203211451474.png" alt="image-20220321145158246"></p>
<p>选择“Personal access tokens ”-&gt;“generate new token”，</p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203211453732.png" alt="image-20220321145302542"></p>
<p>验证密码，note自己备注一下，勾选repo完全控制，修改Expiration有效期为No expiration，滑到最下面，生成个人使用的token，复制此token，只出现一次，别丢了，用于后续图床配置。</p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203211509724.png" alt="image-20220321150935103"></p>
<h2 id="2-PicGo"><a href="#2-PicGo" class="headerlink" title="2.PicGo"></a>2.PicGo</h2><h2 id="2-1-下载部署"><a href="#2-1-下载部署" class="headerlink" title="2.1 下载部署"></a>2.1 下载部署</h2><p>点击<a href="https://www.baidu.com/link?url=aOcVNFeznBqnWXq4EhfQcVEk2587GzwKywb6U4bUSOTuCqKMIxizrg44UfJ-TJx3&wd=&eqid=b65f8679001141b0000000036238215f">图床管理工具:<em>picgo</em></a>官网下载</p>
<p>我安装的是64位安装程序，either way is fine</p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203211457134.png" alt="image-20220321145705932"></p>
<h2 id="2-2-配置picGo-gt-GitHub"><a href="#2-2-配置picGo-gt-GitHub" class="headerlink" title="2.2 配置picGo-&gt;GitHub"></a>2.2 配置picGo-&gt;GitHub</h2><p>在图床设置-&gt;GitHub图床</p>
<ul>
<li><p>仓库名的格式是<code>GitHub用户名\仓库名</code>，前面不用加什么http，后面也不用加.git。</p>
</li>
<li><p>分支名就用默认的主分支<code>master</code>。我喜欢用main都可以。</p>
</li>
<li><p>token上一步在github里生成的token，粘贴过来。</p>
</li>
<li><p>指定存储路径指的是在GitHub仓库里面的路径，我写了<code>img/</code>，所以我的仓库下面会生成一个img目录，所有图片都会上传到这个img目录下。指定存储路径不是必填项，可以不写。</p>
</li>
<li><p>设置自定义域名，记得用cdn加速，否则国内打开图片需要加载很长时间。</p>
<p>格式<code>https://cdn.jsdelivr.net/gh/</code>GitHub用户名<code>/</code>仓库名。</p>
</li>
<li><p>设为默认图床。</p>
</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203301624345.png" alt="image-20220330162435250"></p>
<p>PicGo设置，打开更新，打开上传后自动复制URL，这是我们使用PicGo的原因。</p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203211513795.png" alt="image-20220321151322675"></p>
<p>Typora报错及推荐解决办法：</p>
<ol>
<li><p>时间戳命名打开，不然之后Typora日常使用中容易报错<code>&quot;success&quot;:false,&quot;message&quot;:&quot;upload error.</code></p>
</li>
<li><p>如果<code>Failed to fetch</code>，打开PicGo设置，点击设置Server选项，将端口改为36677端口，这是PicGo推荐的默认端口号，然后保存，成功。</p>
</li>
</ol>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203211520598.png" alt="image-20220321152043494"></p>
<h2 id="3-Typora-lt-gt-PicGo"><a href="#3-Typora-lt-gt-PicGo" class="headerlink" title="3.Typora&lt;-&gt;PicGo"></a>3.Typora&lt;-&gt;PicGo</h2><p>打开Typora，点击弹出框里下方的偏好设置，</p>
<p>打开页面，左侧选择图象，图像里的设置按下设置：</p>
<ul>
<li>设置插入图片时为 上传图片</li>
<li>勾选所有，当然你也可以按需</li>
<li>在上传服务中选择PicGo(app)</li>
<li>在路径中选择 你的PicGo安装目录PicGo.exe</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203211523976.png" alt="image-20220321152330789"></p>
<p>点击验证图片上传</p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203211525622.png" alt="image-20220321152513445"></p>
<p>恭喜你配置成功，此时图已经被推到了GitHub仓库中，而且你粘贴的话，就是返回给你的URL。</p>
<h2 id="4-日常使用"><a href="#4-日常使用" class="headerlink" title="4.日常使用"></a>4.日常使用</h2><p>直接拖拽或者复制粘贴图片到Typora即可，或者把没有上传的图片手动右键上传，PicGo在帮你上传图片的时候会自动打开或者需要你手动打开，在Typora目标位置会自动替换成目标图片URL，非常方便。</p>
<h2 id="5-Blog-Hexo搭建-Markdown-amp-Blog笔记五"><a href="#5-Blog-Hexo搭建-Markdown-amp-Blog笔记五" class="headerlink" title="5.Blog+Hexo搭建(Markdown&amp;Blog笔记五) "></a>5.<a href="https://yongtaiq.github.io/2022/03/21/Blog+Hexo/">Blog+Hexo搭建(Markdown&amp;Blog笔记五) </a></h2><hr>
<h2 id="本系列和所有相关文章目录"><a href="#本系列和所有相关文章目录" class="headerlink" title="本系列和所有相关文章目录"></a>本系列和所有相关文章目录</h2><ol>
<li><a href="https://yongtaiq.github.io/2020/12/03/Code-Markdown-gracefully/">如何优雅的编写Markdown(Markdown&amp;Blog笔记一) </a></li>
<li><a href="https://yongtaiq.github.io/2022/03/21/Latex/">Latex&amp;流程图(Markdown&amp;Blog笔记二) </a></li>
<li><a href="https://yongtaiq.github.io/2022/03/21/Typora-Setting/">Typora的设置(Markdown&amp;Blog笔记三) </a></li>
<li><a href="https://yongtaiq.github.io/2022/03/21/Typora+PicGo+GitHub/">Typora+PicGo+GitHub搭建云端图床(Markdown&amp;Blog笔记四) </a></li>
<li><a href="https://yongtaiq.github.io/2022/03/21/Blog+Hexo/">Blog+Hexo搭建(Markdown&amp;Blog笔记五) </a></li>
<li><a href="https://yongtaiq.github.io/2022/03/20/Win10-shortcut-key/">win快捷键 </a></li>
</ol>
<hr>
<p>2022&#x2F;3&#x2F;21</p>
]]></content>
      <categories>
        <category>Markdown&amp;Blog</category>
      </categories>
  </entry>
  <entry>
    <title>Typora的设置(三)</title>
    <url>/2022/03/21/Typora-Setting/</url>
    <content><![CDATA[<p>这是我的Typora的页面，我喜欢干净整洁，通过简单的设置，右键菜单，和常用<a href="https://yongtaiq.github.io/2022/03/20/Win10-shortcut-key/">win快捷键 </a>可以轻松完成编写，本文一步一步告诉你我是怎么使用Typora的，markdown的缺点是文件支持，设置重点在于<strong>图床</strong>。<br><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203211115065.png" alt="image-20220321111548894"></p>
<span id="more"></span>

<h2 id="1-下载Typora"><a href="#1-下载Typora" class="headerlink" title="1.下载Typora"></a>1.下载Typora</h2><p>百度搜索typora，源码在github，所以可能会慢，也可以挂梯子，either way is fine</p>
<p><a href="https://www.typora.net/">Typora|Typora中文|typora下载|typora 主题</a>中文官网下载</p>
<p><a href="http://yiting.pro/">Typora — a markdown editor, markdown reader. (yiting.pro)</a>原网页</p>
<h2 id="2-Typora设置"><a href="#2-Typora设置" class="headerlink" title="2.Typora设置"></a>2.Typora设置</h2><p>安装完成后，这些是我的设置，我觉得非常顺手，按你的喜好来就行，直接进入<strong>偏好设置</strong>：</p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203211135751.png" alt="982ba7245349cabf1c3b76bb9d37b29"></p>
<p><strong>本地图床设置，很重要，否则有可能会因为移动文件夹或者电脑清理而遗失图片！</strong></p>
<p>首先，养成良好的习惯，选择指定路径，把你的markdown集中保管。按照如图设置，在markdown管理的根目录下创建picture文件夹，然后当你拖拽或者复制粘贴图片进来的时候，typora会自动复制图片到这个文件夹去，然后把相对路径粘贴到你指定的文章位置，很方便。</p>
<p>markdown作为文本标记语言，最头疼的就是管理图片，把它交给typora吧，你就不需要因管理图片而费心思了。</p>
<p>到这儿你实现了图片管理自动化，但不能把包含图片的markdown或者其它导出格式分享给朋友，或者在别的地方查看，更方便的办法就是<a href="https://yongtaiq.github.io/2022/03/21/Typora+PicGo+GitHub/">Typora+PicGo+GitHub搭建云端图床(Markdown&amp;Blog笔记四) </a>，不点击不影响本地配置。</p>
<p>其它不太重要的设置：</p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203211130280.png" alt="image-20220321113005083"></p>
<p>设置 重新打开，自动保存，自动更新；</p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203211131099.png" alt="b87520f2ce9005fd3881a5fc73d8c3d"></p>
<p>我喜欢干净简洁，用一体化，侧边栏折叠，不然乱糟糟的；</p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203211133783.png" alt="6dd2e2595d9eb940e03ea730a7a1c42"></p>
<p>编辑器打开匹配Markdown就可以像写代码时候一样手不用离开键盘去碰鼠标了，这太恼人了，配合快捷键使用 链接；</p>
<p>后面基本不需要什么设置了，保险起见还是贴出来。</p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203211142752.png" alt="59a29211aff71c75382498a8d20f4ac"></p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203211142846.png" alt="26559d405080171560fac7248d6e519"></p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203211142807.png" alt="e48bce4fcc0430357ed1b464b2599fd"></p>
<h2 id="3-浏览器插件支持"><a href="#3-浏览器插件支持" class="headerlink" title="3.浏览器插件支持"></a>3.浏览器插件支持</h2><p>如果你用的是chrome或者chrome内核的edge，比如我，<a href="https://microsoftedge.microsoft.com/addons/detail/copy-as-markdown/immegcobaplfimdjgkabakodipaehfca">Copy as Markdown - Microsoft Edge Addons</a>插件是必装的，你的所有复制行为，自带markdown格式。</p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203211147083.png" alt="image-20220321114716013"></p>
<p>之后我专门出一期如何优雅的全设备使用edge。</p>
<h3 id="恭喜你，到此你的Markdown已经本地化非常好用啦！"><a href="#恭喜你，到此你的Markdown已经本地化非常好用啦！" class="headerlink" title="恭喜你，到此你的Markdown已经本地化非常好用啦！"></a>恭喜你，到此你的Markdown已经本地化非常好用啦！</h3><h2 id="4-Typora-PicGo-GitHub搭建云端图床-Markdown-amp-Blog笔记四"><a href="#4-Typora-PicGo-GitHub搭建云端图床-Markdown-amp-Blog笔记四" class="headerlink" title="4.Typora+PicGo+GitHub搭建云端图床(Markdown&amp;Blog笔记四) "></a>4.<a href="https://yongtaiq.github.io/2022/03/21/Typora+PicGo+GitHub/">Typora+PicGo+GitHub搭建云端图床(Markdown&amp;Blog笔记四) </a></h2><hr>
<h2 id="本系列和所有相关文章目录"><a href="#本系列和所有相关文章目录" class="headerlink" title="本系列和所有相关文章目录"></a>本系列和所有相关文章目录</h2><ol>
<li><a href="https://yongtaiq.github.io/2020/12/03/Code-Markdown-gracefully/">如何优雅的编写Markdown(Markdown&amp;Blog笔记一) </a></li>
<li><a href="https://yongtaiq.github.io/2022/03/21/Latex/">Latex&amp;流程图(Markdown&amp;Blog笔记二) </a></li>
<li><a href="https://yongtaiq.github.io/2022/03/21/Typora-Setting/">Typora的设置(Markdown&amp;Blog笔记三) </a></li>
<li><a href="https://yongtaiq.github.io/2022/03/21/Typora+PicGo+GitHub/">Typora+PicGo+GitHub搭建云端图床(Markdown&amp;Blog笔记四) </a></li>
<li><a href="https://yongtaiq.github.io/2022/03/21/Blog+Hexo/">Blog+Hexo搭建(Markdown&amp;Blog笔记五) </a></li>
<li><a href="https://yongtaiq.github.io/2022/03/20/Win10-shortcut-key/">win快捷键 </a></li>
</ol>
<hr>
<p>2022&#x2F;3&#x2F;21</p>
]]></content>
      <categories>
        <category>Markdown&amp;Blog</category>
      </categories>
  </entry>
  <entry>
    <title>win快捷键</title>
    <url>/2022/03/20/Win10-shortcut-key/</url>
    <content><![CDATA[<p>如果你和我一样是电脑小白，又很烦win10所有事情都强烈依赖鼠标，这些快捷键会让你的体验大幅度提升</p>
<p>前进后退是最常用的我绑定了鼠标<strong>侧键</strong>，当然你也可以用三指触控板</p>
<span id="more"></span>

<h2 id="基本"><a href="#基本" class="headerlink" title="基本"></a>基本</h2><p><strong><code>CTRL</code>+<code>L</code>锁屏</strong></p>
<p><strong><code>WIN</code>+<code>Shift</code>+<code>S</code>截屏</strong></p>
<p><code>PrtSc</code>截屏</p>
<p><code>CTRL</code>+<code>Shift</code>+<code>S</code>浏览器捕获页面，完整截屏</p>
<p><strong><code>CTRL</code>+<code>ALT</code>+<code>DEL</code>任务管理器</strong></p>
<h2 id="切换"><a href="#切换" class="headerlink" title="切换"></a>切换</h2><p><strong><code>ALT</code>+<code>TAB</code> 切换任务</strong></p>
<p><strong><code>CTRL</code>+<code>TAB</code>浏览器中切换标签</strong></p>
<p><code>CTRL</code>+<code>W</code>关闭当前页面或文件</p>
<p>虚拟桌面：</p>
<ul>
<li><p>创建新的虚拟桌面：<code>Win </code>+<code> Ctr</code>l +<code> D</code></p>
</li>
<li><p>关闭当前虚拟桌面：<code>Win</code> + <code>Ctrl</code> + <code>F4</code></p>
</li>
<li><p>切换虚拟桌面：<code>Win</code> +<code>Ctrl</code>+<code>左/右</code></p>
</li>
</ul>
<h2 id="创建和搜索"><a href="#创建和搜索" class="headerlink" title="创建和搜索"></a>创建和搜索</h2><p><code>WIN</code>呼出菜单</p>
<p><strong><code>win</code>+<code>E</code>我的电脑</strong></p>
<p><strong><code>WIN</code>+<code>R</code>运行进Dos什么的</strong></p>
<p><strong><code>WIN</code>+<code>s</code>搜索</strong></p>
<p><strong><code>CTRL</code>+<code>E</code>浏览器中搜索</strong>，不用每次手动定位搜索框</p>
<p><strong><code>CTRL</code>+<code>F</code>本地或本页面搜索</strong></p>
<h2 id="markdown编写"><a href="#markdown编写" class="headerlink" title="markdown编写"></a>markdown编写</h2><p><strong><code>CTRL</code>+<code>/</code>切换源码格式</strong></p>
<p><code>CTRL</code>+<code>E</code>全选当前一行</p>
<p><code>CTRL</code>+<code>D</code>全选当前词语</p>
<p><strong><code>CTRL</code>+<code>B</code>加粗</strong></p>
<h2 id="文本和文件管理"><a href="#文本和文件管理" class="headerlink" title="文本和文件管理"></a>文本和文件管理</h2><p><strong><code>CTRL</code>+<code>S</code>保存</strong></p>
<p><strong><code>CTRL</code>+<code>Z</code>撤销</strong></p>
<p><strong><code>CTRL</code>+<code>X</code>键切</strong></p>
<p><strong><code>CTRL</code>+<code>C</code>复制</strong></p>
<p><strong><code>CTRL</code>+<code>V</code>粘贴</strong></p>
<h2 id="随便截几张图，十分清爽吧"><a href="#随便截几张图，十分清爽吧" class="headerlink" title="随便截几张图，十分清爽吧"></a>随便截几张图，十分清爽吧</h2><p>typora</p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203202207784.png" alt="image-20220320220719612"></p>
<p>浏览器</p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203202205857.png" alt="image-20220320220501601"></p>
<p>桌面</p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202203202205093.png" alt="image-20220320220535720"></p>
<hr>
<p>2022&#x2F;3&#x2F;20</p>
]]></content>
      <categories>
        <category>小技巧&amp;快捷键&amp;命令</category>
      </categories>
  </entry>
  <entry>
    <title>b站更新了win客户端</title>
    <url>/2022/05/12/bilibili/</url>
    <content><![CDATA[<p>好耶！</p>
<ol>
<li>相比网页版，网速流畅大幅度提升，8k网速都不费劲</li>
<li>不用伪装成safari就可以看8K了，但是cpu看8k费劲，电脑的问题，使用习惯兼容网页和手机，硬核会员弹幕都有保留，蛮好的</li>
<li>4k流畅播放，流媒体，客户端的网络优化太棒了</li>
<li>UI有些调整，千呼万唤的黑暗模式，我蛮喜欢的，虽然很像油管，界面相比手机和网页主页简洁干净，双屏体验很好</li>
<li>码率明显高了，cpu负载和视频信息都可以看出来，1080p60hz以上统一，音频码率推到了311kps，无损好耶！视频码率按清晰度来，杜比音效自动打开，hdr自动开启，核显加速，解码效率大幅度提升</li>
</ol>
<span id="more"></span>

<p>2022-05-10 Windows 1.1.0 正式版发布</p>
<p><a href="https://app.bilibili.com/?spm_id_from=333.1007.0.0">哔哩哔哩下载中心 (bilibili.com)</a></p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202205121031542.png" alt="image-20220512103105883"></p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202205121010483.png" alt="image-20220512101035619"></p>
<hr>
<p><a href="https://www.bilibili.com/video/BV1iq4y1R7sd?share_source=copy_pc">https://www.bilibili.com/video/BV1iq4y1R7sd?share_source=copy_pc</a></p>
<p>以下是这段视频我关注的参数</p>
<blockquote>
<p>分辨率@帧率</p>
<p>视频码率</p>
<p>音频码率</p>
</blockquote>
<p>8K帧率低所以码率低，可能是我设备的原因，也可能是B站解码的问题，按理说能推到8K@120hz</p>
<blockquote>
<p>Resolution:7680 x <a href="mailto:&#52;&#x33;&#50;&#x30;&#64;&#51;&#48;&#46;&#48;&#x31;&#57;">&#52;&#x33;&#50;&#x30;&#64;&#51;&#48;&#46;&#48;&#x31;&#57;</a><br>Video DataRate:3609 Kbps<br>Audio DataRate:311 Kbps</p>
</blockquote>
<p>4K</p>
<blockquote>
<p>Resolution:<a href="mailto:&#51;&#56;&#x34;&#48;&#120;&#x32;&#49;&#54;&#x30;&#x40;&#x31;&#49;&#x31;&#46;&#49;&#x31;&#x31;">&#51;&#56;&#x34;&#48;&#120;&#x32;&#49;&#54;&#x30;&#x40;&#x31;&#49;&#x31;&#46;&#49;&#x31;&#x31;</a><br>Video DataRate:11672 Kbps<br>Audio DataRate:311 Kbps</p>
</blockquote>
<p>1080p60hz</p>
<blockquote>
<p>Resolution:1920 x <a href="mailto:&#49;&#x30;&#x38;&#x30;&#64;&#x36;&#x30;&#x2e;&#x31;&#x35;&#48;">&#49;&#x30;&#x38;&#x30;&#64;&#x36;&#x30;&#x2e;&#x31;&#x35;&#48;</a><br>Video DataRate:1541 Kbps<br>Audio DataRate:311 Kbps</p>
</blockquote>
<p>1080p</p>
<blockquote>
<p>Resolution:1920 x <a href="mailto:&#x31;&#48;&#56;&#x30;&#64;&#51;&#x30;&#46;&#x30;&#49;&#57;">&#x31;&#48;&#56;&#x30;&#64;&#51;&#x30;&#46;&#x30;&#49;&#57;</a><br>Video DataRate: 655 Kbps<br>Audio DataRate:311 Kbps</p>
</blockquote>
<p>320kbps水平大概是三分钟的音乐10MB大小</p>
<p>达不到无损，但绝对吊打网页解码，试试就明白了</p>
<hr>
<p>西走菜菜</p>
<p>2022-5-12</p>
]]></content>
      <categories>
        <category>生活和诗歌</category>
      </categories>
  </entry>
  <entry>
    <title>网易云cpu占用太高</title>
    <url>/2022/04/19/cloudmusic/</url>
    <content><![CDATA[<p>网易云你咋那么特殊呢？cpu占用敢不敢再高点?</p>
<p>我说玩游戏随便听个歌，咋帧数就低了。</p>
<span id="more"></span>

<p>不同播放器后台播放</p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202204191037186.png" alt="image-20220419103700506"></p>
<p>该禁用的都禁用了，确实是优化太差</p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202204191043078.png" alt="image-20220419104315969"></p>
<p>如果不禁用，前台播放，有事件响应时，占用率能飙到50%<img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202204191045259.png" alt="image-20220419104552150"></p>
<p>我真服了。</p>
<p>除了生态一无是处就是网易云。</p>
<p>只剩方便，苟延残喘，不思进取。</p>
<p>之前对比过播放无损音源，播放器本身的解析也不行。</p>
<p>被所有音乐播放器吊打也就算了，视频播放器你也干不过，真的不配称作一个音乐播放器，叫你社交软件是不是更合适呢？</p>
<p>CPU都拿去干嘛了？加载广告和主页那些框框？有什么用啊……</p>
<p>能出一个无GUI的网易云吗，真的受够了。</p>
<p>抱怨是因为，我是网易云的资深用户，它作为一个乐播放器，音乐播放的功能做的这么烂，实在是太离谱了。</p>
<p>已提交给网易云。</p>
<p>分场景吧，平时随便用用倒也无所谓了，方便。</p>
<p>测试耳机的时候没有用过网易云，它解析无损音源力不从心；玩游戏时候，后台尽量不用网易云，糟心。</p>
<hr>
<p>2022&#x2F;4&#x2F;19</p>
<p>西走菜菜</p>
]]></content>
      <categories>
        <category>生活和诗歌</category>
      </categories>
  </entry>
  <entry>
    <title>装机(更)</title>
    <url>/2022/04/24/dell7559/</url>
    <content><![CDATA[<blockquote>
<p>笔记本升级时候的抱怨；</p>
<p>常用的装机工具、趣事、阿里云；</p>
<p>日常清灰换硅脂的抱怨。</p>
</blockquote>
<span id="more"></span>

<h2 id="单m2位系统迁移"><a href="#单m2位系统迁移" class="headerlink" title="单m2位系统迁移"></a>单m2位系统迁移</h2><p>咸鱼上蹲到一块1T大白菜m2固态，因为之前chia币矿难，矿盘价格很低，这个不是矿盘健康度很好，读写正常次数。</p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202204241025214.jpg" alt="mmexport1650766681387"></p>
<p>另外电池健康度可怜的只剩18.7%，平时插电源倒没什么影响，拿去开会很不方便。</p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202204241026469.jpg" alt="mmexport1650766692994"></p>
<p>这个dell7559笔记本是16年的老本子了，因为只有一个m2口和磁盘位，手里没有备用盘，迁系统需要从旧固态到机械再从机械到新固态，太不容易了，遇上一大堆问题，简单写写：</p>
<p>1、最大的问题是，电脑冷启动时候因为主板跳过bios自检导致bios根本进不去，只能在点亮系统状态通过高级启动进入BIOS，迁移系统后目标机械磁盘系统无法引导，于是在固态系统开机状态下去设置BIOS引导顺序；</p>
<p>2、dell主板奇怪的格式，稀里糊涂的，改了UEFI，结果BIOS设置错误，引导出错，无法加载系统引导，导致无论是磁盘还是固态还是U盘的系统都进不去；</p>
<p>3、系统完全崩溃的时候开机主板跳过bios自检导致bios根本进不去，因为COMS电池在正面，最后只能通过把电脑完全拆碎，取下主板从正面扣掉CMOS的纽扣电池来重置BIOS，如果不是没辙了，我没见过这台电脑的BIOS纽扣电池，扣下来就能重置；<img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202204241027772.jpeg" alt="1650765753673"></p>
<p>4、电脑显示器不亮、重插排线，调整CMOS电池，这一天半来来回回大拆3次，设计太烂了；</p>
<p>5、点亮显示器，可以进入BIOS（万岁），成功初始化错误设置的bios，迁移两次系统，除了全程手动引导很顺利，怀疑和BIOS恢复正常有很大关系，成功点亮系统。无法自动进入默认系统只能通过F12手动加载系统，最后发现是因为在UEFI主板上，安装系统的固态使用了MBR分区表，修改系统固态索引为GPT后实现系统全自动加载。</p>
<p>到此系统运行稳定且0error，所有软件测试下来和迁移前体验没有区别，顺便更换了电池，新电池和新固态的健康都是极好的。</p>
<p>回顾升级这些年，开局4G内存+1T机械-&gt;2*4G内存+128g固态+1T机械-&gt;2*8G ddr3L1600hz内存+1Tsata协议m2固态+1T机械。</p>
<p>这样，7559就达到了主板能支持的顶配，CPU和GPU都是板载的，无线网卡一般但是够用完全没有升级的必要。我一直是外接屏幕鼠标键盘使用的，本子已经没法再升级，在我心里也从最初的游戏本变为上网本。</p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202204241027806.jpeg" alt="1650765768033"></p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202204241027178.jpeg" alt="1650765765260"></p>
<p>所有软件、记录都很平滑的安全着陆了。</p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202204241028619.png" alt="image-20220424102837816"></p>
<p>系统两次迁移，期间无比艰难，因为出现的这些问题，任何一个，都不属于迁移的问题，问dell技术客服表示无奈，校园电脑修理店只会建议重装系统（但进不去BIOS所以也行不通），在网上搜各种文档没一个能用得上的，所有卡壳的问题，都只能摸摸索索，一点点排列组合问题和解决方法，去看效果，遇上问题解决新问题，愿意花时间精力，一定都能解决的。</p>
<p>换下来的128g固态，闲着也是闲着，也买不上几个钱，就做了固态U盘。</p>
<hr>
<p>2022&#x2F;3&#x2F;5</p>
<hr>
<h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><p>这边是些常用的装机软件和开源软件，<a href="http://www.tbtool.cn/">图吧工具箱 </a>是真的好用。</p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202204241133448.png" alt="image-20220424101435943"></p>
<p>装机经常用的系统版本。</p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202204241039064.png" alt="image-20220424103944961"></p>
<h3 id="说这个其实是因为一件趣事："><a href="#说这个其实是因为一件趣事：" class="headerlink" title="说这个其实是因为一件趣事："></a>说这个其实是因为一件趣事：</h3><p>2021年暑假，我爸和我一样喜欢收垃圾，花了几百块钱白嫖或者收来几大件自己组了个主机玩，结果总是蓝屏，很崩溃，自己搞不定，跑去找电脑店，只会重装系统（小县城遇事只会重装，省略国粹），该蓝屏还是蓝屏。</p>
<p>当时我状态很差，刚逃出来，看到确实有蓝屏的问题，也想着可能是系统问题，重装一下就好了，懒得管这些，就走了。</p>
<p>2022年1月左右回去，我爸说，还是用着用着就蓝屏了。我，嗯？闲着也是闲着，看看吧，一看不要紧，那时还不了解很多装机调试硬件的工具，先把各个系统都装一遍，很多都装不上，太奇怪了；装上一个升级到最新后，面向百度谷歌根据层出不穷的系统报错一点点调，还是没什么用；每个硬件挨个擦拭，（不断插拔排除法）测试，最后发现，有两片内存条，都能用，但副内存条不稳定，不影响开机和使用，但是不稳定。我去，论工具的重要性，我是冤大头。</p>
<p><img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202204241100713.jpg" alt="mmexport1650768489228"></p>
<p>家里很久不用的电视，也利用起来，各种聚合、嗅探、资源网站，直播网站，我的b站大会员，手机投屏，看电影电视剧都很方便，央视提供的流媒体直播体验也蛮不错的。</p>
<p>稍微给爸妈优化一下操作界面，就能轻松使用了，使用门槛比有线电视盒子太低了。</p>
<p>很早就想吐槽一下，有线电视盒子，敢不敢再烂一些？用户体验太糟糕了：</p>
<ol>
<li>复杂的界面，我用不明白，更不用说爸妈爷爷奶奶了，太复杂所以大家都不怎么愿意打开，玩手机更方便，用户体验极差；</li>
<li>吃相难看，臃肿且不自由，那么多界面，随便想看什么非直播节目，都得单次付费，打开电视也没什么可看的；</li>
<li>把电视当成大显示器就好，抛弃有线盒子吧，电视盒子也半斤八两，我个人鄙视闭源，闭源就是圈钱的工具；拥抱开源，成本更低，选择更广，用户体验天差地别，不过近年来中文互联网也被疯狂圈地，开源暗无天日，气人。拥抱开源！</li>
</ol>
<hr>
<h3 id="阿里云和云服务"><a href="#阿里云和云服务" class="headerlink" title="阿里云和云服务"></a>阿里云和云服务</h3><p>再次推荐阿里云，不限速真的好用，2T配合手机、电脑、ipad，太方便了。</p>
<p>我的网速使用的时候，能接受它降低码率的妥协的话，几乎感觉不到本地和云的区别。</p>
<p>我喜欢下载电影、音乐什么的，平时用2T的移动盘。</p>
<p>之前局域网还好，共享很方便，平时电脑在实验室，ipad在宿舍，手机随身，异地访问共享资源池，需要内网穿透，到搭的私有云，很麻烦。</p>
<p>主要阿里云好在两个点：</p>
<ol>
<li>不限速，真的很好；</li>
<li>在线体验很不错，缓冲加载也是可以接受的；</li>
</ol>
<p>提示：所有的商业云环境，不要上传存储任何包含个人信息的文件哦，做好所有资源被别人访问下载的心理准备，当然了，普通数据文件，在资源池建设中会剔除和用户的相关性的，云计算我预测接下来的发展方向是建设公共资源池，数据就是资产，那对于用户来说，最有效的防护手段就是坚持零信任。</p>
<hr>
<p>2022&#x2F;3&#x2F;20</p>
<hr>
<h2 id="换硅脂抱怨"><a href="#换硅脂抱怨" class="headerlink" title="换硅脂抱怨"></a>换硅脂抱怨</h2><p>我最近有留意到我的7559二手市场基础架构，不算内存和固态，目前只要2000左右。之前折腾升级太麻烦，架构设计原因一年一换硅脂需要大卸八块太麻烦，目前已经推到顶配i5-6300，960m，ddr3l的8*2＝16g内存，1tm2固态，1t机械。</p>
<p>之前有想过工作赚钱后，要不要换本子，因为主板问题，cpu和显卡无法再升级，内存也只支持ddr3l1600hz太低了，m2只支持sata协议，960m的显卡打游戏1080p低特效勉强60帧玩新游戏吃力，日常多开使用完全没问题。</p>
<p>现在想明白了，我工作后家庭单位两头跑，必然还是至少需要一枚笔记本的。公司给配或者发了电脑补助，或者不发都不影响什么。</p>
<p>想换机是单纯为了打新出的网络游戏能开高特效，单机游戏还是游戏机更划算一些，在家肯定要一个高分辨率高刷的显示器，公司自然有配显示器。那就家里再配一个性能很好的主机好了，性价比吊打笔记本，这个本子就作为办公本一直用下去吧，写写文档，写写代码，超多进程暴力使用完全不会卡顿，还能玩玩轻度游戏，结实耐用，电源太重的话扔在办公室就行。</p>
<p>系统和常用软件克隆到家里的主机上，一起用微软套件和阿里云同步更新文档，就方便多了。</p>
<p>这次抱怨是因为，换硅脂太麻烦了。dell架构师属实只考虑固件升级，完全不考虑清灰换硅脂。</p>
<p>这边有个视频，电脑内部架构是一样的，我懒得拍，感受一下换硅脂需要全拆的崩溃吧。</p>
<iframe src="//player.bilibili.com/player.html?aid=412913326&bvid=BV1wV411d7PN&cid=182336267&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>

<hr>
<p>2022&#x2F;4&#x2F;24</p>
<p>西走菜菜</p>
]]></content>
      <categories>
        <category>小技巧&amp;快捷键&amp;命令</category>
      </categories>
  </entry>
  <entry>
    <title>关于精力的一些想法</title>
    <url>/2022/04/25/energy/</url>
    <content><![CDATA[<p>这一个月跟着学校的生物钟自己生活规律了一些，醒着的时间变多了，但是很多时候做事感觉力不从心，精力充沛的感觉越来越少，这才慢慢重视起自己的精力来，毕竟长时间不快乐一定会在某个时间点奔溃。</p>
<p>对时间的管理规划有点治标不治本，它是有帮助的，但总有啥也不想干的时候，同时也不是每件事都有足够的精力去做好。精力耗尽会变得情绪暴躁，容易分神。</p>
<span id="more"></span>

<h2 id="周期性消耗周期性补充"><a href="#周期性消耗周期性补充" class="headerlink" title="周期性消耗周期性补充"></a>周期性消耗周期性补充</h2><p>身体的锻炼，中断一个星期，锻炼的好处就会明显下降，因为胳膊再没去打球，一个人跑步有点孤单也不是每天都去，所以那种之前熟悉的倦怠感又来了，我摸了摸右小臂上的肌肉，感觉很可惜。说明身体的精力需要得到补充，昨天跟着视频深蹲挺舒服的，不能打球的时候就跑步居家运动换着来吧。情感也是一样的道理，积极得和别人或者自己进行情感联系能够增加恢复力，多和别人交流，也就是多交些朋友，平时随便的闲聊都有意想不到的好效果。思维上的恢复方法就是不断的智力挑战，比如刷题，看书写心得。精神上我做得很少，操作难度也挺大的，需要时常回顾自己想要的是什么，包括自己最重要的事情，最重要的人，我是不是做到了为自己负责，前一阵子我把自己觉得重要得事情写在A4纸上，挺有效果的。</p>
<p>精力的消耗和补充能形成动态平衡就能活得更舒服一点了，至少不会到某个时间点，或者中途遇到压力就引发奔溃模式。</p>
<p>精力应该用在刀刃上，比如有两个需要大量精力的事，A和B之间有一个间隙，注意力可以好好放松，我发现绘画在这方面帮助挺多的，午觉前看小说（最近在看鼠疫）能帮我快速平静，当然不是那种情节性很强的小说；睡前或者闲暇画画能让我充分休息，顺带发现画美少女是个有待发开的技能，以前只考虑画得像不像，现在需要考虑画的美不美了。</p>
<h2 id="身体的"><a href="#身体的" class="headerlink" title="身体的"></a>身体的</h2><p>睡眠时长和质量，吃饭，包括吃的东西和吃的时间。</p>
<p>只有三餐，时间太长，我发现一个半小时过后就开始饿了，试了一下空气炸锅挺好用的，平时可以自己做点小零食，比如蛋挞，薯条，鸡翅什么的，水果也是一个补充来源，下午来一杯果茶我就很有精神，下个小目标是整一个搅拌机，能平时自己榨果汁，加点冰块，蜂蜜什么的应该很享受，反正在家，不如好好利用一下。咖啡和饮料其实喝的多了会疲劳，爸爸送我的那个尤尼克斯大杯子真不错，打一大杯常温的水能喝一上午。</p>
<p>锻炼方面，高强度的锻炼很解压，之前打网球和羽毛球（比我厉害的人）都挺释放的，现在是短跑冲刺和50次深蹲还有跳绳，跳绳现在跳1000左右刚刚好。</p>
<p>睡觉7小时以上和以下真的是两个状态，睡够了醒来心气很足，而且前一天不开心的事情几乎都会不记得了。中午半小时足够了，不过下午两点左右精力是全天最低，也没有什么办法好像。晚上睡觉前和爸爸聊天，或者看书，都比较放松心情，泡泡脚也是很好的选择。早起喝醪糟，牛奶或者紫菜汤胃都很舒服，也容易清醒。</p>
<h2 id="思想的"><a href="#思想的" class="headerlink" title="思想的"></a>思想的</h2><p>来自对未来的，以及没发生的事情的担忧在这方面消耗掉了我大部分的精力，消极的想法如果能让我意识到我的一些没有满足的重要需求或者现在亟待需要解决的问题其实还好，毕竟能避免掉破坏性的结果，但是如果不是为了解决目前的问题，而是防范式的，那就会消耗精力，毕竟乐观的精神才能更好得迎接挑战。</p>
<p>思考会消耗很多，感觉内耗就是我的性格缺陷，我得一辈子斗争，后果就是创造力底，错误判断多，无法理性得分析问题。回忆一下我有好想法或者和人交往起来很舒服一般都是比较低压轻松的状态，不会想太多。更重要的是，想太多占太多内存思维就僵化了，比如不愿看清现实，听不进去别人的意见，懒得换位思考，不想改变自己的现状等等。</p>
<p>总而言之，思想的精力主要用于安排生活，集中注意力做事，最有助于全身心投入的就是现实主义的乐观精神：时刻看看自己的现实，然后积极得朝自己的目标努力。</p>
<h2 id="情感的"><a href="#情感的" class="headerlink" title="情感的"></a>情感的</h2><p>快乐是一种能力，如今越来越这样觉得，这不是自发得，这也需要努力，情感上精力充沛的最好状态就是自信，能做到自我调整，和别人交往能愉快轻松，比之前包容性，共情能力更强，有耐心，很坦诚，比较欢乐。</p>
<p>消极情感的代价可太高了，很快消耗掉精力，而且很容易传染给别人，让别人焦虑，抵触，消极。和别人积极得交流能够促进情感的正向循环，多鼓励鼓励，夸夸别人，和打球的小妹妹聊聊她得羽毛球比赛夸夸她，和认识的姐姐聊聊她好看之类的，实在不应该带着挑剔的眼光甚至冷漠的眼光都没必要，情感得流动起来才是活的。健康的友谊是一个丰富得源泉，说起这个，不知道是不是以前的朋友看我考试失败挺惨的，平时找我聊天还挺多，这方面我挺感谢他们。另外我和爸爸的关系现在慢慢趋于稳定，安全感也很足，有来有往的，感情起码不再是负担了。</p>
<p>所有愉快的，有成就感的，肯定的活动都会增加积极的情感，平时多找找这样的活动，这是很重要的源泉。</p>
<h2 id="精神的"><a href="#精神的" class="headerlink" title="精神的"></a>精神的</h2><p>精神上的精力涉及到动力毅力，以及方向调整。最好的状态就是对生活充满热情，最差的状态可能就是绝望吧，对未来没有希望，不知道干啥，想自杀。其实挑战自己自满和私利往往能把自己从缺乏精神精力的状态中拉出来，拥有一个值得努力的目标和为自由选择的任务而奋斗就是自由，就能把自己拉出来。太闲会出毛病。不用太关注自己，适当关爱自己，多看看超越自己的目标，多关爱关爱别人就能很好的补充精力了。</p>
<hr>
<p>Sherry</p>
<p>2022-4-25</p>
]]></content>
      <categories>
        <category>Sherry</category>
      </categories>
  </entry>
  <entry>
    <title>读《第一人称单数》</title>
    <url>/2022/03/26/first-person/</url>
    <content><![CDATA[<p>时隔六年村上春树又出新小说了，这是写于2018至2019年的一些短篇小说，可以说都是村上七十多岁写的东西了，但是在他的小说里，主人公永远是年轻人，一个不介意孤独的主角，能自己给自己找乐子，我对着这样的人有着莫名的亲近感。啊对了，村上本人也很健康很自律，给人一种活力充沛的印象，铁人三项的爱好者，果然爱运动的人都很有魅力呢。</p>
<span id="more"></span>

<p>说回正题，这本书总的来说像是回忆的口吻，以老人家的视角来讲年轻人的故事，这些故事都是一些细小细碎的时光碎片或者是真假参半的回忆、不存在的乐评、虚构的短歌诗集……</p>
<p>文体总之非常随意，共同的地方当然就是都选用了第一人称的“我”来讲故事，而且这些故事都和记忆有关系。比如在谢肉祭中：</p>
<blockquote>
<p>那些只不过是我琐碎人生中发生的一组小事，如今看来，是人生中稍微绕点路的插曲。即便没发生那种事，我的人生想必也和此时此刻没太大差别。然而那些记忆，在某个时刻，想必会穿过遥远的漫漫长路前来造访我，并且以不可思议的强度撼动我心。犹如秋末的晚风，卷起森林的树叶，令原野的整片芒草一齐伏倒，用力拍打家家户户的门扉。</p>
<p>……</p>
</blockquote>
<p>这种感觉还挺真实的，人生的密度厚起来这种感觉就会越强烈，记忆的消逝是不可避免的，能想起来的东西在不同的时候感受会大相径庭。</p>
<h2 id="第一篇-石枕上"><a href="#第一篇-石枕上" class="headerlink" title="第一篇 石枕上"></a>第一篇 石枕上</h2><p>大概讲了一个19岁男孩和一个一起打工的女孩共度一晚的故事，他们相遇，做爱，对方留下什么东西，消失，真是典型的村上式故事。这次不同的配件是女生做爱做到高潮时会叫别人名字，同时这个女生在写和歌，那晚之后他们再也没见过面，女孩子留下的一部名为《石枕上》短歌集。</p>
<p>先谈谈我的第一感受，就是两条直线相交于一点，然后离开永不相见。毫无预期得遇到，然后消失不见，那种心情再难复刻。打个比方，大学的我一晚上失眠，爬起来看三体，我还记得那晚上月亮特别亮，非常亢奋得看了一晚上，第二天也完全不困，第一次看三体的这种感觉之后再也没有遇到。后面再想追寻，会有一丝丝无可奈何。</p>
<p>就像文章后面这样写道：</p>
<blockquote>
<p>再从抽屉里取出那本已泛黄变色的歌集重读，究竟有多大的意义和价值，我自己也不明白。老实说，是真的不大明白。但不管怎么样，它都留下了。其他的言语和思绪皆化为飞尘消失无踪。</p>
<p>……</p>
</blockquote>
<p>回忆里常有这样的小玩意，昨晚我还和爸爸聊起去年一年的回忆，他觉得我会忘却，时间越长越会觉得这一年的事情会变得割裂与不真实。也许是这样，但不管怎么样它都留下了，即便诸多思绪和言语都化为飞尘消失无踪。之后的一天我也会感叹，第一次表白亲吻时的那种感觉以后再也没有了，或者是偶尔想起爸爸坐很长时间的公交车来看我的事情，开心得说，原来还有这么多幸福的小时刻。当然难过痛苦的东西也会时不时溜进来，但是这一点上，痛苦难过得时刻回忆起来肯定没有当时那种撕心裂肺的感觉了。</p>
<p>另外关于痛苦的回忆这里扯句题外话，我发现自己一直以来都对挫折反应不当，对痛苦有“战斗或逃跑”的反应：要么反击带来痛苦的事物，要么努力逃避。结果没能找到跨越障碍的有效途径，所以一次次碰到类似的障碍，在成长道路上（都不能说是实现目标的路上了，因为之前就没目标）进步很小或者没有进步。最近看达里奥的《原则》，对这一点更加确定，对痛苦没有认真反思总是让自己被痛苦劫持。</p>
<p>扯远了，关于《原则》我想结合自己之后也写点东西。</p>
<p>文章里里面有一首短歌，让我想到很多：</p>
<blockquote>
<p>你</p>
<p>和我的距离</p>
<p>好像很远吧？</p>
<p>当时是否该</p>
<p>在木星转机？</p>
<p>……</p>
</blockquote>
<p>又是一个对距离的比喻，就像《1973年的弹子球》里声称在火星出生和在土星出生的人，另外《斯普特尼克恋人》中那个距离遥远，环绕地球短暂相会后又彼此分离的人造卫星也与此如出一辙。典型的村上式孤独，小说里男女主人公也是，总想要在别人身上希求些什么，这种寻求的感觉也一直伴随着我，但其实这种寻求感在我看来是非现实性的，因为我自己常常这样想。现实性是很重要的，真的非常重要，现实性和非现实性得共存着来，但是现实性一定是主导。《斯普特尼克恋人》里面对于那种沉溺于非现实的人的刻画十分传神，看的我有些压抑，喜欢非现实的人会一直把自己囚禁在非现实世界，就像斯普特尼克自己的隐喻一样：斯普特尼克是冷战时期军备竞赛苏联发送的第一颗人造卫星，没收回，在太空遨游。而斯普特尼克恋人–堇和敏（姑且说是一对同性恋）如同这颗人造卫星，在非现实性的太空中遨游，无法被现实性的地球收回。生活在现实里，爱具体的人，做具体的事情，双脚伸进泥土里，才能踏踏实实舒舒服服。</p>
<p>最后谈一点对村上小说里面一个我共同的感觉：情节的设置总是人在“正常”的轨道上滑行，忽然莫名得轻微出轨，产生难以言明的异样体验，最后又一次回到正轨。其实这种微妙的偏差也是我追着看村上的原因之一，日常生活中大家都太正常了，生活都差不多，平淡乏味，不可能说对一个陌生人知根知底得了解，看小说时我总有这样的期待:嘿，总要发生点什么吧！</p>
<p>不得不说，这本小说明显能感觉村上老了，小说的中间与结尾部分的感慨部分多了很多，以前的文集可都不是这么感慨万千的，处女座《且听风吟》一股脑得叙事，把光怪陆离，七扭八拐的情节抛出来让读者自己去看，所以看这本书有种这是一本人生积累小册子的错觉。在这些感慨中，我有些特别喜欢的段落：</p>
<blockquote>
<p>迄今为止，我的人生有几个重要的分水岭——恐怕大多数人的人生都是如此。向左或向右，往哪边走都可以。面对这样的时刻，我有时选左，有时选右……然后才有了如今的我。就这样第一人称单数的我实实在在得出现在了这里。要是我在其中任何一处选择了不同的方向，也许就没有今天的我了。</p>
<p>……</p>
</blockquote>
<p>村上29岁走上作家这条路，伴随着神宫球场那颗球写下处女座，在文艺春秋斩获金奖，一晃四十余年，他也没想到这样一个选择把他导向现在。现在活生生站在这里的我就是之前无数决策慢慢雕刻出来的，无论决策质量高低如何，坦诚得完完全全地接受然后继续下去吧。</p>
<hr>
<p>Sherry</p>
<p>2022-3-26</p>
]]></content>
      <categories>
        <category>Sherry</category>
      </categories>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2022/03/09/hello-world/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试，格式0101哦~." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">
  <script id="hbeData" type="hbeData" data-hmacdigest="19429c733dd5dade9a874a46fe10ed7dae240e419a6b637e909277dd1b598aa5">2a1fcbdcb7eb03b565a95d6de79a0002f5271d842644c55201e689c5ff7e762bd96e5bcd5d76221099436b8e4a585406892bac5ac8f6cb3cdc23b786e38237b929d000e5d3becd9384bf22ca319e979b6fc75e7f5e228286efd8cacca2422a8bcae12cda4e62510a83ae9d63f82981f96607c11b2351e8516630f975cedf379322e92e876e00296ebab6999c437346f6b433df928d96799439e9940ceb5e37a4194475c2be85646fcc575e262f7dc683138327ccd68e234202a65f0cb88f3d0cb49e5f286518e75589278c9b28e87fc6b92c6c943880873cfeb822fcdf63ca14e326dcc75685e681e790a9418ee1cdf8badfafaa1addc2d3173412af18b60b6de97535022443aee70d019b64f5fec719c8924249e32488793f0f3e9e378de3b59c07f54d3f5aed4f9570cd7c38d8a9fce9c292735ba2e18f57c33dd012fc2a1cca5a3ad0434ae6b9cb9030280ffb4ed507e847e94c57c9e6ee394ebaea7b484bc053aabdef11531ffe0e9345861e8b4d1d710aa00a1f6bb269ec0f0a58ad504b5737f7aaab092282874dac87829291c7e827c3c8ddad6716a7632ce2fed69703e28577729d642cc62a709704ad1223679d8d3531d0165c05b8ccb5b67d41d9e448c4d76592a71db975035de4130208d31ad85993aef49aeb63910eca17c3216a6db03590e6dc0b58292f6da567f2edfe0796321a7a2e5461c7e123b528c00d5a13109cd8cba32e430311bdc84f50e2061e911ff363a7aa0f421b86c1ab8537ecd91f45faa19a54de7037c646509f5dd03fc8ccc2fc75bef7ae4413e77018c304b68c6697a019a96873dc9ede2adf8eb02e41b74c15de75f84ee54b026292e3abd211102ba62fe3830bcbc2357647525cfae9aadc6d9077baad7932f97fb299c15cfac5d6b7867ac4f936aa85a3cd7f4e5530ae51a1cf6460e7cc11baf2c76b21618d771835ed8c6f2ffc20d043a9a514deecdd203c42df79e46197c62fc27e16318db92e1c3dd413283186f309257b9f67232dbb63a7d5079a7567433116e1cfa28ef193b3535df72b3b64ffffb6899408519d539e32792a97bc84f03ec1c51d7068e05af07f439527110d8f1c50977751f2eab6b99a81e29d5c667b84439f304c50f41934c86a4aeb16b1a54f67492518993a00e3f2af25db2f9ccdaba63dd803b2d5b13f45d8541162b7f319a97d7c6a7f2d5c5c59d6b9d391d96d9436ecca5110757c34e6895f851824bd2a76d04613039b1f11879a450dd012e294085f60a1870ba928d554a3b5612dc5c6a8840af451926766ac58180169b8c0106c93825f0fd21f988a49ec27250d98041f6b5a2a66e5d7d26e31c09eb08b3245eddcca979106ae3b8409c7c28812984a7daeb781a2ddde14d2ed14f596b7265bc78df0f98bb8f18914dc2a88807a41203540c2070d5c7376f7368b101e45fe5a8810bf3720a9e2c1835f7a92ea2529a0681022a8277a81e8b9ccec78b3278e12dbc692b7c47ab14fedfb85af252a1150a4e48c4e6c55a30f1e9d47454140a7002148c1d59c0f45818bbe4ae49620149e24934b90fcf6068c923668a24c19c9661e84886d63ef65dfd71ce247aa5b08a9267709d1060cd203a7720a8c5503a41acfe4e13d5b744df81a562da9c8c582739e261e38f9ba34ace8003f0d385dea3652fd2a692bf2fcf40841a3ffaae9e4137448c270d3a9552e1486db567f1a253929f2df286e8b600786d8bc97a41f8d37cb9b3642fa8dda63356600ac2d4e89414df02bfd829d17f2c9ea287514479b35f4683c362b77892b3cef6dc61df391ec51c73bfa69412503847133f6491bddb7f808eea6308f1ab6a590a9cedbffb9d5cdaab92b9c04e41fb2d138d0edc81a19489acee6ca35f65796d6c4ae294c9dadbebb93150a49b40dba9181f1b079beff8c41063b4352504f2bfde1c17a4007358257e61424a7fb994eccf604e747d837cf9294db68aa63590927d8ac58c7bf0676899687696b403b22d66bb6403c84af5e89689760363bf68ba2eb6da98ae01e2d46d35b300170830dc67319fe55744413c665fc56e30e6981e9b5e6c544c18aeaae6efd2c2f61e9d7e1399e12c85c41925d15b960a52619a96c621b67b95db434511d67b228c2e49eb81aaf5d4b28fa3672b367f110265c94de2c0b5b1e4c40a4d4e0c7d3c5777a9ec306d220a2f5cb1c62bea8699216bd4c32c10383b9eee4185d0e55c2943468ade1282192d42adb17b07e33a8262044e88d45acd094a43aba5d052c2579ac0325aab2eb11d2c2eb4a7262e01ea1035b43dbd079d85552b9f59848d0d3b7bd202f834ac1b38924b2e2c9a3a6589da8cfcd03a79727098182834aa4f014b48586c9966b35c7fa2812f4b339e148d7dc478b0978d856be60c593706ab56dd16ce1b467edc4a406b3a804a37ad14461b2591e18e0adf6b7d775b3ca9350204860d181d27a35c9ca418e1c18ae3127a737e6a96784fc54bf37f2d58711cec2c55c4e4808e373f8429ececef9d9d327bedb05ea85d9dab6aa5b59a78a36974dcac5e0ebbbbea512815d735d25db7fc47fc0101213ee21a975f30de333d5c9c98891eb38a5d68d1d30becfbdbacd2b2f9378989e7d111f3294bc29ce562b2c2e738a35e8ecaf945bb278f8b1f711e512aef36a0637ed95a987f04b8ea29ccf838fd075e3754d414b7bf04f24dcf9332ef72c51cecf2066b542d03ae43bede6da505e6fafbab1c1db48dc3c485fe90181eb371f896a85f2b9f0f9447b32d008e9145341049905dfc5d63d2ae6184ce517d396728e941c8c905991f82cdd592b1652f161763759f834f26bc42affedf18daf5fd8a66a34c3dd6cb4c6baf6dd05eb253cf79242c13ba42ccd761da0c458a484dc2f2d92f87e87bb7afa71e92bd617aa1730fbee15a2307d030143a1c91379fc7783876f741f003e0ea51938d1258f20e2870a0e12e6e1a313b3976e3cd4826f5e1c830291681e1b80af1b5f275b41604497218b4b2ad332fb3ebf2bffcef04f2886e1e529e2ba1bdbb89d3a2013be4415576961c648d6538e9e054d9c8d183f056411a6c30c3ee057ff55f83537f9504ca7a40da90e497f93b255499f454679db28a2039525ac984276d1f7800a152fb88c8372032060fe36b870cd6871856a81e05ae6987ed10cf40c3c1ba93e254ca3bd924168229471f95a97c06b</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-surge">
      <input class="hbe hbe-input-field hbe-input-field-surge" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-surge" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-surge" data-content="还记得我的生日吗？如101(对应1月1号)">还记得我的生日吗？如101(对应1月1号)</span>
      </label>
      <svg class="hbe hbe-graphic hbe-graphic-surge" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">
        <path d="M1200,9c0,0-305.005,0-401.001,0C733,9,675.327,4.969,598,4.969C514.994,4.969,449.336,9,400.333,9C299.666,9,0,9,0,9v43c0,0,299.666,0,400.333,0c49.002,0,114.66,3.484,197.667,3.484c77.327,0,135-3.484,200.999-3.484C894.995,52,1200,52,1200,52V9z"></path>
      </svg>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>博客测试</category>
      </categories>
  </entry>
  <entry>
    <title>学习&amp;知识</title>
    <url>/2022/05/01/knowledge/</url>
    <content><![CDATA[<p>可能是最近习强国等乱七八糟的东西刷多了，觉得在2022年附近的时代背景下，中国的文化氛围中，汉语<code>学习</code>这两个字已经成为了灾难，关于学习的口号泛滥，其当今对于大多数人认知的解释在我看来是非常主观、非常形而上、非常虚伪、非常焦虑功利又盲目的伪命题。</p>
<p>学习本身不是目的，是为了达到某种目的，了解实现所必须的方法，前人或自己探索的经验，这样来描述学习二字可能更为贴切。</p>
<span id="more"></span>

<blockquote>
<p><a href="https://www.baidu.com/link?url=HzsbQpNsbfymx_2K07sGYKiieMkpT9OriVlTe4MKvNdgbWDxgNTbjma3UBGL1zTm6WKywKejPmRiy3ahyErcrtmZv_nXru9qBv5s0IbRVUa&wd=&eqid=e23d0e55002d99fb00000002626e5342"><em>学习</em>_百度百科</a></p>
<p>广义的学习是指人与动物在生活过程中凭借<code>经验</code>产生的行为或行为潜能的相对持久的变化。</p>
<p><a href="http://www.baidu.com/link?url=9MHfYf2vWqKJXkRyw5eU0xsB_Jv232LjBsxbTrrUpjnR378aKDmVRGk4FO-1nrroJw82-LcSTeBiAHXH7dmt2fO3-5PsohXyYm5cZZXgDTS"><em>学习</em>(汉语词语) - 百度百科</a></p>
<p><em>学习</em>，是指通过阅读、听讲、思考、研究、实践等途径<code>获得知识</code>的过程。</p>
</blockquote>
<p>这两条我部分赞同，因为必须对知识加以特别说明和界定。</p>
<p>这里指的经验及知识，并不是<code>know sth.</code>而应该是<code>know how to do sth.</code></p>
<p>换言之，学习，就是为了达到某种<code>目的</code>而了解自己所需要的<code>知识</code>。除此以外，无论对于事件本身还是对于人的天性，都是浪费时间精力。</p>
<blockquote>
<p><a href="https://baike.baidu.com/item/%E7%9F%A5%E8%AF%86/74245">知识（词语解释）_百度百科 (baidu.com)</a> </p>
<p>知识是符合文明方向的，人类对<a href="https://baike.baidu.com/item/%E7%89%A9%E8%B4%A8%E4%B8%96%E7%95%8C/2792719">物质世界</a>以及<a href="https://baike.baidu.com/item/%E7%B2%BE%E7%A5%9E%E4%B8%96%E7%95%8C/9653776">精神世界</a>探索的结果总和。</p>
<p>知识，也没有一个统一而明确的界定。但知识的价值判断标准在于实用性，以能否让人类创造新物质，得到力量和权力等等为考量。</p>
<p>知识的概念是哲学认识论领域最为重要的一个<a href="https://baike.baidu.com/item/%E6%A6%82%E5%BF%B5">概念</a>, 有一个经典的定义来自于<a href="https://baike.baidu.com/item/%E6%9F%8F%E6%8B%89%E5%9B%BE/85471">柏拉图</a>：一条陈述能称得上是知识必须满足三个条件，它一定是被验证过的，正确的，而且是被人们相信的 。<a href="https://baike.baidu.com/reference/74245/1922yeW4XTMxZ4lISufF_IdUKDZk8baRbsUJh63TcXkBt5FIYVCOLkid6gqIBHymsdRQkDMBgefO11asQPzW2FL6v8_5Ll6UlFbLtZo">Epistemology (认识论）</a></p>
<p>这也是科学与非科学的区分标准。由此看来，知识属于文化，而文化是感性与知识上的升华，这就是知识与文化之间的关系。有关于知识的悖论是：知识如果不能改变行为，就没有用处；但是知识一旦改变了行为，知识本身就立刻失去意义——《未来简史》。</p>
</blockquote>
<p>这个知识的解释，价值强调实用性，对于学习（知识）来说，我是比较满意的，知识，本身就是目的性极强的实用主义的文化形式的行为指导。</p>
<p>但若要单独拿出来作为一个独立的词语knowledge，也就是说除学习（限定作用范围）以外，太过于狭隘（方法论），我倾向于用认知（know what而不是know how）来解释，普适意义的知识。</p>
<hr>
<p>2022-5-1</p>
<p>西走菜菜</p>
]]></content>
      <categories>
        <category>生活和诗歌</category>
      </categories>
  </entry>
  <entry>
    <title>杂谈</title>
    <url>/2022/04/11/loneliness&amp;earphones/</url>
    <content><![CDATA[<p>几年前考研的时候，我一直是一个人复习，我觉得很孤独，很多时候很羡慕宿舍他们四个一起复习。</p>
<p>我本来以为，考完研，生活正常了，就不会一个人了，现在看来，那时候才是面对自己一个人生活的开始。</p>
<span id="more"></span>

<blockquote>
<p>孤独才是人生常态啊。</p>
</blockquote>
<p>感悟越来越深了，真是的。<br>研一交了几百个新朋友，也丝毫没有缓解这种孤独感，反而越来越严重了，这个问题本身似乎是无解的，想通过摆脱一个人的状态脱离孤独感不现实。</p>
<p>给自己找点事做，树立一个短期目标然后追逐，忙到忘了自己还活着，也忘记自己孤独的感受，让感受主动敲自己的内心之门，而不是自己主动花精力去感受，生活就正常了，麻木了，人却活得很舒服，说来真是奇怪。人和自己的感受，很难共存。</p>
<hr>
<p>关于耳机，圈内玩过些年，以前小的时候对异性朦胧的好奇和向往，潜意识喜欢<code>女毒</code>，耳机和音乐中<code>延展</code>、<code>泛音</code>、<code>明亮</code>、<code>通透</code>、<code>轻盈自然</code>很容易就能打动我，当时甚至喜欢过<code>陌生人妻</code>……可想而知是什么样的偏好。</p>
<p>也喜欢过动次打次，鼓点，低频<code>温暖厚实</code>、<code>下潜巨大</code>、<code>层次丰富</code>不能糊。</p>
<p>后来嫌累，就听细节多的交响或者小编制协奏多了，也入手了第一个平板振膜结构的大耳。</p>
<p>托它的福，现在喜欢地摊儿平头塞子，大耳压发型而且我的都是开放式实验室会打扰别人，入耳入门的也被舍弃了，喜欢白开水，喜欢平头塞。</p>
<p>题外话，大家都说平头塞带着不舒服，其实多半是因为你没有加海绵，想象一下没有硅胶哥套或者C套的入耳直接戳你耳朵里除非是私模，好可怕，多痛苦啊……</p>
<p>可惜现在很多厂商都不做了，伤感。</p>
<p>耳机有些<code>动态</code>，<code>通透宽松自然</code>很重要，<code>解析</code>不用太强，随便听听不想累，音乐口味清淡一些比较好，以前电源+播放+解码+耳机多好都觉得差意思，现在百十来块就很能满足了，尖尖的女声不太能接受，太吵了也会不舒服。</p>
<hr>
<p>2022&#x2F;4&#x2F;11</p>
<p>西走菜菜</p>
]]></content>
      <categories>
        <category>生活和诗歌</category>
      </categories>
  </entry>
  <entry>
    <title>关于异地恋</title>
    <url>/2022/04/08/long-distance-romance/</url>
    <content><![CDATA[<p>昨天晚上看《东京爱情故事》，女主太可爱了，很久没有看过这么甜的恋爱剧了，晚上就做了一个美梦，和自己心爱的人在一起的感觉真好。这个时代可真苛刻。</p>
<span id="more"></span>

<p>今年爸爸走了之后才真正对异地恋有了比较深的体会，主要有两方面的感受。</p>
<p>一方面是对在一起这个概念有了具体的认识，我真正和爸爸在一起能想象到的样子就是：</p>
<ul>
<li>物理上不异地了，能住在一起，经常出去约会，比如一起去打球，一起去吃好东西，一起学点新东西乱七八糟的什么都行</li>
<li>心理上也完完全全锁定了，对其他异性没什么勾搭的欲望</li>
<li>各自的朋友圈，关系网都能知道对方的存在</li>
<li>钱也能一起算了，有大额支出互相商量什么的。</li>
</ul>
<p>这是我期望中的日子，我会一直为这个目标做自己的努力。</p>
<p>第二个方面就是觉得异地恋就不是恋爱形态，确实有点反人性……但是异地的时候不要觉得自己在恋爱可能轻松一点，我时常觉得，爸爸住在电话里，没有回应的时候就消失了。我有男朋友，但是男朋友时不时就消失了。我好恋爱脑啊……如今慢慢能接受一个人有着大体不变的倾向，爸爸一直对我很好，不可能突然就变成一个不在意我的人。距离本身阻碍了互相的关心，如果互相之间的感情对彼此是一个希望，推动作用就是非常好的了，当然人不可能时时刻刻受希望鼓舞着，异地带来的遗憾和孤独不成为侵蚀自己的毒药就很好了。</p>
<p>无条件的信任能够让我不那么关注异地这个东西，爸爸是一个相对来说成熟的人，起码重要的事情上一直都是告诉我实话，知道什么时候该哄我，什么时候该说真话，能够说到做到。这让我很安心。我很难说我和爸爸相爱的时机对不对，缘分走到这儿了，因为我悟出来异地最关键的一点在于<strong>尽量不要处在巨大的压力之中。</strong>我以前过于自信，觉得自己努力了就能够着自己想要的东西，环境对人的影响可太大了，压力特别大的时候，人为了适应环境什么都做得出来，这个时候别说爱情了，理想，道德之类的都会变得无比脆弱。今年我也是在有意识调整自己的生活方式，尽量丰富点，能大部分时候保持平静，偶尔开心。</p>
<p>毕竟异地完全就是环境的错，我要是结束了异地估计和爸爸的感情会越来越顺了吧，实在想不出还有什么恐怖的困难。所以多数时间我关心的就是怎么在现有的条件下跳出来，赚到钱，为结束异地做准备。</p>
<p>鲁迅说过（真说过）：人必生活着，爱才有所附丽。我很喜欢和爸爸在一起的我自己，这是最关键的一步，我喜欢自己，喜欢爸爸，往后有了钱提升了生活品质会加速这种良性循环。</p>
<hr>
<p>Sherry</p>
<p>2022&#x2F;4&#x2F;8</p>
<hr>
<p>我们98年独生子女这一代人真的太不容易了，这个时代对我们太苛刻太残忍了。</p>
<p>学生时代，在别人的庇护下，看过了时代红利中遍地是机遇，看过了外面世界的精彩，看过了国家飞速发展人人都能就业，我们对国家充满信心，对自己的社会人生充满期待。</p>
<p>当我们比其它时代人在学校消耗了自己更长的人生终于毕业后，发现现实却是，我们赶上了独生子女，赶上了老龄化，赶上了城市化，赶上了房价飞涨，赶上了科教兴国，赶上了时代红利逐渐消失，经济环境持续变差，赶上了后疫情中就业，编织工作难求，私企裁员严重。</p>
<p>泡沫破裂，梦被撕碎，国家终究仍处于并将长期处于社会主义初级阶段，百年大计勉勉强强全面小康，如何能求得逆城市化和共同富裕呢？破点容易，成面难啊。</p>
<p>我们都被故乡抛弃，但是不被新的地方接纳，我们都是98年的孤儿。</p>
<p>想要有个能住的地方、想和自己喜欢的人在同一个地方、想要找到一份正常的工作都是很难的。</p>
<p>急于解决这些问题压力太大了，而且不现实，更没有必要背负在自己身上。不管怎么说，人的生命都是自己的，我爱你，所以更希望我俩能先想办法过好自己，然后一步一步走到一起。</p>
<p>这个你觉得好玩那我就加到这儿吧。</p>
<p><a href="https://leetcode-cn.com/problems/intersection-of-two-linked-lists/">160. 相交链表</a></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"> <span class="comment">//A: a, c, b, meet</span></span><br><span class="line"> <span class="comment">//B: b, c, a, meet</span></span><br><span class="line"> <span class="comment">//because a+c+b==b+c+a</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> ListNode <span class="title function_">getIntersectionNode</span><span class="params">(ListNode headA, ListNode headB)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(headA==<span class="literal">null</span>||headB==<span class="literal">null</span>)<span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        ListNode you=headA,she=headB;</span><br><span class="line">        <span class="keyword">while</span>(you!=she)&#123;</span><br><span class="line">            <span class="comment">// 若是有缘，早晚相遇;</span></span><br><span class="line">            <span class="comment">// 当你走到头，去重走她来时的路;</span></span><br><span class="line">            <span class="comment">// 当她走到头，也重走你来时的路;</span></span><br><span class="line">            <span class="comment">// 一路上，时而你踩着她的影子，时而她踩着你的影子;</span></span><br><span class="line">            <span class="comment">// 而缘分本身，就是能够坚持一直走下去。</span></span><br><span class="line">            you= you==<span class="literal">null</span>? headB: you.next;</span><br><span class="line">            she= she==<span class="literal">null</span>? headA: she.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> you;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<p>西走菜菜</p>
<p>2022&#x2F;4&#x2F;8</p>
<hr>
<p>昨晚和莹莹细聊为啥我们这一代人和父母长辈很难互相理解呢？</p>
<p>国家在<code>社会主义初级阶段的主要矛盾</code>中已经回答了这个问题：</p>
<blockquote>
<p><strong>人民日益增长的物质文化需要同落后的社会生产之间的矛盾</strong></p>
<p>1981年十一届六中全会</p>
<p><strong>人民日益增长的美好生活需要和不平衡不充分的发展之间的矛盾</strong></p>
<p>2017年十九大报告</p>
</blockquote>
<p>我们天生就对国家、人生抱有过高的期待，一直在学校里，但是听到看到的信息相比上一辈太广了。</p>
<p>爷爷奶奶辈经历过抗战和建国，期望是和平安稳、吃饱穿暖；</p>
<p>父母辈生于苦难的六七十年代，百废待兴，处于社会主义的探索时期，经历过动荡二十年、改革开放、上山下乡、科教兴国高考改革、城市化，期望是不被饿死，有份体面的”城里的”工作，从广大农村人变成城市人。</p>
<p><strong>人民日益增长的物质文化需要同落后的社会生产之间的矛盾</strong>，指的就是父辈，他们吃穿用，需求量增加，对消费产品的需求增加，产业和市场严重不匹配，到现在依然如此。</p>
<p>我辈前面已经说过了，期望也发生了变化，像我们小县城走出来的大多数同辈人，看过了快速发展的一线城市，不满足于重回四五线县城，广大偏远农村普遍凋零就更不用提了，大家的期望是去到省级单位或者至少市级单位，当了二十多年的尖子生，理所当然的觉得，毕业后能在当地有中等偏上的社会地位，还不错的收入。实则太不容易了，所以父母辈想都没想过。</p>
<p><strong>人民日益增长的美好生活需要和不平衡不充分的发展之间的矛盾</strong>，美好生活就是科教兴国和人口红利产生了过高的期待，不平衡不充分的发展指经济特区、城市化，极速发展起来的一两个点让绝大多数没什么发展的面都看到跨世纪般的差距，矛盾就是泡沫，就是不匹配。</p>
<p>等独生的我们到了中年、多兄弟姐妹的父辈全部到了老年退休，大概是2020~2040矛盾不断凸显，这期间各种政策类似：延迟退休，鼓励退休再就业再创业、取消或者降低养老金，事业编制改革只保留极少部分编织，拖住就是胜利，只要拖到人口结构好转（父辈去世、我们退休、我们的孩子进入社会）就基本解决了全面计划生育带来的问题。</p>
<p>预计2030~2035年，绝大多数压力落到了我辈身上，所以主要矛盾长期不变（除非发展面，而不是点）的前提下，增加说给我们听的次要矛盾：<strong>人民对更美好生活的向往和落后传统观念之间的矛盾</strong>：所有人要自食其力靠自己养活，无论年轻人还是老年人都不能指望国家政府发钱，老年人不能指望年轻人帮自己养老，买房、就业困难请自行在当地重新发展建设没落的农村及其它广大二三线地区，到最需要的地方去，一线已经饱和不欢迎你。</p>
<p>我爱国家。直面困难，敢于批评与自我批评。</p>
<hr>
<p>西走菜菜</p>
<p>2022&#x2F;4&#x2F;9</p>
]]></content>
      <categories>
        <category>Sherry</category>
      </categories>
  </entry>
  <entry>
    <title>尝试一下uTools(更)</title>
    <url>/2022/04/20/uTools/</url>
    <content><![CDATA[<p><a href="https://u.tools/">uTools</a>是一个效率提升的工具。</p>
<p>使用一段时间之后慢慢更新。</p>
<span id="more"></span>

<p>之前觉得很麻烦，而且没有必要，就懒得弄了。今天尝试了一下，所有功能都是win自带或者其它可以替代，优点在于聚合，所以很方便。</p>
<p>后端是一个插件聚合的工具，看了看，更新和插件内容很丰富，质量很不错，资源占用率目前有待测试。</p>
<p>常用的很多插件也是我常用的开源工具。</p>
<p>前端主要两种方式，随便举例一下：</p>
<ol>
<li>搜索框<img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202204201648900.png" alt="image-20220420164551325" style="zoom: 25%;" />功能很强大，很方便</li>
<li>超级面板<img src="https://cdn.jsdelivr.net/gh/YongtaiQ/Markdown_Picture/img/202204201647305.png" alt="image-20220420164707938" style="zoom:33%;" />方便，会根据选择文件不同而不同</li>
</ol>
<iframe src="//player.bilibili.com/player.html?aid=504310921&bvid=BV1eg411M7TZ&cid=374628689&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>


<hr>
<p>2022&#x2F;4&#x2F;20</p>
<p>西走菜菜</p>
]]></content>
      <categories>
        <category>小技巧&amp;快捷键&amp;命令</category>
      </categories>
  </entry>
</search>
